IF OBJECT_ID('dbo.BRM_RULES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULES;
GO

CREATE TABLE dbo.BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID INT NULL,                      -- Reference to a rule group (if applicable)
    PARENT_RULE_ID INT NULL,                  -- For hierarchical rules
    RULE_TYPE_ID INT NOT NULL,                -- Type of rule (e.g. SQL, DecisionTable)
    RULE_NAME VARCHAR(255) NOT NULL,          -- Name of the rule
    RULE_SQL VARCHAR(MAX) NULL,               -- The SQL statement (if applicable)
    EFFECTIVE_START_DATE DATETIME NULL,       -- Rule’s effective start date
    EFFECTIVE_END_DATE DATETIME NULL,         -- Rule’s effective end date
    STATUS VARCHAR(50) NOT NULL,              -- e.g., ACTIVE, INACTIVE, PENDING
    VERSION INT NOT NULL DEFAULT 1,           -- Version number for change tracking
    CREATED_BY VARCHAR(100) NOT NULL,         -- Creator of the rule
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),  -- Creation timestamp
    UPDATED_BY VARCHAR(100) NULL,             -- Last updater (if any)
    DESCRIPTION VARCHAR(MAX) NULL,            -- Detailed description
    OPERATION_TYPE VARCHAR(50) NULL,          -- e.g., SELECT, INSERT, UPDATE, DELETE, DECISION_TABLE
    BUSINESS_JUSTIFICATION VARCHAR(MAX) NULL, -- Justification text for the rule
    OWNER_GROUP VARCHAR(100) NOT NULL,        -- Business group owning the rule
    CLUSTER_NAME VARCHAR(100) NULL,           -- Cluster name (if used)
    APPROVAL_STATUS VARCHAR(50) NOT NULL,     -- e.g., APPROVED, APPROVAL_IN_PROGRESS, REJECTED
    IS_GLOBAL BIT NOT NULL DEFAULT 0,         -- 1 if global, 0 otherwise
    CRITICAL_RULE BIT NOT NULL DEFAULT 0,       -- 1 if rule is critical
    CRITICAL_SCOPE VARCHAR(50) NULL,          -- Scope for critical rules (e.g., GROUP, GLOBAL)
    CDC_TYPE VARCHAR(50) NOT NULL DEFAULT 'NONE',  -- Change Data Capture type if applicable
    LIFECYCLE_STATE VARCHAR(50) NOT NULL DEFAULT 'DRAFT',  -- Current lifecycle state
    DECISION_TABLE_ID INT NULL,               -- Foreign key if using decision table logic
    ENCRYPTED_FLAG BIT NOT NULL DEFAULT 0,      -- 1 if the rule’s SQL is encrypted
    LOCKED_BY VARCHAR(100) NULL               -- Current lock owner (if locked)
);
GO
-- Clear existing test data for BRM_RULES (for testing purposes)
DELETE FROM dbo.BRM_RULES;
GO

-- Sample 1: Customer Insert Rule – not locked
INSERT INTO dbo.BRM_RULES 
  (GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL, EFFECTIVE_START_DATE, EFFECTIVE_END_DATE, STATUS, CREATED_BY, OWNER_GROUP, APPROVAL_STATUS, OPERATION_TYPE, DECISION_TABLE_ID, LOCKED_BY)
VALUES 
  (1, NULL, 1, 'Customer Insert Rule', 
   'INSERT INTO Customers (Name, Email) VALUES (''TestName'', ''test@example.com'')', 
   '2025-01-01', '2025-12-31', 'ACTIVE', 'JohnDoe', 'BG1', 'APPROVED', 'INSERT', NULL, NULL);
GO

-- Sample 2: Order Update Rule – locked by 'Admin'
INSERT INTO dbo.BRM_RULES 
  (GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL, EFFECTIVE_START_DATE, EFFECTIVE_END_DATE, STATUS, CREATED_BY, OWNER_GROUP, APPROVAL_STATUS, OPERATION_TYPE, DECISION_TABLE_ID, LOCKED_BY)
VALUES 
  (1, NULL, 1, 'Order Update Rule', 
   'UPDATE Orders SET Status=''Processed'' WHERE OrderID=123', 
   '2025-01-01', '2025-12-31', 'ACTIVE', 'JaneSmith', 'BG1', 'APPROVED', 'UPDATE', NULL, 'Admin');
GO

-- Sample 3: Select Report Rule – not locked
INSERT INTO dbo.BRM_RULES 
  (GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL, EFFECTIVE_START_DATE, EFFECTIVE_END_DATE, STATUS, CREATED_BY, OWNER_GROUP, APPROVAL_STATUS, OPERATION_TYPE, DECISION_TABLE_ID, LOCKED_BY)
VALUES 
  (2, NULL, 1, 'Select Report Rule', 
   'SELECT * FROM Reports WHERE Date > GETDATE()', 
   '2025-01-01', '2025-12-31', 'INACTIVE', 'BobBrown', 'BG1', 'PENDING', 'SELECT', NULL, NULL);
GO

-- Sample 4: Decision Table Rule – not locked (DECISION_TABLE_ID=1)
INSERT INTO dbo.BRM_RULES 
  (GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL, EFFECTIVE_START_DATE, EFFECTIVE_END_DATE, STATUS, CREATED_BY, OWNER_GROUP, APPROVAL_STATUS, OPERATION_TYPE, DECISION_TABLE_ID, LOCKED_BY)
VALUES 
  (2, NULL, 2, 'Decision Table Rule', 
   NULL, 
   '2025-01-01', '2025-12-31', 'ACTIVE', 'AliceWhite', 'BG2', 'APPROVED', 'DECISION_TABLE', 1, NULL);
GO

-- Sample 5: Critical Delete Rule – locked by 'Admin'
INSERT INTO dbo.BRM_RULES 
  (GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL, EFFECTIVE_START_DATE, EFFECTIVE_END_DATE, STATUS, CREATED_BY, OWNER_GROUP, APPROVAL_STATUS, OPERATION_TYPE, DECISION_TABLE_ID, LOCKED_BY)
VALUES 
  (1, NULL, 1, 'Critical Delete Rule', 
   'DELETE FROM Orders WHERE OrderID=999', 
   '2025-01-01', '2025-12-31', 'ACTIVE', 'CharlieBlack', 'BG2', 'APPROVED', 'DELETE', NULL, 'Admin');
GO

-- Sample 6: Child Rule of Customer Insert – not locked
INSERT INTO dbo.BRM_RULES 
  (GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL, STATUS, CREATED_BY, OWNER_GROUP, APPROVAL_STATUS, OPERATION_TYPE, LOCKED_BY)
VALUES 
  (1, 1, 1, 'Child Rule of Customer Insert', 
   'SELECT CustomerID FROM Customers', 
   'ACTIVE', 'JohnDoe', 'BG1', 'APPROVED', 'SELECT', NULL);
GO

-- Sample 7: Inventory Check Rule – not locked
INSERT INTO dbo.BRM_RULES 
  (GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL, STATUS, CREATED_BY, OWNER_GROUP, APPROVAL_STATUS, OPERATION_TYPE, LOCKED_BY)
VALUES 
  (2, NULL, 1, 'Inventory Check Rule', 
   'SELECT * FROM Inventory WHERE Quantity < 10', 
   'ACTIVE', 'JaneSmith', 'BG1', 'APPROVED', 'SELECT', NULL);
GO

-- Sample 8: Child Inventory Rule – locked by 'Admin'
INSERT INTO dbo.BRM_RULES 
  (GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL, STATUS, CREATED_BY, OWNER_GROUP, APPROVAL_STATUS, OPERATION_TYPE, LOCKED_BY)
VALUES 
  (2, 7, 1, 'Child Inventory Rule', 
   'UPDATE Inventory SET Reorder=1 WHERE ProductID=555', 
   'INACTIVE', 'BobBrown', 'BG1', 'PENDING', 'UPDATE', 'Admin');
GO

-- Sample 9: Customer Update Rule – not locked
INSERT INTO dbo.BRM_RULES 
  (GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL, STATUS, CREATED_BY, OWNER_GROUP, APPROVAL_STATUS, OPERATION_TYPE, LOCKED_BY)
VALUES 
  (1, NULL, 1, 'Customer Update Rule', 
   'UPDATE Customers SET Email=''new@example.com'' WHERE CustomerID=101', 
   'ACTIVE', 'JohnDoe', 'BG1', 'APPROVED', 'UPDATE', NULL);
GO
