-- ====================================================
-- HELP_CONTENT SAMPLE DATA INSERTS (Large Data Set)
-- ====================================================
-- First, clear any existing help content (for testing)
DELETE FROM dbo.HELP_CONTENT;
GO

-- FAQ Inserts (10 rows)

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('FAQ', 'How do I add a new rule?', 
 'To add a new rule, click on the "Add Rule" button in the Business Rules tab and fill out the form. Make sure to provide a clear rule name, a proper SQL statement if required, and a detailed description. All required fields must be filled out.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('FAQ', 'How can I edit an existing rule?', 
 'Editing a rule is simple – select the rule from the list and click "Edit Rule". The rule editor window will open with the current rule details. Make your changes and then submit the updated rule for approval if required.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('FAQ', 'What does a dry‑run do?', 
 'A dry‑run simulates the execution of a rule without affecting your database. It allows you to verify that the rule logic works as expected before deploying it into production.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('FAQ', 'How are rule conflicts handled?', 
 'Rule conflicts are managed using the Conflict Priority Manager. This tool allows you to view and adjust conflicts between rules, ensuring that only the highest‑priority rule is executed when conflicts occur.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('FAQ', 'How do I schedule a rule?', 
 'To schedule a rule, navigate to the Scheduling tab, click "Add New Schedule", and enter the required schedule details such as date, time, and whether to run data validations before execution.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('FAQ', 'What are decision tables used for?', 
 'Decision tables separate decision logic from rule logic. When a rule is set to use a decision table, the tool executes the decision query to determine whether the rule should pass or fail, making complex decision scenarios easier to manage.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('FAQ', 'How do I resolve a locked rule?', 
 'If a rule is locked, you will see the current lock owner. Non-admin users cannot override a lock. Admin users can force unlock the rule using the "Force Unlock" feature from the Approvals tab.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('FAQ', 'What are composite rules?', 
 'Composite rules combine multiple individual rules using a logical expression (e.g., "Rule10 AND Rule20"). They are useful when a decision requires several conditions to be met simultaneously.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('FAQ', 'How can I backup my custom groups?', 
 'Within the Custom Groups tab, you have the option to backup your custom group configuration. The backup saves a JSON snapshot of the group’s members and settings, which you can later restore.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('FAQ', 'How do I restore a custom group backup?', 
 'To restore a custom group backup, select the desired backup version from the Custom Groups tab and click "Restore Group". The group will revert to the backup state, and all previous changes will be undone.');

-- GUIDE Inserts (10 rows)

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('GUIDE', 'User Management Guide', 
 'This guide explains how to manage users within the system. It covers how to add new users, delete existing ones, and change passwords. It also includes best practices for maintaining security and managing user roles effectively.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('GUIDE', 'Group Management Guide', 
 'Learn how to create, rename, and delete business groups. This document explains how groups are used to organize rules and permissions, and provides step‑by‑step instructions for managing groups through the Group Management tab.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('GUIDE', 'Rule Creation Best Practices', 
 'This document outlines best practices for creating efficient and reliable business rules. Topics include proper SQL syntax, effective use of parameters, avoiding conflicts, and strategies for clear documentation.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('GUIDE', 'Multi‑Stage Approval Process', 
 'Step‑by‑step instructions on the rule approval process. This guide explains how to submit a rule for approval, what each approval stage means, and how to review and resolve pending approvals.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('GUIDE', 'Conflict Resolution Guidelines', 
 'This guide provides strategies for managing and resolving conflicts between rules. It explains how to use the Conflict Priority Manager, adjust rule priorities, and ensure that the correct rule is executed when conflicts arise.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('GUIDE', 'Data Validation Setup', 
 'Learn how to configure data validations within the tool. This document explains how to set up validation rules, interpret validation logs, and troubleshoot common validation issues to ensure data integrity.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('GUIDE', 'Scheduling and Triggering Rules', 
 'A comprehensive guide on scheduling rules. It details how to set up schedules, the importance of data validations before rule execution, and how to manage upcoming schedules using the Scheduling tab.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('GUIDE', 'Lineage Visualization Tutorial', 
 'This tutorial explains how to use the lineage view to trace rule dependencies. It covers how to interpret the graphical lineage, understand parent–child relationships, and use the view for troubleshooting.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('GUIDE', 'Predictive Analytics Overview', 
 'An overview of the predictive analytics features within the tool. Topics include trend forecasting, anomaly detection, and how performance data is used to predict future rule execution behavior.');

INSERT INTO dbo.HELP_CONTENT (CATEGORY, TITLE, CONTENT)
VALUES 
('GUIDE', 'Collaboration and Messaging', 
 'This guide explains how to use the collaboration features built into the tool. Learn how to send and receive messages, view collaboration logs, and work with team members to improve rule management.');
GO

-- ====================================================
-- SAMPLE DATA FOR AUDIT LOG ANALYSIS
-- ====================================================
-- Clear any existing data (for test purposes)
DELETE FROM dbo.BRM_AUDIT_LOG;
GO

-- Row 1: Inserting a new rule into BRM_RULES
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'INSERT', 
    'BRM_RULES', 
    '1', 
    'JohnDoe', 
    NULL, 
    '{"RULE_NAME": "Customer Insert Rule", "STATUS": "ACTIVE", "OWNER_GROUP": "BG1"}', 
    DATEADD(MINUTE, -180, GETDATE())
);
GO

-- Row 2: Updating a rule’s SQL in BRM_RULES
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'UPDATE', 
    'BRM_RULES', 
    '1', 
    'JaneSmith', 
    '{"RULE_SQL": "SELECT * FROM Customers"}', 
    '{"RULE_SQL": "INSERT INTO Customers (Name, Email) VALUES (''TestName'', ''test@example.com'')"}', 
    DATEADD(MINUTE, -170, GETDATE())
);
GO

-- Row 3: Changing a rule's status from PENDING to ACTIVE
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'UPDATE', 
    'BRM_RULES', 
    '2', 
    'BobBrown', 
    '{"STATUS": "PENDING"}', 
    '{"STATUS": "ACTIVE"}', 
    DATEADD(MINUTE, -160, GETDATE())
);
GO

-- Row 4: Deleting a user from USERS table
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'DELETE', 
    'USERS', 
    '5', 
    'Admin', 
    '{"USERNAME": "oldUser", "USER_GROUP": "BG1"}', 
    NULL, 
    DATEADD(MINUTE, -150, GETDATE())
);
GO

-- Row 5: Approving a rule in BRM_RULE_APPROVALS
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'APPROVE', 
    'BRM_RULE_APPROVALS', 
    '2', 
    'JaneSmith', 
    NULL, 
    '{"APPROVED_FLAG": 1}', 
    DATEADD(MINUTE, -140, GETDATE())
);
GO

-- Row 6: Rejecting a rule approval in BRM_RULE_APPROVALS
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'REJECT', 
    'BRM_RULE_APPROVALS', 
    '3', 
    'AliceWhite', 
    '{"APPROVED_FLAG": 0}', 
    '{"APPROVED_FLAG": 2}', 
    DATEADD(MINUTE, -130, GETDATE())
);
GO

-- Row 7: Inserting a decision table into DECISION_TABLES
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'INSERT', 
    'DECISION_TABLES', 
    '1', 
    'AliceWhite', 
    NULL, 
    '{"TABLE_NAME": "DT1", "DECISION_QUERY": "SELECT 1"}', 
    DATEADD(MINUTE, -120, GETDATE())
);
GO

-- Row 8: Updating a decision table’s query in DECISION_TABLES
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'UPDATE', 
    'DECISION_TABLES', 
    '1', 
    'AliceWhite', 
    '{"DECISION_QUERY": "SELECT 1"}', 
    '{"DECISION_QUERY": "SELECT 0"}', 
    DATEADD(MINUTE, -110, GETDATE())
);
GO

-- Row 9: Inserting a conflict record into RULE_CONFLICTS
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'INSERT', 
    'RULE_CONFLICTS', 
    '1', 
    'JohnDoe', 
    NULL, 
    '{"RULE_ID1": 1, "RULE_ID2": 5, "PRIORITY": 1}', 
    DATEADD(MINUTE, -100, GETDATE())
);
GO

-- Row 10: Updating a composite rule in COMPOSITE_RULES
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'UPDATE', 
    'COMPOSITE_RULES', 
    '1', 
    'JohnDoe', 
    '{"LOGIC_EXPR": "Rule1 AND Rule2"}', 
    '{"LOGIC_EXPR": "Rule1 AND Rule2 AND Rule3"}', 
    DATEADD(MINUTE, -90, GETDATE())
);
GO

-- Row 11: Inserting a rule tag into RULE_TAGS
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'INSERT', 
    'RULE_TAGS', 
    '1', 
    'JohnDoe', 
    NULL, 
    '{"TAG_NAME": "Critical"}', 
    DATEADD(MINUTE, -80, GETDATE())
);
GO

-- Row 12: Inserting a new custom rule group into BRM_CUSTOM_RULE_GROUPS
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'INSERT', 
    'BRM_CUSTOM_RULE_GROUPS', 
    '1', 
    'JohnDoe', 
    NULL, 
    '{"CUSTOM_GROUP_NAME": "Custom Group A", "OWNER_BUSINESS_GROUP": "BG1"}', 
    DATEADD(MINUTE, -70, GETDATE())
);
GO

-- Row 13: Removing a rule from a custom group in BRM_CUSTOM_GROUP_MEMBERS
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'DELETE', 
    'BRM_CUSTOM_GROUP_MEMBERS', 
    '1', 
    'JohnDoe', 
    '{"CUSTOM_GROUP_ID": 1, "RULE_ID": 1}', 
    NULL, 
    DATEADD(MINUTE, -60, GETDATE())
);
GO

-- Row 14: Inserting a new help document into HELP_CONTENT
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'INSERT', 
    'HELP_CONTENT', 
    '1', 
    'Admin', 
    NULL, 
    '{"CATEGORY": "FAQ", "TITLE": "How do I add a rule?", "CONTENT": "Click the Add Rule button and fill out the form."}', 
    DATEADD(MINUTE, -50, GETDATE())
);
GO

-- Row 15: Updating the title of a help document in HELP_CONTENT
INSERT INTO dbo.BRM_AUDIT_LOG (ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA, ACTION_TIMESTAMP)
VALUES (
    'UPDATE', 
    'HELP_CONTENT', 
    '1', 
    'Admin', 
    '{"TITLE": "How do I add a rule?"}', 
    '{"TITLE": "How to add a rule?"}', 
    DATEADD(MINUTE, -40, GETDATE())
);
GO

-- Additional rows can be added to simulate further activities…