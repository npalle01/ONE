---------------------------------------------------------------------------
-- 1. DECISION_TABLES
---------------------------------------------------------------------------
CREATE TABLE DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(255) NULL,
    DECISION_QUERY NVARCHAR(MAX) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------------------------------
-- 2. BRM_RULES 
-- (Removed foreign key constraint to DECISION_TABLES to eliminate external references)
---------------------------------------------------------------------------
CREATE TABLE BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_NAME VARCHAR(255) NOT NULL,
    RULE_SQL NVARCHAR(MAX) NULL,
    STATUS VARCHAR(50) NOT NULL,
    VERSION INT NOT NULL DEFAULT 1,
    OWNER_GROUP VARCHAR(50) NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    UPDATED_BY VARCHAR(100) NULL,
    OPERATION_TYPE VARCHAR(50) NULL,
    BUSINESS_JUSTIFICATION NVARCHAR(MAX) NULL,
    EFFECTIVE_START_DATE DATETIME NULL,
    EFFECTIVE_END_DATE DATETIME NULL,
    DECISION_TABLE_ID INT NULL,
    IS_GLOBAL BIT NOT NULL DEFAULT 0,
    CRITICAL_RULE BIT NOT NULL DEFAULT 0,
    CRITICAL_SCOPE VARCHAR(50) NULL,
    CDC_TYPE VARCHAR(50) NULL,
    LIFECYCLE_STATE VARCHAR(50) NULL,
    APPROVAL_STATUS VARCHAR(50) NULL,
    RULE_TYPE_ID INT NULL,
    PARENT_RULE_ID INT NULL
);
GO

---------------------------------------------------------------------------
-- 3. USERS
---------------------------------------------------------------------------
CREATE TABLE USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME VARCHAR(100) NOT NULL UNIQUE,
    PASSWORD VARCHAR(100) NOT NULL,
    USER_GROUP VARCHAR(50) NOT NULL
);
GO

---------------------------------------------------------------------------
-- 4. BRM_AUDIT_LOG
---------------------------------------------------------------------------
CREATE TABLE BRM_AUDIT_LOG (
    AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ACTION VARCHAR(50) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    RECORD_ID VARCHAR(50) NULL,
    ACTION_BY VARCHAR(100) NOT NULL,
    OLD_DATA NVARCHAR(MAX) NULL,
    NEW_DATA NVARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------------------------------
-- 5. DATA_VALIDATIONS
---------------------------------------------------------------------------
CREATE TABLE DATA_VALIDATIONS (
    VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NOT NULL,
    VALIDATION_TYPE VARCHAR(50) NOT NULL,
    PARAMS VARCHAR(255) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------------------------------
-- 6. DATA_VALIDATION_LOGS
---------------------------------------------------------------------------
CREATE TABLE DATA_VALIDATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID INT NOT NULL,
    RESULT_FLAG VARCHAR(10) NOT NULL,
    DETAILS NVARCHAR(MAX) NULL,
    VALIDATION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------------------------------
-- 7. COLLABORATION_LOGS
---------------------------------------------------------------------------
CREATE TABLE COLLABORATION_LOGS (
    MESSAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    SENDER VARCHAR(100) NOT NULL,
    TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------------------------------
-- 8. BRM_RULE_LOCKS
---------------------------------------------------------------------------
CREATE TABLE BRM_RULE_LOCKS (
    LOCK_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    LOCKED_BY VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP DATETIME NOT NULL,
    EXPIRY_TIMESTAMP DATETIME NOT NULL,
    FORCE_LOCK BIT NOT NULL DEFAULT 0,
    ACTIVE_LOCK BIT NOT NULL DEFAULT 1
);
GO

---------------------------------------------------------------------------
-- 9. RULE_EXECUTION_LOGS
---------------------------------------------------------------------------
CREATE TABLE RULE_EXECUTION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE NVARCHAR(MAX) NULL,
    RECORD_COUNT INT NULL,
    EXECUTION_TIME_MS INT NOT NULL DEFAULT 0,
    CPU_USAGE INT NOT NULL DEFAULT 0,
    MEM_USAGE INT NOT NULL DEFAULT 0
);
GO

---------------------------------------------------------------------------
-- 10. DECISION_TABLE_EXEC_LOGS
---------------------------------------------------------------------------
CREATE TABLE DECISION_TABLE_EXEC_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    DECISION_TABLE_ID INT NOT NULL,
    EXEC_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE NVARCHAR(MAX) NULL,
    RECORD_COUNT INT NOT NULL DEFAULT 0
);
GO

---------------------------------------------------------------------------
-- 11. RULE_SCHEDULES
---------------------------------------------------------------------------
CREATE TABLE RULE_SCHEDULES (
    SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SCHEDULE_TIME DATETIME NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    RUN_DATA_VALIDATIONS BIT NOT NULL DEFAULT 0
);
GO

---------------------------------------------------------------------------
-- 12. BRM_RULE_TABLE_DEPENDENCIES
---------------------------------------------------------------------------
CREATE TABLE BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATABASE_NAME VARCHAR(100) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NULL,
    COLUMN_OP VARCHAR(50) NULL
);
GO

---------------------------------------------------------------------------
-- 13. RULE_CONFLICTS
---------------------------------------------------------------------------
CREATE TABLE RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1 INT NOT NULL,
    RULE_ID2 INT NOT NULL,
    PRIORITY INT NOT NULL
);
GO

---------------------------------------------------------------------------
-- 14. BRM_GLOBAL_CRITICAL_LINKS
---------------------------------------------------------------------------
CREATE TABLE BRM_GLOBAL_CRITICAL_LINKS (
    GCR_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL,
    CONSTRAINT PK_GlobalCritical PRIMARY KEY (GCR_RULE_ID, TARGET_RULE_ID)
);
GO

---------------------------------------------------------------------------
-- 15. COMPOSITE_RULES
---------------------------------------------------------------------------
CREATE TABLE COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME VARCHAR(255) NOT NULL,
    LOGIC_EXPR NVARCHAR(MAX) NULL,
    ACTION_ON_PASS VARCHAR(100) NULL
);
GO

---------------------------------------------------------------------------
-- 16. RULE_SNAPSHOTS
---------------------------------------------------------------------------
CREATE TABLE RULE_SNAPSHOTS (
    SNAPSHOT_ID INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME VARCHAR(255) NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    SNAPSHOT_JSON NVARCHAR(MAX) NOT NULL
);
GO

---------------------------------------------------------------------------
-- 17. RULE_TAGS
---------------------------------------------------------------------------
CREATE TABLE RULE_TAGS (
    TAG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    TAG_NAME VARCHAR(100) NOT NULL
);
GO

---------------------------------------------------------------------------
-- 18. BRM_RULE_LINEAGE
---------------------------------------------------------------------------
CREATE TABLE BRM_RULE_LINEAGE (
    RULE_ID INT PRIMARY KEY,
    PARENT_RULE_ID INT NULL
);
GO

---------------------------------------------------------------------------
-- 19. BRM_CUSTOM_GROUP_MEMBERS
---------------------------------------------------------------------------
CREATE TABLE BRM_CUSTOM_GROUP_MEMBERS (
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID INT NOT NULL,
    CONSTRAINT PK_CustomGroupMembers PRIMARY KEY (CUSTOM_GROUP_ID, RULE_ID)
);
GO

---------------------------------------------------------------------------
-- 20. BRM_CUSTOM_RULE_GROUPS
---------------------------------------------------------------------------
CREATE TABLE BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME VARCHAR(255) NOT NULL,
    OWNER_BUSINESS_GROUP VARCHAR(50) NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------------------------------
-- 21. BRM_CUSTOM_GROUP_BACKUPS
---------------------------------------------------------------------------
CREATE TABLE BRM_CUSTOM_GROUP_BACKUPS (
    BACKUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    BACKUP_VERSION INT NOT NULL,
    BACKUP_JSON NVARCHAR(MAX) NOT NULL
);
GO

---------------------------------------------------------------------------
-- 22. BRM_RULE_APPROVALS
---------------------------------------------------------------------------
CREATE TABLE BRM_RULE_APPROVALS (
    APPROVAL_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    GROUP_NAME VARCHAR(100) NOT NULL,
    USERNAME VARCHAR(100) NOT NULL,
    APPROVED_FLAG INT NOT NULL,  -- 0: pending, 1: approved, 2: rejected
    APPROVAL_STAGE INT NOT NULL,
    APPROVED_TIMESTAMP DATETIME NULL
);
GO

---------------------------------------------------------------------------
-- 23. BRM_DEFECT_LOGS
---------------------------------------------------------------------------
CREATE TABLE BRM_DEFECT_LOGS (
    DEFECT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NOT NULL,
    SEVERITY VARCHAR(50) NOT NULL,
    REPORTER VARCHAR(100) NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------------------------------
-- 24. RULE_PERF_STATS
---------------------------------------------------------------------------
CREATE TABLE RULE_PERF_STATS (
    STAT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    EXEC_TIME_MS INT NOT NULL,
    MEM_USAGE INT NOT NULL,
    USAGE_COUNT INT NOT NULL DEFAULT 0,
    DATE_KEY CHAR(8) NOT NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------------------------------
-- 25. HELP_CONTENT
---------------------------------------------------------------------------
CREATE TABLE HELP_CONTENT (
    HELP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CATEGORY VARCHAR(50) NOT NULL,  -- e.g., FAQ, Guide
    TITLE VARCHAR(255) NOT NULL,
    CONTENT NVARCHAR(MAX) NOT NULL,
    LAST_UPDATED DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------------------------------
-- 26. GROUP_PERMISSIONS
---------------------------------------------------------------------------
CREATE TABLE GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    TARGET_TABLE VARCHAR(100) NOT NULL
);
GO

---------------------------------------------------------------------------
-- 27. BRM_RULE_TYPES
---------------------------------------------------------------------------
CREATE TABLE BRM_RULE_TYPES (
    RULE_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100) NOT NULL
);
GO

---------------------------------------------------------------------------
-- 28. BRM_RULE_GROUPS
---------------------------------------------------------------------------
CREATE TABLE BRM_RULE_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL
);
GO

---------------------------------------------------------------------------
-- 29. BUSINESS_GROUPS
---------------------------------------------------------------------------
CREATE TABLE BUSINESS_GROUPS (
    GROUP_NAME VARCHAR(100) PRIMARY KEY,
    DESCRIPTION VARCHAR(255) NULL,
    EMAIL VARCHAR(100) NULL
);
GO

---------------------------------------------------------------------------
-- 30. BRM_RULE_COMMENTS
---------------------------------------------------------------------------
CREATE TABLE BRM_RULE_COMMENTS (
    COMMENT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    COMMENT_TEXT NVARCHAR(MAX) NOT NULL,
    COMMENT_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------------------------------
-- 31. BRM_COLUMN_MAPPING
---------------------------------------------------------------------------
CREATE TABLE BRM_COLUMN_MAPPING (
    MAPPING_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    COLUMN_NAME VARCHAR(100) NOT NULL,
    MAPPED_TO VARCHAR(100) NOT NULL
);
GO

-- Drop BRM_COLUMN_MAPPING
IF OBJECT_ID('BRM_COLUMN_MAPPING', 'U') IS NOT NULL 
    DROP TABLE BRM_COLUMN_MAPPING;
GO

-- Drop BRM_RULE_COMMENTS
IF OBJECT_ID('BRM_RULE_COMMENTS', 'U') IS NOT NULL 
    DROP TABLE BRM_RULE_COMMENTS;
GO

-- Drop BUSINESS_GROUPS
IF OBJECT_ID('BUSINESS_GROUPS', 'U') IS NOT NULL 
    DROP TABLE BUSINESS_GROUPS;
GO

-- Drop BRM_RULE_GROUPS
IF OBJECT_ID('BRM_RULE_GROUPS', 'U') IS NOT NULL 
    DROP TABLE BRM_RULE_GROUPS;
GO

-- Drop BRM_RULE_TYPES
IF OBJECT_ID('BRM_RULE_TYPES', 'U') IS NOT NULL 
    DROP TABLE BRM_RULE_TYPES;
GO

-- Drop GROUP_PERMISSIONS
IF OBJECT_ID('GROUP_PERMISSIONS', 'U') IS NOT NULL 
    DROP TABLE GROUP_PERMISSIONS;
GO

-- Drop HELP_CONTENT
IF OBJECT_ID('HELP_CONTENT', 'U') IS NOT NULL 
    DROP TABLE HELP_CONTENT;
GO

-- Drop RULE_PERF_STATS
IF OBJECT_ID('RULE_PERF_STATS', 'U') IS NOT NULL 
    DROP TABLE RULE_PERF_STATS;
GO

-- Drop BRM_DEFECT_LOGS
IF OBJECT_ID('BRM_DEFECT_LOGS', 'U') IS NOT NULL 
    DROP TABLE BRM_DEFECT_LOGS;
GO

-- Drop BRM_RULE_APPROVALS
IF OBJECT_ID('BRM_RULE_APPROVALS', 'U') IS NOT NULL 
    DROP TABLE BRM_RULE_APPROVALS;
GO

-- Drop BRM_CUSTOM_GROUP_BACKUPS
IF OBJECT_ID('BRM_CUSTOM_GROUP_BACKUPS', 'U') IS NOT NULL 
    DROP TABLE BRM_CUSTOM_GROUP_BACKUPS;
GO

-- Drop BRM_CUSTOM_RULE_GROUPS
IF OBJECT_ID('BRM_CUSTOM_RULE_GROUPS', 'U') IS NOT NULL 
    DROP TABLE BRM_CUSTOM_RULE_GROUPS;
GO

-- Drop BRM_CUSTOM_GROUP_MEMBERS
IF OBJECT_ID('BRM_CUSTOM_GROUP_MEMBERS', 'U') IS NOT NULL 
    DROP TABLE BRM_CUSTOM_GROUP_MEMBERS;
GO

-- Drop BRM_RULE_LINEAGE
IF OBJECT_ID('BRM_RULE_LINEAGE', 'U') IS NOT NULL 
    DROP TABLE BRM_RULE_LINEAGE;
GO

-- Drop RULE_TAGS
IF OBJECT_ID('RULE_TAGS', 'U') IS NOT NULL 
    DROP TABLE RULE_TAGS;
GO

-- Drop RULE_SNAPSHOTS
IF OBJECT_ID('RULE_SNAPSHOTS', 'U') IS NOT NULL 
    DROP TABLE RULE_SNAPSHOTS;
GO

-- Drop COMPOSITE_RULES
IF OBJECT_ID('COMPOSITE_RULES', 'U') IS NOT NULL 
    DROP TABLE COMPOSITE_RULES;
GO

-- Drop BRM_GLOBAL_CRITICAL_LINKS
IF OBJECT_ID('BRM_GLOBAL_CRITICAL_LINKS', 'U') IS NOT NULL 
    DROP TABLE BRM_GLOBAL_CRITICAL_LINKS;
GO

-- Drop RULE_CONFLICTS
IF OBJECT_ID('RULE_CONFLICTS', 'U') IS NOT NULL 
    DROP TABLE RULE_CONFLICTS;
GO

-- Drop BRM_RULE_TABLE_DEPENDENCIES
IF OBJECT_ID('BRM_RULE_TABLE_DEPENDENCIES', 'U') IS NOT NULL 
    DROP TABLE BRM_RULE_TABLE_DEPENDENCIES;
GO

-- Drop RULE_SCHEDULES
IF OBJECT_ID('RULE_SCHEDULES', 'U') IS NOT NULL 
    DROP TABLE RULE_SCHEDULES;
GO

-- Drop DECISION_TABLE_EXEC_LOGS
IF OBJECT_ID('DECISION_TABLE_EXEC_LOGS', 'U') IS NOT NULL 
    DROP TABLE DECISION_TABLE_EXEC_LOGS;
GO

-- Drop RULE_EXECUTION_LOGS
IF OBJECT_ID('RULE_EXECUTION_LOGS', 'U') IS NOT NULL 
    DROP TABLE RULE_EXECUTION_LOGS;
GO

-- Drop BRM_RULE_LOCKS
IF OBJECT_ID('BRM_RULE_LOCKS', 'U') IS NOT NULL 
    DROP TABLE BRM_RULE_LOCKS;
GO

-- Drop COLLABORATION_LOGS
IF OBJECT_ID('COLLABORATION_LOGS', 'U') IS NOT NULL 
    DROP TABLE COLLABORATION_LOGS;
GO

-- Drop DATA_VALIDATION_LOGS
IF OBJECT_ID('DATA_VALIDATION_LOGS', 'U') IS NOT NULL 
    DROP TABLE DATA_VALIDATION_LOGS;
GO

-- Drop DATA_VALIDATIONS
IF OBJECT_ID('DATA_VALIDATIONS', 'U') IS NOT NULL 
    DROP TABLE DATA_VALIDATIONS;
GO

-- Drop BRM_AUDIT_LOG
IF OBJECT_ID('BRM_AUDIT_LOG', 'U') IS NOT NULL 
    DROP TABLE BRM_AUDIT_LOG;
GO

-- Drop USERS
IF OBJECT_ID('USERS', 'U') IS NOT NULL 
    DROP TABLE USERS;
GO

-- Drop BRM_RULES
IF OBJECT_ID('BRM_RULES', 'U') IS NOT NULL 
    DROP TABLE BRM_RULES;
GO

-- Drop DECISION_TABLES
IF OBJECT_ID('DECISION_TABLES', 'U') IS NOT NULL 
    DROP TABLE DECISION_TABLES;
GO
