-------------------------------------------------------------------------------
-- 0) [Optional] Switch to your target database
-------------------------------------------------------------------------------
USE YourDatabaseName;
GO


-------------------------------------------------------------------------------
-- 1) Clean up existing tables if you want to recreate them
--    Remove or comment out if you need to preserve existing data.
-------------------------------------------------------------------------------
IF OBJECT_ID('dbo.COLLABORATION_LOGS', 'U') IS NOT NULL DROP TABLE dbo.COLLABORATION_LOGS;
IF OBJECT_ID('dbo.HELP_CONTENT', 'U') IS NOT NULL DROP TABLE dbo.HELP_CONTENT;
IF OBJECT_ID('dbo.BRM_DEFECT_LOGS', 'U') IS NOT NULL DROP TABLE dbo.BRM_DEFECT_LOGS;
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS', 'U') IS NOT NULL DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;
IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS', 'U') IS NOT NULL DROP TABLE dbo.BRM_CUSTOM_RULE_GROUPS;
IF OBJECT_ID('dbo.COMPOSITE_RULES', 'U') IS NOT NULL DROP TABLE dbo.COMPOSITE_RULES;
IF OBJECT_ID('dbo.RULE_CONFLICTS', 'U') IS NOT NULL DROP TABLE dbo.RULE_CONFLICTS;
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS', 'U') IS NOT NULL DROP TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS;
IF OBJECT_ID('dbo.RULE_SNAPSHOTS', 'U') IS NOT NULL DROP TABLE dbo.RULE_SNAPSHOTS;
IF OBJECT_ID('dbo.RULE_TAGS', 'U') IS NOT NULL DROP TABLE dbo.RULE_TAGS;
IF OBJECT_ID('dbo.DATA_VALIDATION_LOGS', 'U') IS NOT NULL DROP TABLE dbo.DATA_VALIDATION_LOGS;
IF OBJECT_ID('dbo.DATA_VALIDATIONS', 'U') IS NOT NULL DROP TABLE dbo.DATA_VALIDATIONS;
IF OBJECT_ID('dbo.RULE_PERF_STATS', 'U') IS NOT NULL DROP TABLE dbo.RULE_PERF_STATS;
IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS', 'U') IS NOT NULL DROP TABLE dbo.RULE_EXECUTION_LOGS;
IF OBJECT_ID('dbo.RULE_SCHEDULES', 'U') IS NOT NULL DROP TABLE dbo.RULE_SCHEDULES;
IF OBJECT_ID('dbo.BRM_RULE_LINEAGE', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_LINEAGE;
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;
IF OBJECT_ID('dbo.BRM_RULE_LOCKS', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_LOCKS;
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_APPROVALS;
IF OBJECT_ID('dbo.BRM_RULES', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULES;
IF OBJECT_ID('dbo.BRM_RULE_TYPES', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_TYPES;
IF OBJECT_ID('dbo.BRM_RULE_GROUPS', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_GROUPS;
IF OBJECT_ID('dbo.GROUP_PERMISSIONS', 'U') IS NOT NULL DROP TABLE dbo.GROUP_PERMISSIONS;
IF OBJECT_ID('dbo.BUSINESS_GROUPS', 'U') IS NOT NULL DROP TABLE dbo.BUSINESS_GROUPS;
IF OBJECT_ID('dbo.USERS', 'U') IS NOT NULL DROP TABLE dbo.USERS;
IF OBJECT_ID('dbo.DECISION_TABLES', 'U') IS NOT NULL DROP TABLE dbo.DECISION_TABLES;
IF OBJECT_ID('dbo.BRM_AUDIT_LOG', 'U') IS NOT NULL DROP TABLE dbo.BRM_AUDIT_LOG;
GO


-------------------------------------------------------------------------------
-- 2) USERS
-------------------------------------------------------------------------------
CREATE TABLE dbo.USERS (
    USER_ID     INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME    VARCHAR(100) NOT NULL,
    [PASSWORD]  VARCHAR(256) NOT NULL,   -- Plain text in code, adjust for real security
    USER_GROUP  VARCHAR(50)  NOT NULL
);
GO


-------------------------------------------------------------------------------
-- 3) BUSINESS_GROUPS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BUSINESS_GROUPS (
    BUSINESS_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME        VARCHAR(100) NOT NULL UNIQUE,
    DESCRIPTION       VARCHAR(500),
    EMAIL             VARCHAR(200)
);
GO


-------------------------------------------------------------------------------
-- 4) GROUP_PERMISSIONS
-------------------------------------------------------------------------------
CREATE TABLE dbo.GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME    VARCHAR(100) NOT NULL,  -- references BUSINESS_GROUPS.GROUP_NAME typically
    TARGET_TABLE  VARCHAR(200) NOT NULL
);
GO


-------------------------------------------------------------------------------
-- 5) BRM_RULE_GROUPS (Used for grouping rules in the UI)
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_GROUPS (
    GROUP_ID    INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME  VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(500)
);
GO


-------------------------------------------------------------------------------
-- 6) BRM_RULE_TYPES (Simple reference for rule_type combos)
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_TYPES (
    RULE_TYPE_ID   INT IDENTITY(1,1) PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100) NOT NULL
);
GO


-------------------------------------------------------------------------------
-- 7) BRM_RULES
--    Primary table storing all rules.
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULES (
    RULE_ID                 INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID                INT NULL,        -- references BRM_RULE_GROUPS(GROUP_ID)
    PARENT_RULE_ID          INT NULL,        -- Self-ref to RULE_ID if needed
    RULE_TYPE_ID            INT NULL,        -- references BRM_RULE_TYPES
    RULE_NAME               VARCHAR(200) NOT NULL,
    RULE_SQL                VARCHAR(MAX) NULL,
    EFFECTIVE_START_DATE    DATETIME NULL,
    EFFECTIVE_END_DATE      DATETIME NULL,
    STATUS                  VARCHAR(50)  NOT NULL DEFAULT('INACTIVE'),
    VERSION                 INT           NOT NULL DEFAULT(1),
    CREATED_BY              VARCHAR(100) NULL,
    UPDATED_BY              VARCHAR(100) NULL,
    DESCRIPTION             VARCHAR(MAX) NULL,
    OPERATION_TYPE          VARCHAR(50)  NULL,
    BUSINESS_JUSTIFICATION  VARCHAR(MAX) NULL,
    CREATED_TIMESTAMP       DATETIME     NOT NULL DEFAULT(GETDATE()),
    OWNER_GROUP             VARCHAR(100) NULL, -- code uses this for ownership
    CLUSTER_NAME            VARCHAR(100) NULL,
    APPROVAL_STATUS         VARCHAR(50)  NULL,
    IS_GLOBAL               BIT          NOT NULL DEFAULT(0),
    CRITICAL_RULE           BIT          NOT NULL DEFAULT(0),
    CRITICAL_SCOPE          VARCHAR(50)  NULL,
    CDC_TYPE                VARCHAR(50)  NULL,
    LIFECYCLE_STATE         VARCHAR(50)  NULL,
    DECISION_TABLE_ID       INT          NULL, -- references DECISION_TABLES
    ENCRYPTED_FLAG          BIT          NOT NULL DEFAULT(0)
);
GO


-------------------------------------------------------------------------------
-- 8) BRM_RULE_LOCKS
--    For concurrency & editing locks.
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_LOCKS (
    LOCK_ID         INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID         INT NOT NULL,  -- references BRM_RULES(RULE_ID)
    LOCKED_BY       VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP  DATETIME NOT NULL DEFAULT(GETDATE()),
    EXPIRY_TIMESTAMP DATETIME NOT NULL,
    FORCE_LOCK      BIT NOT NULL DEFAULT(0),
    ACTIVE_LOCK     BIT NOT NULL DEFAULT(1)
);
GO


-------------------------------------------------------------------------------
-- 9) RULE_CONFLICTS
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1    INT NOT NULL,    -- references BRM_RULES
    RULE_ID2    INT NOT NULL,    -- references BRM_RULES
    PRIORITY    INT NOT NULL DEFAULT(1)
);
GO


-------------------------------------------------------------------------------
-- 10) BRM_GLOBAL_CRITICAL_LINKS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID       INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID   INT NOT NULL,  -- references a global/critical rule
    TARGET_RULE_ID INT NOT NULL
);
GO


-------------------------------------------------------------------------------
-- 11) COMPOSITE_RULES
-------------------------------------------------------------------------------
CREATE TABLE dbo.COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME        VARCHAR(200) NOT NULL,
    LOGIC_EXPR        VARCHAR(MAX) NULL,
    ACTION_ON_PASS    VARCHAR(200) NULL
);
GO


-------------------------------------------------------------------------------
-- 12) DECISION_TABLES
-------------------------------------------------------------------------------
CREATE TABLE dbo.DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME        VARCHAR(200) NULL,
    DESCRIPTION       VARCHAR(500) NULL,
    DECISION_QUERY    VARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 13) RULE_SNAPSHOTS
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_SNAPSHOTS (
    SNAPSHOT_ID     INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME   VARCHAR(200) NOT NULL,
    CREATED_BY      VARCHAR(100) NOT NULL,
    SNAPSHOT_JSON   VARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 14) RULE_TAGS
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_TAGS (
    TAG_ID   INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID  INT NOT NULL,  -- references BRM_RULES
    TAG_NAME VARCHAR(100) NOT NULL
);
GO


-------------------------------------------------------------------------------
-- 15) DATA_VALIDATIONS
-------------------------------------------------------------------------------
CREATE TABLE dbo.DATA_VALIDATIONS (
    VALIDATION_ID    INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME       VARCHAR(200) NOT NULL,
    COLUMN_NAME      VARCHAR(200) NOT NULL,
    VALIDATION_TYPE  VARCHAR(50)  NOT NULL,  -- e.g. 'NOT NULL', 'RANGE', 'UNIQUE', etc.
    PARAMS           VARCHAR(500) NULL,      -- e.g. 'min=0;max=100'
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 16) DATA_VALIDATION_LOGS
-------------------------------------------------------------------------------
CREATE TABLE dbo.DATA_VALIDATION_LOGS (
    LOG_ID               INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID        INT NOT NULL,  -- references DATA_VALIDATIONS
    RESULT_FLAG          VARCHAR(10) NOT NULL, -- 'PASS' or 'FAIL'
    DETAILS              VARCHAR(MAX)  NULL,
    VALIDATION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 17) RULE_SCHEDULES
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_SCHEDULES (
    SCHEDULE_ID          INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID              INT NOT NULL,  -- references BRM_RULES
    SCHEDULE_TIME        DATETIME NOT NULL,
    STATUS               VARCHAR(50) NOT NULL DEFAULT('Scheduled'),  -- e.g. 'Scheduled','Done','Cancelled'
    RUN_DATA_VALIDATIONS BIT NOT NULL DEFAULT(0)
);
GO


-------------------------------------------------------------------------------
-- 18) RULE_EXECUTION_LOGS
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_EXECUTION_LOGS (
    EXEC_LOG_ID       INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID           INT NOT NULL,   -- references BRM_RULES
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    PASS_FLAG         BIT NOT NULL DEFAULT(0),
    MESSAGE           VARCHAR(MAX) NULL,
    RECORD_COUNT      INT NOT NULL DEFAULT(0),
    EXECUTION_TIME_MS INT NOT NULL DEFAULT(0),
    CPU_USAGE         INT NOT NULL DEFAULT(0),
    MEM_USAGE         INT NOT NULL DEFAULT(0)
);
GO


-------------------------------------------------------------------------------
-- 19) RULE_PERF_STATS
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_PERF_STATS (
    STATS_ID         INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID          INT NOT NULL,    -- references BRM_RULES
    EXEC_TIME_MS     FLOAT NULL,
    MEM_USAGE        FLOAT NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 20) BRM_RULE_LINEAGE
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_LINEAGE (
    ID        INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID   INT NOT NULL,   -- references BRM_RULES
    PARENT_ID INT NULL        -- references BRM_RULES
);
GO


-------------------------------------------------------------------------------
-- 21) BRM_RULE_TABLE_DEPENDENCIES
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID       INT NOT NULL,  -- references BRM_RULES
    DATABASE_NAME VARCHAR(100) NULL,
    TABLE_NAME    VARCHAR(200) NULL,
    COLUMN_NAME   VARCHAR(200) NULL,
    COLUMN_OP     VARCHAR(10) NULL   -- e.g. 'READ' or 'WRITE'
);
GO


-------------------------------------------------------------------------------
-- 22) BRM_DEFECT_LOGS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_DEFECT_LOGS (
    DEFECT_ID   INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID     INT NOT NULL,   -- references BRM_RULES
    DESCRIPTION VARCHAR(MAX) NOT NULL,
    SEVERITY    VARCHAR(50) NOT NULL,  -- e.g. 'Low','Medium','High'
    REPORTER    VARCHAR(100) NOT NULL,
    [STATUS]    VARCHAR(50)  NOT NULL DEFAULT('Open'),
    [TIMESTAMP] DATETIME NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 23) BRM_RULE_APPROVALS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_APPROVALS (
    APPROVAL_ID       INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID           INT NOT NULL,  -- references BRM_RULES
    GROUP_NAME        VARCHAR(100) NULL,  -- or the business group name
    USERNAME          VARCHAR(100) NOT NULL,  -- references USERS(USERNAME)
    APPROVED_FLAG     INT NOT NULL DEFAULT(0),  -- 0=Pending,1=Approved,2=Rejected
    APPROVAL_STAGE    INT NOT NULL,
    APPROVED_TIMESTAMP DATETIME NULL,
    -- you could store created_timestamp etc. if desired
    CONSTRAINT UQ_RuleUserStage UNIQUE(RULE_ID, USERNAME, APPROVAL_STAGE)
);
GO


-------------------------------------------------------------------------------
-- 24) BRM_AUDIT_LOG
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_AUDIT_LOG (
    AUDIT_ID         INT IDENTITY(1,1) PRIMARY KEY,
    ACTION           VARCHAR(50) NOT NULL,       -- e.g. 'INSERT','UPDATE','DELETE','APPROVE','REJECT'
    TABLE_NAME       VARCHAR(100) NOT NULL,
    RECORD_ID        VARCHAR(50)  NULL,          -- store as string to handle different PK types
    ACTION_BY        VARCHAR(100) NOT NULL,
    OLD_DATA         VARCHAR(MAX) NULL,
    NEW_DATA         VARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 25) COLLABORATION_LOGS
-------------------------------------------------------------------------------
CREATE TABLE dbo.COLLABORATION_LOGS (
    COLLAB_ID INT IDENTITY(1,1) PRIMARY KEY,
    [MESSAGE] VARCHAR(MAX) NOT NULL,
    SENDER    VARCHAR(100) NOT NULL,
    [TIMESTAMP] DATETIME  NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 26) BRM_CUSTOM_RULE_GROUPS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID        INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME      VARCHAR(200) NOT NULL,
    OWNER_BUSINESS_GROUP   VARCHAR(100) NULL,   -- or "OWNER_GROUP" if you prefer
    CREATED_BY             VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP      DATETIME NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 27) BRM_CUSTOM_GROUP_MEMBERS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS (
    CGM_ID           INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID  INT NOT NULL,  -- references BRM_CUSTOM_RULE_GROUPS
    RULE_ID          INT NOT NULL   -- references BRM_RULES
);
GO


-------------------------------------------------------------------------------
-- 28) HELP_CONTENT
-------------------------------------------------------------------------------
CREATE TABLE dbo.HELP_CONTENT (
    HELP_ID     INT IDENTITY(1,1) PRIMARY KEY,
    CATEGORY    VARCHAR(50) NOT NULL,   -- e.g. 'FAQ','GUIDE'
    TITLE       VARCHAR(200) NOT NULL,
    [CONTENT]   VARCHAR(MAX) NULL,
    LAST_UPDATED DATETIME NOT NULL DEFAULT(GETDATE())
);
GO
