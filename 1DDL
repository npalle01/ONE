---------------------------------------------------
-- 1) USERS
---------------------------------------------------
IF OBJECT_ID('dbo.USERS', 'U') IS NOT NULL
    DROP TABLE dbo.USERS;
GO

CREATE TABLE dbo.USERS (
    USER_ID               INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME              VARCHAR(100) NOT NULL,
    PASSWORD              VARCHAR(100) NOT NULL,
    USER_GROUP            VARCHAR(100) NOT NULL,
    ONBOARDING_COMPLETED  BIT NOT NULL DEFAULT 0
);
GO

---------------------------------------------------
-- 2) BUSINESS_GROUPS
---------------------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUPS', 'U') IS NOT NULL
    DROP TABLE dbo.BUSINESS_GROUPS;
GO

CREATE TABLE dbo.BUSINESS_GROUPS (
    GROUP_NAME   VARCHAR(100) NOT NULL PRIMARY KEY,
    DESCRIPTION  VARCHAR(2000) NULL,
    EMAIL        VARCHAR(200) NULL
);
GO

---------------------------------------------------
-- 3) GROUP_PERMISSIONS
---------------------------------------------------
IF OBJECT_ID('dbo.GROUP_PERMISSIONS', 'U') IS NOT NULL
    DROP TABLE dbo.GROUP_PERMISSIONS;
GO

CREATE TABLE dbo.GROUP_PERMISSIONS (
    GROUP_NAME    VARCHAR(100) NOT NULL,
    TARGET_TABLE  VARCHAR(100) NOT NULL,
    CONSTRAINT PK_GROUP_PERMISSIONS
        PRIMARY KEY (GROUP_NAME, TARGET_TABLE)
);
GO

---------------------------------------------------
-- 4) BRM_RULE_TYPES
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TYPES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_TYPES;
GO

CREATE TABLE dbo.BRM_RULE_TYPES (
    RULE_TYPE_ID   INT IDENTITY(1,1) PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(50) NOT NULL
);
GO

---------------------------------------------------
-- 5) BRM_RULE_GROUPS
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_GROUPS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_GROUPS;
GO

CREATE TABLE dbo.BRM_RULE_GROUPS (
    GROUP_ID   INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL
);
GO

---------------------------------------------------
-- 6) BRM_RULES
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULES;
GO

CREATE TABLE dbo.BRM_RULES (
    RULE_ID                 INT IDENTITY(1,1) PRIMARY KEY,
    PARENT_RULE_ID          INT NULL,
    GROUP_ID                INT NULL,
    RULE_NAME               VARCHAR(200) NOT NULL,
    RULE_SQL                VARCHAR(MAX) NULL,
    DESCRIPTION             VARCHAR(2000) NULL,
    BUSINESS_JUSTIFICATION  VARCHAR(2000) NULL,
    STATUS                  VARCHAR(20) NOT NULL DEFAULT 'INACTIVE',
    OWNER_GROUP             VARCHAR(100) NULL,
    APPROVAL_MODE           VARCHAR(20) NOT NULL DEFAULT 'Serial',
    IS_GLOBAL               BIT NOT NULL DEFAULT 0,
    OPERATION_TYPE          VARCHAR(20) NULL,
    CRITICAL_RULE           BIT NOT NULL DEFAULT 0,
    CRITICAL_SCOPE          VARCHAR(50) NULL,
    DECISION_TABLE_ID       INT NULL,
    LIFECYCLE_STATE         VARCHAR(50) NULL DEFAULT 'DRAFT',
    CREATED_TIMESTAMP       DATETIME NOT NULL DEFAULT GETDATE(),
    UPDATED_BY              VARCHAR(50) NULL,
    VERSION                 INT NOT NULL DEFAULT 1,
    APPROVAL_STATUS         VARCHAR(50) NULL DEFAULT 'APPROVAL_IN_PROGRESS',
    CDC_TYPE                VARCHAR(20) NULL
);
GO

---------------------------------------------------
-- 7) BRM_RULE_APPROVALS
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_APPROVALS;
GO

CREATE TABLE dbo.BRM_RULE_APPROVALS (
    APPROVAL_ID       INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID           INT NOT NULL,
    GROUP_NAME        VARCHAR(100) NOT NULL,
    APPROVAL_STAGE    INT NOT NULL,
    USERNAME          VARCHAR(50) NOT NULL,
    APPROVED_FLAG     INT NOT NULL DEFAULT 0,  -- 0=pending, 1=approved, 2=rejected
    REQUEST_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    APPROVED_TIMESTAMP DATETIME NULL,
    COMMENT           VARCHAR(2000) NULL
);
GO

---------------------------------------------------
-- 8) BRM_RULE_LOCKS
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_LOCKS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_LOCKS;
GO

CREATE TABLE dbo.BRM_RULE_LOCKS (
    RULE_ID          INT NOT NULL,
    LOCKED_BY        INT NOT NULL,
    LOCK_TIMESTAMP   DATETIME NOT NULL,
    EXPIRY_TIMESTAMP DATETIME NOT NULL,
    FORCE_LOCK       BIT NOT NULL DEFAULT 0,
    ACTIVE_LOCK      BIT NOT NULL DEFAULT 1
    -- Optionally, a PK if desired (e.g. PK on RULE_ID)
);
GO

---------------------------------------------------
-- 9) RULE_CONFLICTS
---------------------------------------------------
IF OBJECT_ID('dbo.RULE_CONFLICTS', 'U') IS NOT NULL
    DROP TABLE dbo.RULE_CONFLICTS;
GO

CREATE TABLE dbo.RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1    INT NOT NULL,
    RULE_ID2    INT NOT NULL,
    PRIORITY    INT NOT NULL
);
GO

---------------------------------------------------
-- 10) BRM_GLOBAL_CRITICAL_LINKS
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS;
GO

CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS (
    GCR_RULE_ID    INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL,
    CONSTRAINT PK_GCR_RULE_ID
        PRIMARY KEY (GCR_RULE_ID, TARGET_RULE_ID)
);
GO

---------------------------------------------------
-- 11) DECISION_TABLES
---------------------------------------------------
IF OBJECT_ID('dbo.DECISION_TABLES', 'U') IS NOT NULL
    DROP TABLE dbo.DECISION_TABLES;
GO

CREATE TABLE dbo.DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME        VARCHAR(200) NOT NULL,
    DESCRIPTION       VARCHAR(2000) NULL,
    DECISION_QUERY    VARCHAR(MAX) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------
-- 12) DECISION_TABLE_EXEC_LOGS
---------------------------------------------------
IF OBJECT_ID('dbo.DECISION_TABLE_EXEC_LOGS', 'U') IS NOT NULL
    DROP TABLE dbo.DECISION_TABLE_EXEC_LOGS;
GO

CREATE TABLE dbo.DECISION_TABLE_EXEC_LOGS (
    EXEC_LOG_ID       INT IDENTITY(1,1) PRIMARY KEY,
    DECISION_TABLE_ID INT NOT NULL,
    EXEC_TIMESTAMP    DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG         BIT NOT NULL,
    MESSAGE           VARCHAR(2000) NULL,
    RECORD_COUNT      INT NOT NULL DEFAULT 0
);
GO

---------------------------------------------------
-- 13) COMPOSITE_RULES
---------------------------------------------------
IF OBJECT_ID('dbo.COMPOSITE_RULES', 'U') IS NOT NULL
    DROP TABLE dbo.COMPOSITE_RULES;
GO

CREATE TABLE dbo.COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME        VARCHAR(200) NOT NULL,
    LOGIC_EXPR        VARCHAR(2000) NULL,
    ACTION_ON_PASS    VARCHAR(200) NULL
);
GO

---------------------------------------------------
-- 14) RULE_TAGS
---------------------------------------------------
IF OBJECT_ID('dbo.RULE_TAGS', 'U') IS NOT NULL
    DROP TABLE dbo.RULE_TAGS;
GO

CREATE TABLE dbo.RULE_TAGS (
    TAG_ID   INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID  INT NOT NULL,
    TAG_NAME VARCHAR(200) NOT NULL
);
GO

---------------------------------------------------
-- 15) DATA_VALIDATIONS
---------------------------------------------------
IF OBJECT_ID('dbo.DATA_VALIDATIONS', 'U') IS NOT NULL
    DROP TABLE dbo.DATA_VALIDATIONS;
GO

CREATE TABLE dbo.DATA_VALIDATIONS (
    VALIDATION_ID    INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME       VARCHAR(200) NOT NULL,
    COLUMN_NAME      VARCHAR(200) NOT NULL,
    VALIDATION_TYPE  VARCHAR(50) NOT NULL,   -- e.g. NOT NULL, RANGE, UNIQUE
    PARAMS           VARCHAR(1000) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------
-- 16) DATA_VALIDATION_LOGS
---------------------------------------------------
IF OBJECT_ID('dbo.DATA_VALIDATION_LOGS', 'U') IS NOT NULL
    DROP TABLE dbo.DATA_VALIDATION_LOGS;
GO

CREATE TABLE dbo.DATA_VALIDATION_LOGS (
    LOG_ID              INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID       INT NOT NULL,
    RESULT_FLAG         VARCHAR(10) NOT NULL,  -- PASS or FAIL
    DETAILS             VARCHAR(2000) NULL,
    VALIDATION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------
-- 17) RULE_EXECUTION_LOGS
---------------------------------------------------
IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS', 'U') IS NOT NULL
    DROP TABLE dbo.RULE_EXECUTION_LOGS;
GO

CREATE TABLE dbo.RULE_EXECUTION_LOGS (
    EXEC_LOG_ID         INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID             INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG           BIT NOT NULL,   -- 1=PASS, 0=FAIL
    MESSAGE             VARCHAR(2000) NULL,
    RECORD_COUNT        INT NOT NULL DEFAULT 0,
    EXECUTION_TIME_MS   INT NOT NULL DEFAULT 0,
    CPU_USAGE           INT NOT NULL DEFAULT 0,
    MEM_USAGE           INT NOT NULL DEFAULT 0
);
GO

---------------------------------------------------
-- 18) RULE_PERF_STATS
---------------------------------------------------
IF OBJECT_ID('dbo.RULE_PERF_STATS', 'U') IS NOT NULL
    DROP TABLE dbo.RULE_PERF_STATS;
GO

CREATE TABLE dbo.RULE_PERF_STATS (
    STAT_ID          INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID          INT NOT NULL,
    DATE_KEY         VARCHAR(8) NOT NULL,      -- e.g. 'YYYYMMDD'
    EXECUTION_TIME_MS INT NOT NULL DEFAULT 0,
    USAGE_COUNT       INT NOT NULL DEFAULT 0
);
GO

---------------------------------------------------
-- 19) RULE_SCHEDULES
---------------------------------------------------
IF OBJECT_ID('dbo.RULE_SCHEDULES', 'U') IS NOT NULL
    DROP TABLE dbo.RULE_SCHEDULES;
GO

CREATE TABLE dbo.RULE_SCHEDULES (
    SCHEDULE_ID          INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID              INT NOT NULL,
    SCHEDULE_TIME        DATETIME NOT NULL,
    STATUS               VARCHAR(50) NOT NULL DEFAULT 'Scheduled',
    CREATED_TIMESTAMP    DATETIME NOT NULL DEFAULT GETDATE(),
    RUN_DATA_VALIDATIONS BIT NOT NULL DEFAULT 0
);
GO

---------------------------------------------------
-- 20) BRM_RULE_COMMENTS
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_COMMENTS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_COMMENTS;
GO

CREATE TABLE dbo.BRM_RULE_COMMENTS (
    COMMENT_ID         INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID            INT NOT NULL,
    COMMENT_TEXT       VARCHAR(2000) NOT NULL,
    CREATED_TIMESTAMP  DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------
-- 21) BRM_RULE_LINEAGE
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_LINEAGE', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_LINEAGE;
GO

CREATE TABLE dbo.BRM_RULE_LINEAGE (
    LINEAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID    INT NOT NULL,
    PARENT_ID  INT NOT NULL
);
GO

---------------------------------------------------
-- 22) RULE_SNAPSHOTS
---------------------------------------------------
IF OBJECT_ID('dbo.RULE_SNAPSHOTS', 'U') IS NOT NULL
    DROP TABLE dbo.RULE_SNAPSHOTS;
GO

CREATE TABLE dbo.RULE_SNAPSHOTS (
    SNAPSHOT_ID     INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME   VARCHAR(200) NOT NULL,
    CREATED_BY      VARCHAR(50)  NOT NULL,
    CREATED_TIMESTAMP DATETIME   NOT NULL DEFAULT GETDATE(),
    SNAPSHOT_JSON   VARCHAR(MAX) NOT NULL
);
GO

---------------------------------------------------
-- 23) BRM_AUDIT_LOG
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_AUDIT_LOG', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_AUDIT_LOG;
GO

CREATE TABLE dbo.BRM_AUDIT_LOG (
    AUDIT_ID         INT IDENTITY(1,1) PRIMARY KEY,
    ACTION           VARCHAR(50) NOT NULL,
    TABLE_NAME       VARCHAR(50) NOT NULL,
    RECORD_ID        VARCHAR(50) NULL,
    ACTION_BY        VARCHAR(50) NOT NULL,
    OLD_DATA         VARCHAR(MAX) NULL,
    NEW_DATA         VARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

---------------------------------------------------
-- 24) COLLABORATION_LOGS
---------------------------------------------------
IF OBJECT_ID('dbo.COLLABORATION_LOGS', 'U') IS NOT NULL
    DROP TABLE dbo.COLLABORATION_LOGS;
GO

CREATE TABLE dbo.COLLABORATION_LOGS (
    MESSAGE_ID       INT IDENTITY(1,1) PRIMARY KEY,
    MESSAGE          VARCHAR(2000) NOT NULL,
    SENDER           VARCHAR(50)   NOT NULL,
    TIMESTAMP        DATETIME      NOT NULL DEFAULT GETDATE(),
    THREAD_PARENT_ID INT          NULL
);
GO

---------------------------------------------------
-- 25) BRM_CUSTOM_RULE_GROUPS
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_RULE_GROUPS;
GO

CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID   INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME VARCHAR(200) NOT NULL
);
GO

---------------------------------------------------
-- 26) BRM_CUSTOM_GROUP_MEMBERS
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;
GO

CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS (
    CGM_ID          INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID         INT NOT NULL
);
GO

---------------------------------------------------
-- 27) BRM_COLUMN_MAPPING
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_COLUMN_MAPPING', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_COLUMN_MAPPING;
GO

CREATE TABLE dbo.BRM_COLUMN_MAPPING (
    MAPPING_ID    INT IDENTITY(1,1) PRIMARY KEY,
    SOURCE_TABLE  VARCHAR(100) NOT NULL,
    SOURCE_COLUMN VARCHAR(100) NOT NULL,
    TARGET_TABLE  VARCHAR(100) NOT NULL,
    TARGET_COLUMN VARCHAR(100) NOT NULL,
    MAP_TYPE      VARCHAR(50)  NOT NULL
);
GO

---------------------------------------------------
-- 28) BRM_RULE_TABLE_DEPENDENCIES
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;
GO

CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES (
    DEP_ID        INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID       INT NOT NULL,
    DATABASE_NAME VARCHAR(50) NOT NULL,
    TABLE_NAME    VARCHAR(200) NOT NULL,
    COLUMN_NAME   VARCHAR(200) NULL,
    COLUMN_OP     VARCHAR(10) NOT NULL  -- 'READ' or 'WRITE'
);
GO

---------------------------------------------------
-- 29) Additional Dependencies for CTE, Aliases, Joins, Subqueries, Columns
---------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_CTE_DEPENDENCIES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_CTE_DEPENDENCIES;
GO

CREATE TABLE dbo.BRM_RULE_CTE_DEPENDENCIES (
    ID       INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID  INT NOT NULL,
    CTE_NAME VARCHAR(200) NOT NULL
);
GO

IF OBJECT_ID('dbo.BRM_RULE_ALIAS_DEPENDENCIES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_ALIAS_DEPENDENCIES;
GO

CREATE TABLE dbo.BRM_RULE_ALIAS_DEPENDENCIES (
    ID         INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID    INT NOT NULL,
    ALIAS      VARCHAR(200) NOT NULL,
    REAL_TABLE VARCHAR(200) NOT NULL
);
GO

IF OBJECT_ID('dbo.BRM_RULE_JOIN_DEPENDENCIES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_JOIN_DEPENDENCIES;
GO

CREATE TABLE dbo.BRM_RULE_JOIN_DEPENDENCIES (
    ID        INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID   INT NOT NULL,
    JOIN_TYPE VARCHAR(50) NOT NULL
);
GO

IF OBJECT_ID('dbo.BRM_RULE_SUBQUERY_DEPENDENCIES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_SUBQUERY_DEPENDENCIES;
GO

CREATE TABLE dbo.BRM_RULE_SUBQUERY_DEPENDENCIES (
    ID            INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID       INT NOT NULL,
    SUBQUERY_TEXT VARCHAR(MAX) NOT NULL
);
GO

IF OBJECT_ID('dbo.BRM_RULE_COLUMN_DEPENDENCIES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_COLUMN_DEPENDENCIES;
GO

CREATE TABLE dbo.BRM_RULE_COLUMN_DEPENDENCIES (
    ID          INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID     INT NOT NULL,
    COLUMN_NAME VARCHAR(200) NOT NULL
);
GO