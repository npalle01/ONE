/***********************************************************************
BRM MASTER DATABASE SCHEMA
This file creates all tables required for the BRM MASTER tool.
It also includes DROP statements (in reverse order) to remove all tables.
------------------------------------------------------------
Basic Login Information:
  To login to the tool, ensure that the USERS table contains at least one user.
  For example, you can insert an admin user as follows:
  
    INSERT INTO USERS (USERNAME, PASSWORD, USER_GROUP, ONBOARDING_COMPLETED)
    VALUES ('admin', 'adminpass', 'Admin', 1);
    
  Then use these credentials when prompted by the login dialog.
***********************************************************************/

/* ============================================
   CREATE TABLE STATEMENTS
   ============================================ */

/* 1. USERS */
CREATE TABLE USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    USER_GROUP VARCHAR(50) NOT NULL,
    ONBOARDING_COMPLETED BIT NOT NULL DEFAULT 0
);

/* 2. GROUP_PERMISSIONS */
CREATE TABLE GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(50) NOT NULL,
    TARGET_TABLE VARCHAR(100) NOT NULL
);

/* 3. BUSINESS_GROUPS */
CREATE TABLE BUSINESS_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(1000) NULL,
    EMAIL VARCHAR(255) NULL
);

/* 4. BRM_RULE_TYPES */
CREATE TABLE BRM_RULE_TYPES (
    RULE_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100) NOT NULL
);

/* 5. BRM_RULE_GROUPS */
CREATE TABLE BRM_RULE_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(255) NOT NULL
);

/* 6. BRM_RULES */
CREATE TABLE BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID INT NOT NULL,
    PARENT_RULE_ID INT NULL,
    RULE_TYPE_ID INT NOT NULL,
    RULE_NAME VARCHAR(255) NOT NULL,
    RULE_SQL VARCHAR(MAX) NOT NULL,
    DESCRIPTION VARCHAR(MAX) NULL,
    BUSINESS_JUSTIFICATION VARCHAR(MAX) NULL,
    STATUS VARCHAR(50) NOT NULL,
    VERSION INT NOT NULL DEFAULT 1,
    CREATED_BY VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    UPDATED_BY VARCHAR(100) NULL,
    UPDATED_TIMESTAMP DATETIME NULL,
    APPROVAL_STATUS VARCHAR(50) NULL,
    IS_GLOBAL BIT NOT NULL DEFAULT 0,
    CRITICAL_RULE BIT NOT NULL DEFAULT 0,
    CRITICAL_SCOPE VARCHAR(50) NULL,
    CDC_TYPE VARCHAR(50) NULL,
    LIFECYCLE_STATE VARCHAR(50) NULL,
    DECISION_TABLE_ID INT NULL,
    OWNER_GROUP VARCHAR(100) NOT NULL
);

/* 7. BRM_RULE_LINEAGE */
CREATE TABLE BRM_RULE_LINEAGE (
    RULE_ID INT NOT NULL,
    PARENT_ID INT NULL,
    PRIMARY KEY (RULE_ID)
);

/* 8. BRM_RULE_TABLE_DEPENDENCIES */
CREATE TABLE BRM_RULE_TABLE_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATABASE_NAME VARCHAR(100) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NULL,
    COLUMN_OP VARCHAR(50) NOT NULL
);

/* 9. BRM_RULE_CTE_DEPENDENCIES */
CREATE TABLE BRM_RULE_CTE_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    CTE_NAME VARCHAR(100) NOT NULL
);

/* 10. BRM_RULE_ALIAS_DEPENDENCIES */
CREATE TABLE BRM_RULE_ALIAS_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    ALIAS VARCHAR(100) NOT NULL,
    REAL_TABLE VARCHAR(100) NOT NULL
);

/* 11. BRM_RULE_JOIN_DEPENDENCIES */
CREATE TABLE BRM_RULE_JOIN_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    JOIN_TYPE VARCHAR(50) NOT NULL
);

/* 12. BRM_RULE_SUBQUERY_DEPENDENCIES */
CREATE TABLE BRM_RULE_SUBQUERY_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SUBQUERY_TEXT VARCHAR(MAX) NOT NULL
);

/* 13. BRM_RULE_COLUMN_DEPENDENCIES */
CREATE TABLE BRM_RULE_COLUMN_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    COLUMN_NAME VARCHAR(100) NOT NULL
);

/* 14. BRM_AUDIT_LOG */
CREATE TABLE BRM_AUDIT_LOG (
    AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ACTION VARCHAR(50) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    RECORD_ID VARCHAR(50) NULL,
    ACTION_BY VARCHAR(100) NOT NULL,
    OLD_DATA VARCHAR(MAX) NULL,
    NEW_DATA VARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

/* 15. COLLABORATION_LOGS */
CREATE TABLE COLLABORATION_LOGS (
    MESSAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    MESSAGE VARCHAR(MAX) NOT NULL,
    SENDER VARCHAR(100) NOT NULL,
    TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    THREAD_PARENT_ID INT NULL
);

/* 16. BRM_RULE_LOCKS */
CREATE TABLE BRM_RULE_LOCKS (
    LOCK_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    LOCKED_BY VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    EXPIRY_TIMESTAMP DATETIME NOT NULL,
    FORCE_LOCK BIT NOT NULL DEFAULT 0,
    ACTIVE_LOCK BIT NOT NULL DEFAULT 1
);

/* 17. DATA_VALIDATIONS */
CREATE TABLE DATA_VALIDATIONS (
    VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NOT NULL,
    VALIDATION_TYPE VARCHAR(50) NOT NULL,
    PARAMS VARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

/* 18. DATA_VALIDATION_LOGS */
CREATE TABLE DATA_VALIDATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID INT NOT NULL,
    RESULT_FLAG VARCHAR(10) NOT NULL,
    DETAILS VARCHAR(MAX) NULL,
    VALIDATION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

/* 19. RULE_CONFLICTS */
CREATE TABLE RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1 INT NOT NULL,
    RULE_ID2 INT NOT NULL,
    PRIORITY INT NOT NULL
);

/* 20. DECISION_TABLES */
CREATE TABLE DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(1000) NULL,
    DECISION_QUERY VARCHAR(MAX) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

/* 21. DECISION_TABLE_EXEC_LOGS */
CREATE TABLE DECISION_TABLE_EXEC_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    DECISION_TABLE_ID INT NOT NULL,
    EXEC_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE VARCHAR(MAX) NULL,
    RECORD_COUNT INT NOT NULL
);

/* 22. RULE_EXECUTION_LOGS */
CREATE TABLE RULE_EXECUTION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE VARCHAR(MAX) NULL,
    RECORD_COUNT INT NOT NULL,
    EXECUTION_TIME_MS INT NOT NULL,
    CPU_USAGE INT NOT NULL,
    MEM_USAGE INT NOT NULL
);

/* 23. RULE_PERF_STATS */
CREATE TABLE RULE_PERF_STATS (
    STAT_ID INT IDENTITY(1,1) PRIMARY KEY,
    DATE_KEY VARCHAR(8) NOT NULL,
    EXECUTION_TIME_MS INT NOT NULL,
    USAGE_COUNT INT NOT NULL
);

/* 24. BRM_CUSTOM_GROUP_MEMBERS */
CREATE TABLE BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID INT NOT NULL
);

/* 25. BRM_CUSTOM_RULE_GROUPS */
CREATE TABLE BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME VARCHAR(255) NOT NULL
);

/* 26. RULE_SCHEDULES */
CREATE TABLE RULE_SCHEDULES (
    SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SCHEDULE_TIME DATETIME NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    RUN_DATA_VALIDATIONS BIT NOT NULL DEFAULT 0
);

/* 27. BRM_RULE_COMMENTS */
CREATE TABLE BRM_RULE_COMMENTS (
    COMMENT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    COMMENT_TEXT VARCHAR(MAX) NOT NULL,
    COMMENTED_BY VARCHAR(100) NOT NULL,
    COMMENT_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

/* 28. COMPOSITE_RULES */
CREATE TABLE COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME VARCHAR(255) NOT NULL,
    LOGIC_EXPR VARCHAR(MAX) NOT NULL,
    ACTION_ON_PASS VARCHAR(255) NULL
);

/* 29. RULE_SNAPSHOTS */
CREATE TABLE RULE_SNAPSHOTS (
    SNAPSHOT_ID INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME VARCHAR(255) NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    SNAPSHOT_JSON VARCHAR(MAX) NOT NULL
);

/* 30. RULE_TAGS */
CREATE TABLE RULE_TAGS (
    TAG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    TAG_NAME VARCHAR(100) NOT NULL
);

/* 31. BRM_RULE_APPROVALS */
CREATE TABLE BRM_RULE_APPROVALS (
    APPROVAL_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    GROUP_NAME VARCHAR(100) NOT NULL,
    APPROVAL_STAGE INT NOT NULL,
    USERNAME VARCHAR(100) NOT NULL,
    APPROVED_FLAG INT NOT NULL,  -- 0 = pending, 1 = approved, 2 = rejected
    REQUEST_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    APPROVED_TIMESTAMP DATETIME NULL,
    COMMENT VARCHAR(MAX) NULL
);

/* 32. BRM_COLUMN_MAPPING */
CREATE TABLE BRM_COLUMN_MAPPING (
    MAPPING_ID INT IDENTITY(1,1) PRIMARY KEY,
    SOURCE_COLUMN VARCHAR(100) NOT NULL,
    TARGET_COLUMN VARCHAR(100) NOT NULL,
    RULE_ID INT NOT NULL
);

/* 33. BRM_GLOBAL_CRITICAL_LINKS */
CREATE TABLE BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);

/* ============================================
   DROP TABLE STATEMENTS
   (Drop in reverse order to minimize dependency issues)
   ============================================ */

DROP TABLE BRM_GLOBAL_CRITICAL_LINKS;
DROP TABLE BRM_COLUMN_MAPPING;
DROP TABLE BRM_RULE_APPROVALS;
DROP TABLE RULE_TAGS;
DROP TABLE RULE_SNAPSHOTS;
DROP TABLE COMPOSITE_RULES;
DROP TABLE BRM_RULE_COMMENTS;
DROP TABLE RULE_SCHEDULES;
DROP TABLE BRM_CUSTOM_RULE_GROUPS;
DROP TABLE BRM_CUSTOM_GROUP_MEMBERS;
DROP TABLE RULE_PERF_STATS;
DROP TABLE RULE_EXECUTION_LOGS;
DROP TABLE DECISION_TABLE_EXEC_LOGS;
DROP TABLE DECISION_TABLES;
DROP TABLE RULE_CONFLICTS;
DROP TABLE DATA_VALIDATION_LOGS;
DROP TABLE DATA_VALIDATIONS;
DROP TABLE BRM_RULE_LOCKS;
DROP TABLE COLLABORATION_LOGS;
DROP TABLE BRM_AUDIT_LOG;
DROP TABLE BRM_RULE_COLUMN_DEPENDENCIES;
DROP TABLE BRM_RULE_SUBQUERY_DEPENDENCIES;
DROP TABLE BRM_RULE_JOIN_DEPENDENCIES;
DROP TABLE BRM_RULE_ALIAS_DEPENDENCIES;
DROP TABLE BRM_RULE_CTE_DEPENDENCIES;
DROP TABLE BRM_RULE_TABLE_DEPENDENCIES;
DROP TABLE BRM_RULE_LINEAGE;
DROP TABLE BRM_RULES;
DROP TABLE BRM_RULE_GROUPS;
DROP TABLE BRM_RULE_TYPES;
DROP TABLE BUSINESS_GROUPS;
DROP TABLE GROUP_PERMISSIONS;
DROP TABLE USERS;

/***********************************************************************
BASIC LOGIN INFORMATION
-----------------------------------------------------------------------
To login to the BRM MASTER tool, ensure that the USERS table contains at
least one user. For example, to create an administrator account, run:

INSERT INTO USERS (USERNAME, PASSWORD, USER_GROUP, ONBOARDING_COMPLETED)
VALUES ('admin', 'adminpass', 'Admin', 1);

Then, launch the application and use the above credentials.
***********************************************************************/
