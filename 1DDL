-- USERS table
CREATE TABLE USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME VARCHAR(100) NOT NULL,
    PASSWORD VARCHAR(100) NOT NULL,
    USER_GROUP VARCHAR(50) NOT NULL,
    ONBOARDING_COMPLETED BIT DEFAULT 0
);

-- GROUP_PERMISSIONS table
CREATE TABLE GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(50) NOT NULL,
    TARGET_TABLE VARCHAR(100) NOT NULL,
    ACTION VARCHAR(50) NOT NULL
);

-- BRM_RULES table
CREATE TABLE BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_NAME VARCHAR(200) NOT NULL,
    RULE_SQL NVARCHAR(MAX) NOT NULL,
    DESCRIPTION NVARCHAR(MAX),
    BUSINESS_JUSTIFICATION NVARCHAR(MAX),
    STATUS VARCHAR(20) NOT NULL,
    OWNER_GROUP VARCHAR(50),
    APPROVAL_MODE VARCHAR(20),
    IS_GLOBAL BIT DEFAULT 0,
    OPERATION_TYPE VARCHAR(20),
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE(),
    UPDATED_BY VARCHAR(100),
    CREATED_BY VARCHAR(100),
    VERSION INT DEFAULT 1,
    EFFECTIVE_START_DATE DATETIME,
    EFFECTIVE_END_DATE DATETIME,
    CDC_TYPE VARCHAR(20),
    APPROVAL_STATUS VARCHAR(50),
    LIFECYCLE_STATE VARCHAR(50)
);

-- BRM_RULE_LOCKS table
CREATE TABLE BRM_RULE_LOCKS (
    LOCK_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    LOCKED_BY VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP DATETIME DEFAULT GETDATE(),
    EXPIRY_TIMESTAMP DATETIME,
    FORCE_LOCK BIT DEFAULT 0,
    ACTIVE_LOCK BIT DEFAULT 1
);

-- BRM_AUDIT_LOG table
CREATE TABLE BRM_AUDIT_LOG (
    AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ACTION VARCHAR(50) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    RECORD_ID VARCHAR(50),
    ACTION_BY VARCHAR(100),
    OLD_DATA NVARCHAR(MAX),
    NEW_DATA NVARCHAR(MAX),
    ACTION_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- BRM_RULE_APPROVALS table
CREATE TABLE BRM_RULE_APPROVALS (
    APPROVAL_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    GROUP_NAME VARCHAR(50),
    APPROVAL_STAGE INT,
    USERNAME VARCHAR(100),
    APPROVED_FLAG INT,  -- 0=pending, 1=approved, 2=rejected
    REQUEST_TIMESTAMP DATETIME DEFAULT GETDATE(),
    APPROVED_TIMESTAMP DATETIME,
    COMMENT NVARCHAR(MAX)
);

-- DATA_VALIDATIONS table
CREATE TABLE DATA_VALIDATIONS (
    VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NOT NULL,
    VALIDATION_TYPE VARCHAR(50) NOT NULL,
    PARAMS VARCHAR(200),
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- DATA_VALIDATION_LOGS table
CREATE TABLE DATA_VALIDATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID INT NOT NULL,
    RESULT_FLAG VARCHAR(10),
    DETAILS NVARCHAR(MAX),
    VALIDATION_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- BRM_RULE_TABLE_DEPENDENCIES table
CREATE TABLE BRM_RULE_TABLE_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATABASE_NAME VARCHAR(50),
    TABLE_NAME VARCHAR(100),
    COLUMN_NAME VARCHAR(100),
    COLUMN_OP VARCHAR(20)
);

-- BRM_RULE_CTE_DEPENDENCIES table
CREATE TABLE BRM_RULE_CTE_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    CTE_NAME VARCHAR(100)
);

-- BRM_RULE_ALIAS_DEPENDENCIES table
CREATE TABLE BRM_RULE_ALIAS_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    ALIAS VARCHAR(100),
    REAL_TABLE VARCHAR(100)
);

-- BRM_RULE_JOIN_DEPENDENCIES table
CREATE TABLE BRM_RULE_JOIN_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    JOIN_TYPE VARCHAR(50)
);

-- BRM_RULE_SUBQUERY_DEPENDENCIES table
CREATE TABLE BRM_RULE_SUBQUERY_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SUBQUERY_TEXT NVARCHAR(MAX)
);

-- BRM_RULE_COLUMN_DEPENDENCIES table
CREATE TABLE BRM_RULE_COLUMN_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    COLUMN_NAME VARCHAR(100)
);

-- DECISION_TABLES table
CREATE TABLE DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100),
    DESCRIPTION NVARCHAR(MAX),
    DECISION_QUERY NVARCHAR(MAX),
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- DECISION_TABLE_EXEC_LOGS table
CREATE TABLE DECISION_TABLE_EXEC_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    DECISION_TABLE_ID INT NOT NULL,
    EXEC_TIMESTAMP DATETIME DEFAULT GETDATE(),
    PASS_FLAG BIT,
    MESSAGE NVARCHAR(MAX),
    RECORD_COUNT INT
);

-- RULE_EXECUTION_LOGS table
CREATE TABLE RULE_EXECUTION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME DEFAULT GETDATE(),
    PASS_FLAG BIT,
    MESSAGE NVARCHAR(MAX),
    RECORD_COUNT INT,
    EXECUTION_TIME_MS INT,
    CPU_USAGE INT,
    MEM_USAGE INT
);

-- RULE_PERF_STATS table
CREATE TABLE RULE_PERF_STATS (
    STAT_ID INT IDENTITY(1,1) PRIMARY KEY,
    DATE_KEY VARCHAR(8),
    EXECUTION_TIME_MS INT,
    USAGE_COUNT INT
);

-- BRM_RULE_LINEAGE table
CREATE TABLE BRM_RULE_LINEAGE (
    LINEAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    PARENT_ID INT
);

-- BRM_CUSTOM_RULE_GROUPS table
CREATE TABLE BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME VARCHAR(100)
);

-- BRM_CUSTOM_GROUP_MEMBERS table
CREATE TABLE BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID INT NOT NULL
);

-- RULE_CONFLICTS table
CREATE TABLE RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1 INT NOT NULL,
    RULE_ID2 INT NOT NULL,
    PRIORITY INT DEFAULT 1
);

-- COMPOSITE_RULES table
CREATE TABLE COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME VARCHAR(200) NOT NULL,
    LOGIC_EXPR NVARCHAR(MAX),
    ACTION_ON_PASS VARCHAR(100)
);

-- RULE_SCHEDULES table
CREATE TABLE RULE_SCHEDULES (
    SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SCHEDULE_TIME DATETIME,
    STATUS VARCHAR(50),
    RUN_DATA_VALIDATIONS BIT DEFAULT 0,
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- BRM_RULE_COMMENTS table
CREATE TABLE BRM_RULE_COMMENTS (
    COMMENT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    COMMENT_TEXT NVARCHAR(MAX),
    COMMENT_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- RULE_SNAPSHOTS table
CREATE TABLE RULE_SNAPSHOTS (
    SNAPSHOT_ID INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME VARCHAR(100),
    CREATED_BY VARCHAR(100),
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE(),
    SNAPSHOT_JSON NVARCHAR(MAX)
);

-- RULE_TAGS table
CREATE TABLE RULE_TAGS (
    TAG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    TAG_NAME VARCHAR(100)
);

-- BRM_RULE_TYPES table
CREATE TABLE BRM_RULE_TYPES (
    RULE_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100)
);

-- BRM_RULE_GROUPS table
CREATE TABLE BRM_RULE_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100)
);

-- BRM_COLUMN_MAPPING table
CREATE TABLE BRM_COLUMN_MAPPING (
    MAPPING_ID INT IDENTITY(1,1) PRIMARY KEY,
    SOURCE_COLUMN VARCHAR(100),
    TARGET_COLUMN VARCHAR(100)
);

-- BRM_GLOBAL_CRITICAL_LINKS table
CREATE TABLE BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);

-- COLLABORATION_LOGS table
CREATE TABLE COLLABORATION_LOGS (
    MESSAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    MESSAGE NVARCHAR(MAX),
    SENDER VARCHAR(100),
    TIMESTAMP DATETIME DEFAULT GETDATE(),
    THREAD_PARENT_ID INT
);

-- CONFLICT_TRIAGE table (new)
CREATE TABLE CONFLICT_TRIAGE (
    TRIAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CONFLICT_ID INT NOT NULL,
    DECISION INT,  -- e.g., 1 means prefer Rule 1, 2 means prefer Rule 2, 0 for undecided
    VOTE_COUNT INT DEFAULT 1,
    DECISION_TIMESTAMP DATETIME DEFAULT GETDATE()
);


DROP TABLE IF EXISTS CONFLICT_TRIAGE;
DROP TABLE IF EXISTS COLLABORATION_LOGS;
DROP TABLE IF EXISTS BRM_GLOBAL_CRITICAL_LINKS;
DROP TABLE IF EXISTS BRM_COLUMN_MAPPING;
DROP TABLE IF EXISTS BRM_RULE_GROUPS;
DROP TABLE IF EXISTS BRM_RULE_TYPES;
DROP TABLE IF EXISTS RULE_TAGS;
DROP TABLE IF EXISTS RULE_SNAPSHOTS;
DROP TABLE IF EXISTS BRM_RULE_COMMENTS;
DROP TABLE IF EXISTS RULE_SCHEDULES;
DROP TABLE IF EXISTS COMPOSITE_RULES;
DROP TABLE IF EXISTS RULE_CONFLICTS;
DROP TABLE IF EXISTS BRM_CUSTOM_GROUP_MEMBERS;
DROP TABLE IF EXISTS BRM_CUSTOM_RULE_GROUPS;
DROP TABLE IF EXISTS BRM_RULE_LINEAGE;
DROP TABLE IF EXISTS RULE_PERF_STATS;
DROP TABLE IF EXISTS RULE_EXECUTION_LOGS;
DROP TABLE IF EXISTS DECISION_TABLE_EXEC_LOGS;
DROP TABLE IF EXISTS DECISION_TABLES;
DROP TABLE IF EXISTS BRM_RULE_COLUMN_DEPENDENCIES;
DROP TABLE IF EXISTS BRM_RULE_SUBQUERY_DEPENDENCIES;
DROP TABLE IF EXISTS BRM_RULE_JOIN_DEPENDENCIES;
DROP TABLE IF EXISTS BRM_RULE_ALIAS_DEPENDENCIES;
DROP TABLE IF EXISTS BRM_RULE_CTE_DEPENDENCIES;
DROP TABLE IF EXISTS BRM_RULE_TABLE_DEPENDENCIES;
DROP TABLE IF EXISTS DATA_VALIDATION_LOGS;
DROP TABLE IF EXISTS DATA_VALIDATIONS;
DROP TABLE IF EXISTS BRM_RULE_APPROVALS;
DROP TABLE IF EXISTS BRM_AUDIT_LOG;
DROP TABLE IF EXISTS BRM_RULE_LOCKS;
DROP TABLE IF EXISTS BRM_RULES;
DROP TABLE IF EXISTS GROUP_PERMISSIONS;
DROP TABLE IF EXISTS USERS;
