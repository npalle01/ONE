-------------------------------------------------------------------------------
-- 0) Switch to your target database (change if needed)
-------------------------------------------------------------------------------
USE YourDatabaseName;
GO

-------------------------------------------------------------------------------
-- 1) Clean up existing tables if you want to recreate them
--    Remove or comment out the DROP lines if you need to preserve existing data.
-------------------------------------------------------------------------------
IF OBJECT_ID('dbo.COLLABORATION_LOGS', 'U') IS NOT NULL DROP TABLE dbo.COLLABORATION_LOGS;
IF OBJECT_ID('dbo.HELP_CONTENT', 'U') IS NOT NULL DROP TABLE dbo.HELP_CONTENT;
IF OBJECT_ID('dbo.BRM_DEFECT_LOGS', 'U') IS NOT NULL DROP TABLE dbo.BRM_DEFECT_LOGS;
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS', 'U') IS NOT NULL DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;
IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS', 'U') IS NOT NULL DROP TABLE dbo.BRM_CUSTOM_RULE_GROUPS;
IF OBJECT_ID('dbo.COMPOSITE_RULES', 'U') IS NOT NULL DROP TABLE dbo.COMPOSITE_RULES;
IF OBJECT_ID('dbo.RULE_CONFLICTS', 'U') IS NOT NULL DROP TABLE dbo.RULE_CONFLICTS;
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS', 'U') IS NOT NULL DROP TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS;
IF OBJECT_ID('dbo.RULE_SNAPSHOTS', 'U') IS NOT NULL DROP TABLE dbo.RULE_SNAPSHOTS;
IF OBJECT_ID('dbo.RULE_TAGS', 'U') IS NOT NULL DROP TABLE dbo.RULE_TAGS;
IF OBJECT_ID('dbo.DATA_VALIDATION_LOGS', 'U') IS NOT NULL DROP TABLE dbo.DATA_VALIDATION_LOGS;
IF OBJECT_ID('dbo.DATA_VALIDATIONS', 'U') IS NOT NULL DROP TABLE dbo.DATA_VALIDATIONS;
IF OBJECT_ID('dbo.RULE_PERF_STATS', 'U') IS NOT NULL DROP TABLE dbo.RULE_PERF_STATS;
IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS', 'U') IS NOT NULL DROP TABLE dbo.RULE_EXECUTION_LOGS;
IF OBJECT_ID('dbo.RULE_SCHEDULES', 'U') IS NOT NULL DROP TABLE dbo.RULE_SCHEDULES;
IF OBJECT_ID('dbo.BRM_RULE_LINEAGE', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_LINEAGE;
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;
IF OBJECT_ID('dbo.BRM_RULE_LOCKS', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_LOCKS;
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_APPROVALS;
IF OBJECT_ID('dbo.BRM_RULES', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULES;
IF OBJECT_ID('dbo.BRM_RULE_TYPES', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_TYPES;
IF OBJECT_ID('dbo.BRM_RULE_GROUPS', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_GROUPS;
IF OBJECT_ID('dbo.GROUP_PERMISSIONS', 'U') IS NOT NULL DROP TABLE dbo.GROUP_PERMISSIONS;
IF OBJECT_ID('dbo.BUSINESS_GROUPS', 'U') IS NOT NULL DROP TABLE dbo.BUSINESS_GROUPS;
IF OBJECT_ID('dbo.USERS', 'U') IS NOT NULL DROP TABLE dbo.USERS;
IF OBJECT_ID('dbo.DECISION_TABLES', 'U') IS NOT NULL DROP TABLE dbo.DECISION_TABLES;
IF OBJECT_ID('dbo.BRM_AUDIT_LOG', 'U') IS NOT NULL DROP TABLE dbo.BRM_AUDIT_LOG;
GO


-------------------------------------------------------------------------------
-- 2) USERS
-------------------------------------------------------------------------------
CREATE TABLE dbo.USERS (
    USER_ID     INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME    VARCHAR(100) NOT NULL,
    [PASSWORD]  VARCHAR(256) NOT NULL,
    USER_GROUP  VARCHAR(50)  NOT NULL
);
GO

-------------------------------------------------------------------------------
-- 3) BUSINESS_GROUPS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BUSINESS_GROUPS (
    BUSINESS_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME        VARCHAR(100) NOT NULL UNIQUE,
    DESCRIPTION       VARCHAR(500),
    EMAIL             VARCHAR(200)
);
GO

-------------------------------------------------------------------------------
-- 4) GROUP_PERMISSIONS
-------------------------------------------------------------------------------
CREATE TABLE dbo.GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME    VARCHAR(100) NOT NULL,
    TARGET_TABLE  VARCHAR(200) NOT NULL
);
GO

-------------------------------------------------------------------------------
-- 5) BRM_RULE_GROUPS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_GROUPS (
    GROUP_ID    INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME  VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(500)
);
GO

-------------------------------------------------------------------------------
-- 6) BRM_RULE_TYPES
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_TYPES (
    RULE_TYPE_ID   INT IDENTITY(1,1) PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100) NOT NULL
);
GO

-------------------------------------------------------------------------------
-- 7) BRM_RULES
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULES (
    RULE_ID                 INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID                INT NULL,
    PARENT_RULE_ID          INT NULL,
    RULE_TYPE_ID            INT NULL,
    RULE_NAME               VARCHAR(200) NOT NULL,
    RULE_SQL                VARCHAR(MAX) NULL,
    EFFECTIVE_START_DATE    DATETIME NULL,
    EFFECTIVE_END_DATE      DATETIME NULL,
    STATUS                  VARCHAR(50)  NOT NULL DEFAULT('INACTIVE'),
    VERSION                 INT           NOT NULL DEFAULT(1),
    CREATED_BY              VARCHAR(100) NULL,
    UPDATED_BY              VARCHAR(100) NULL,
    DESCRIPTION             VARCHAR(MAX) NULL,
    OPERATION_TYPE          VARCHAR(50)  NULL,
    BUSINESS_JUSTIFICATION  VARCHAR(MAX) NULL,
    CREATED_TIMESTAMP       DATETIME     NOT NULL DEFAULT(GETDATE()),
    OWNER_GROUP             VARCHAR(100) NULL,
    CLUSTER_NAME            VARCHAR(100) NULL,
    APPROVAL_STATUS         VARCHAR(50)  NULL,
    IS_GLOBAL               BIT          NOT NULL DEFAULT(0),
    CRITICAL_RULE           BIT          NOT NULL DEFAULT(0),
    CRITICAL_SCOPE          VARCHAR(50)  NULL,
    CDC_TYPE                VARCHAR(50)  NULL,
    LIFECYCLE_STATE         VARCHAR(50)  NULL,
    DECISION_TABLE_ID       INT          NULL,
    ENCRYPTED_FLAG          BIT          NOT NULL DEFAULT(0)
);
GO

-------------------------------------------------------------------------------
-- 8) BRM_RULE_LOCKS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_LOCKS (
    LOCK_ID         INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID         INT NOT NULL,
    LOCKED_BY       VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP  DATETIME NOT NULL DEFAULT(GETDATE()),
    EXPIRY_TIMESTAMP DATETIME NOT NULL,
    FORCE_LOCK      BIT NOT NULL DEFAULT(0),
    ACTIVE_LOCK     BIT NOT NULL DEFAULT(1)
);
GO

-------------------------------------------------------------------------------
-- 9) RULE_CONFLICTS
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1    INT NOT NULL,
    RULE_ID2    INT NOT NULL,
    PRIORITY    INT NOT NULL DEFAULT(1)
);
GO

-------------------------------------------------------------------------------
-- 10) BRM_GLOBAL_CRITICAL_LINKS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID       INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID   INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);
GO

-------------------------------------------------------------------------------
-- 11) COMPOSITE_RULES
-------------------------------------------------------------------------------
CREATE TABLE dbo.COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME        VARCHAR(200) NOT NULL,
    LOGIC_EXPR        VARCHAR(MAX) NULL,
    ACTION_ON_PASS    VARCHAR(200) NULL
);
GO

-------------------------------------------------------------------------------
-- 12) DECISION_TABLES
-------------------------------------------------------------------------------
CREATE TABLE dbo.DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME        VARCHAR(200) NULL,
    DESCRIPTION       VARCHAR(500) NULL,
    DECISION_QUERY    VARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------------------
-- 13) RULE_SNAPSHOTS
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_SNAPSHOTS (
    SNAPSHOT_ID     INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME   VARCHAR(200) NOT NULL,
    CREATED_BY      VARCHAR(100) NOT NULL,
    SNAPSHOT_JSON   VARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------------------
-- 14) RULE_TAGS
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_TAGS (
    TAG_ID   INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID  INT NOT NULL,
    TAG_NAME VARCHAR(100) NOT NULL
);
GO

-------------------------------------------------------------------------------
-- 15) DATA_VALIDATIONS
-------------------------------------------------------------------------------
CREATE TABLE dbo.DATA_VALIDATIONS (
    VALIDATION_ID    INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME       VARCHAR(200) NOT NULL,
    COLUMN_NAME      VARCHAR(200) NOT NULL,
    VALIDATION_TYPE  VARCHAR(50)  NOT NULL,
    PARAMS           VARCHAR(500) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------------------
-- 16) DATA_VALIDATION_LOGS
-------------------------------------------------------------------------------
CREATE TABLE dbo.DATA_VALIDATION_LOGS (
    LOG_ID               INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID        INT NOT NULL,
    RESULT_FLAG          VARCHAR(10) NOT NULL,
    DETAILS              VARCHAR(MAX) NULL,
    VALIDATION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------------------
-- 17) RULE_SCHEDULES
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_SCHEDULES (
    SCHEDULE_ID          INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID              INT NOT NULL,
    SCHEDULE_TIME        DATETIME NOT NULL,
    STATUS               VARCHAR(50) NOT NULL DEFAULT('Scheduled'),
    RUN_DATA_VALIDATIONS BIT NOT NULL DEFAULT(0)
);
GO

-------------------------------------------------------------------------------
-- 18) RULE_EXECUTION_LOGS
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_EXECUTION_LOGS (
    EXEC_LOG_ID       INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID           INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    PASS_FLAG         BIT NOT NULL DEFAULT(0),
    MESSAGE           VARCHAR(MAX) NULL,
    RECORD_COUNT      INT NOT NULL DEFAULT(0),
    EXECUTION_TIME_MS INT NOT NULL DEFAULT(0),
    CPU_USAGE         INT NOT NULL DEFAULT(0),
    MEM_USAGE         INT NOT NULL DEFAULT(0)
);
GO

-------------------------------------------------------------------------------
-- 19) RULE_PERF_STATS
-------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_PERF_STATS (
    STATS_ID         INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID          INT NOT NULL,
    EXEC_TIME_MS     FLOAT NULL,
    MEM_USAGE        FLOAT NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------------------
-- 20) BRM_RULE_LINEAGE
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_LINEAGE (
    ID        INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID   INT NOT NULL,
    PARENT_ID INT NULL
);
GO

-------------------------------------------------------------------------------
-- 21) BRM_RULE_TABLE_DEPENDENCIES
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID       INT NOT NULL,
    DATABASE_NAME VARCHAR(100) NULL,
    TABLE_NAME    VARCHAR(200) NULL,
    COLUMN_NAME   VARCHAR(200) NULL,
    COLUMN_OP     VARCHAR(10)  NULL
);
GO

-------------------------------------------------------------------------------
-- 22) BRM_DEFECT_LOGS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_DEFECT_LOGS (
    DEFECT_ID   INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID     INT NOT NULL,
    DESCRIPTION VARCHAR(MAX) NOT NULL,
    SEVERITY    VARCHAR(50) NOT NULL,
    REPORTER    VARCHAR(100) NOT NULL,
    [STATUS]    VARCHAR(50)  NOT NULL DEFAULT('Open'),
    [TIMESTAMP] DATETIME     NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------------------
-- 23) BRM_RULE_APPROVALS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_APPROVALS (
    APPROVAL_ID       INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID           INT NOT NULL,
    GROUP_NAME        VARCHAR(100) NULL,
    USERNAME          VARCHAR(100) NOT NULL,
    APPROVED_FLAG     INT NOT NULL DEFAULT(0),
    APPROVAL_STAGE    INT NOT NULL,
    APPROVED_TIMESTAMP DATETIME NULL,
    CONSTRAINT UQ_RuleUserStage UNIQUE(RULE_ID, USERNAME, APPROVAL_STAGE)
);
GO

-------------------------------------------------------------------------------
-- 24) BRM_AUDIT_LOG
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_AUDIT_LOG (
    AUDIT_ID         INT IDENTITY(1,1) PRIMARY KEY,
    ACTION           VARCHAR(50) NOT NULL,
    TABLE_NAME       VARCHAR(100) NOT NULL,
    RECORD_ID        VARCHAR(50) NULL,
    ACTION_BY        VARCHAR(100) NOT NULL,
    OLD_DATA         VARCHAR(MAX) NULL,
    NEW_DATA         VARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------------------
-- 25) COLLABORATION_LOGS
-------------------------------------------------------------------------------
CREATE TABLE dbo.COLLABORATION_LOGS (
    COLLAB_ID INT IDENTITY(1,1) PRIMARY KEY,
    [MESSAGE] VARCHAR(MAX) NOT NULL,
    SENDER    VARCHAR(100) NOT NULL,
    [TIMESTAMP] DATETIME  NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------------------
-- 26) BRM_CUSTOM_RULE_GROUPS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID       INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME     VARCHAR(200) NOT NULL,
    OWNER_BUSINESS_GROUP  VARCHAR(100) NULL,
    CREATED_BY            VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP     DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------------------
-- 27) BRM_CUSTOM_GROUP_MEMBERS
-------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS (
    CGM_ID          INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID         INT NOT NULL
);
GO

-------------------------------------------------------------------------------
-- 28) HELP_CONTENT
-------------------------------------------------------------------------------
CREATE TABLE dbo.HELP_CONTENT (
    HELP_ID     INT IDENTITY(1,1) PRIMARY KEY,
    CATEGORY    VARCHAR(50) NOT NULL,
    TITLE       VARCHAR(200) NOT NULL,
    [CONTENT]   VARCHAR(MAX) NULL,
    LAST_UPDATED DATETIME NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- INSERT TEST DATA
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
-- A) USERS
-------------------------------------------------------------------------------
INSERT INTO dbo.USERS (USERNAME, [PASSWORD], USER_GROUP)
VALUES
  ('AdminUser', 'admin123', 'Admin'),
  ('normalUser1', 'password1', 'BG1'),
  ('normalUser2', 'password2', 'BG2');
GO

-------------------------------------------------------------------------------
-- B) BUSINESS_GROUPS
-------------------------------------------------------------------------------
INSERT INTO dbo.BUSINESS_GROUPS (GROUP_NAME, DESCRIPTION, EMAIL)
VALUES
  ('BG1', 'Business Group 1', 'bg1@example.com'),
  ('BG2', 'Business Group 2', 'bg2@example.com'),
  ('AdminGroup', 'Admin Group', 'admins@example.com');
GO

-------------------------------------------------------------------------------
-- C) GROUP_PERMISSIONS
-------------------------------------------------------------------------------
INSERT INTO dbo.GROUP_PERMISSIONS (GROUP_NAME, TARGET_TABLE)
VALUES
  ('BG1', 'BRM_RULES'),
  ('BG1', 'RULE_SCHEDULES'),
  ('BG2', 'RULE_EXECUTION_LOGS');
GO

-------------------------------------------------------------------------------
-- D) BRM_RULE_GROUPS
-------------------------------------------------------------------------------
INSERT INTO dbo.BRM_RULE_GROUPS (GROUP_NAME, DESCRIPTION)
VALUES
  ('TestGroupA', 'Test Group A for BRM rules'),
  ('TestGroupB', 'Another Group for demonstration');
GO

-------------------------------------------------------------------------------
-- E) BRM_RULE_TYPES
-------------------------------------------------------------------------------
INSERT INTO dbo.BRM_RULE_TYPES (RULE_TYPE_NAME)
VALUES
  ('DataQuality'),
  ('BusinessValidation'),
  ('WorkflowCheck');
GO

-------------------------------------------------------------------------------
-- F) DECISION_TABLES
-------------------------------------------------------------------------------
INSERT INTO dbo.DECISION_TABLES (TABLE_NAME, DESCRIPTION, DECISION_QUERY)
VALUES
  ('DT_TaxValidation', 'Checks if tax=1 => returns PASS=1 else 0', 
   'SELECT CASE WHEN 1=1 THEN 1 ELSE 0 END'),
  ('DT_Eligibility', 'Eligibility check returns 1 for demonstration', 
   'SELECT 1 AS passFlag');
GO

-------------------------------------------------------------------------------
-- G) BRM_RULES
-------------------------------------------------------------------------------
-- NOTE: We assume the identity IDs will start at 1, 2, etc. Adjust if your DB differs.
INSERT INTO dbo.BRM_RULES (
    GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL,
    EFFECTIVE_START_DATE, EFFECTIVE_END_DATE, STATUS, VERSION,
    CREATED_BY, UPDATED_BY, DESCRIPTION, OPERATION_TYPE,
    BUSINESS_JUSTIFICATION, OWNER_GROUP, APPROVAL_STATUS,
    IS_GLOBAL, CRITICAL_RULE, DECISION_TABLE_ID
)
VALUES
  -- Rule #1 (Parent BFS)
  (1, NULL, 1, 'Parent Rule Alpha', 'SELECT 1 AS passFlag', 
   GETDATE(), DATEADD(DAY,30,GETDATE()), 'ACTIVE', 1, 
   'AdminUser', NULL, 'This is a parent BFS rule', 'SELECT', 
   'Needed for BFS demonstration', 'BG1', 'APPROVAL_IN_PROGRESS', 
   0, 0, NULL),

  -- Rule #2 (Child BFS)
  (1, 1, 2, 'Child Rule Beta', 'SELECT CASE WHEN 1=1 THEN 1 ELSE 0 END', 
   GETDATE(), DATEADD(DAY,15,GETDATE()), 'INACTIVE', 1, 
   'normalUser1', NULL, 'Child BFS rule', 'SELECT', 
   'Follows Parent Rule', 'BG1', 'IN_REVIEW', 
   0, 0, NULL),

  -- Rule #3 (Global/Critical)
  (2, NULL, 2, 'Some Global Rule', 'SELECT 0 AS passFlag', 
   GETDATE(), DATEADD(DAY,60,GETDATE()), 'ACTIVE', 1, 
   'AdminUser', NULL, 'Used to test global link scenario', 'SELECT', 
   'Mandatory for entire org', 'BG2', 'APPROVAL_IN_PROGRESS', 
   1, 1, NULL),

  -- Rule #4 (Decision Table referencing DECISION_TABLE_ID=1)
  (1, NULL, 3, 'Decision Rule Demo', NULL, 
   GETDATE(), DATEADD(DAY,90,GETDATE()), 'INACTIVE', 1, 
   'normalUser1', NULL, 'Executes a decision table', 'DECISION_TABLE', 
   'Perform advanced check', 'BG1', 'PENDING_APPROVAL', 
   0, 0, 1);
GO

-------------------------------------------------------------------------------
-- H) RULE_CONFLICTS
-------------------------------------------------------------------------------
INSERT INTO dbo.RULE_CONFLICTS (RULE_ID1, RULE_ID2, PRIORITY)
VALUES
  (1, 3, 1);
GO

-------------------------------------------------------------------------------
-- I) BRM_GLOBAL_CRITICAL_LINKS
-------------------------------------------------------------------------------
INSERT INTO dbo.BRM_GLOBAL_CRITICAL_LINKS (GCR_RULE_ID, TARGET_RULE_ID)
VALUES
  (3, 2);
GO

-------------------------------------------------------------------------------
-- J) COMPOSITE_RULES
-------------------------------------------------------------------------------
INSERT INTO dbo.COMPOSITE_RULES (CRULE_NAME, LOGIC_EXPR, ACTION_ON_PASS)
VALUES
  ('CompositeOne', 'Rule1==PASS AND Rule2==PASS', 'SendEmail');
GO

-------------------------------------------------------------------------------
-- K) RULE_SCHEDULES
-------------------------------------------------------------------------------
INSERT INTO dbo.RULE_SCHEDULES (RULE_ID, SCHEDULE_TIME, STATUS, RUN_DATA_VALIDATIONS)
VALUES
  (1, DATEADD(HOUR, 2, GETDATE()), 'Scheduled', 1),
  (4, DATEADD(DAY, 1, GETDATE()), 'Scheduled', 0);
GO

-------------------------------------------------------------------------------
-- L) RULE_EXECUTION_LOGS
-------------------------------------------------------------------------------
INSERT INTO dbo.RULE_EXECUTION_LOGS (
    RULE_ID, PASS_FLAG, MESSAGE, RECORD_COUNT, EXECUTION_TIME_MS, CPU_USAGE, MEM_USAGE
)
VALUES
  (1, 1, 'All good', 10, 120, 5, 15000),
  (1, 0, 'Failed condition on some rows', 5, 140, 6, 17000);
GO

-------------------------------------------------------------------------------
-- M) RULE_PERF_STATS
-------------------------------------------------------------------------------
INSERT INTO dbo.RULE_PERF_STATS (RULE_ID, EXEC_TIME_MS, MEM_USAGE, ACTION_TIMESTAMP)
VALUES
  (1, 150, 12000, DATEADD(DAY, -1, GETDATE())),
  (1, 200, 11000, GETDATE());
GO

-------------------------------------------------------------------------------
-- N) BRM_RULE_LINEAGE
-------------------------------------------------------------------------------
INSERT INTO dbo.BRM_RULE_LINEAGE (RULE_ID, PARENT_ID)
VALUES
  (2, 1);
GO

-------------------------------------------------------------------------------
-- O) BRM_RULE_TABLE_DEPENDENCIES
-------------------------------------------------------------------------------
INSERT INTO dbo.BRM_RULE_TABLE_DEPENDENCIES (
    RULE_ID, DATABASE_NAME, TABLE_NAME, COLUMN_NAME, COLUMN_OP
)
VALUES
  (1, 'SampleDB', 'dbo.Customers', 'CustomerID', 'READ'),
  (1, 'SampleDB', 'dbo.Orders',    'OrderID',    'READ'),
  (2, 'SampleDB', 'dbo.Customers', 'TaxRegion',  'WRITE');
GO

-------------------------------------------------------------------------------
-- P) RULE_TAGS
-------------------------------------------------------------------------------
INSERT INTO dbo.RULE_TAGS (RULE_ID, TAG_NAME)
VALUES
  (1, 'Finance'),
  (1, 'CriticalPath'),
  (2, 'BetaTesting');
GO

-------------------------------------------------------------------------------
-- Q) BRM_DEFECT_LOGS
-------------------------------------------------------------------------------
INSERT INTO dbo.BRM_DEFECT_LOGS (
    RULE_ID, DESCRIPTION, SEVERITY, REPORTER, [STATUS]
)
VALUES
  (1, 'Sometimes returns unexpected PASS', 'High', 'QAUser', 'Open'),
  (2, 'Occasionally times out', 'Medium', 'QAUser', 'Open');
GO

-------------------------------------------------------------------------------
-- R) BRM_RULE_APPROVALS
-------------------------------------------------------------------------------
INSERT INTO dbo.BRM_RULE_APPROVALS (
    RULE_ID, GROUP_NAME, USERNAME, APPROVED_FLAG, APPROVAL_STAGE
)
VALUES
  (1, 'BG1',        'normalUser1', 0, 1),
  (1, 'AdminGroup', 'AdminUser',   0, 2);
GO

-------------------------------------------------------------------------------
-- S) BRM_AUDIT_LOG
-------------------------------------------------------------------------------
INSERT INTO dbo.BRM_AUDIT_LOG (
    ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA
)
VALUES
  ('INSERT', 'BRM_RULES', '1', 'AdminUser', NULL, '{"RULE_NAME":"Parent Rule Alpha"}'),
  ('UPDATE', 'BRM_RULES', '2', 'normalUser1', '{"STATUS":"INACTIVE"}', '{"STATUS":"ACTIVE"}');
GO

-------------------------------------------------------------------------------
-- T) DATA_VALIDATIONS
-------------------------------------------------------------------------------
INSERT INTO dbo.DATA_VALIDATIONS (
    TABLE_NAME, COLUMN_NAME, VALIDATION_TYPE, PARAMS
)
VALUES
  ('dbo.Customers', 'CustomerID', 'NOT NULL', NULL),
  ('dbo.Customers', 'Age',        'RANGE',   'min=0;max=120'),
  ('dbo.Customers', 'Email',      'REGEX',   'pattern=^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$');
GO

-------------------------------------------------------------------------------
-- U) DATA_VALIDATION_LOGS
-------------------------------------------------------------------------------
INSERT INTO dbo.DATA_VALIDATION_LOGS (
    VALIDATION_ID, RESULT_FLAG, DETAILS
)
VALUES
  (1, 'PASS', 'No NULLs found'),
  (2, 'FAIL', '2 rows have Age < 0'),
  (3, 'PASS', 'All emails matched the pattern');
GO

-------------------------------------------------------------------------------
-- V) COLLABORATION_LOGS
-------------------------------------------------------------------------------
INSERT INTO dbo.COLLABORATION_LOGS ([MESSAGE], SENDER)
VALUES
  ('Hello Team, please review Rule #1 ASAP.', 'AdminUser'),
  ('Got it, checking the BFS chain now.', 'normalUser1');
GO

-------------------------------------------------------------------------------
-- W) BRM_CUSTOM_RULE_GROUPS
-------------------------------------------------------------------------------
INSERT INTO dbo.BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_NAME, OWNER_BUSINESS_GROUP, CREATED_BY
)
VALUES
  ('CustomGroup1', 'BG1', 'AdminUser'),
  ('CustomGroup2', 'BG2', 'normalUser2');
GO

-------------------------------------------------------------------------------
-- X) BRM_CUSTOM_GROUP_MEMBERS
-------------------------------------------------------------------------------
INSERT INTO dbo.BRM_CUSTOM_GROUP_MEMBERS (CUSTOM_GROUP_ID, RULE_ID)
VALUES
  (1, 2), 
  (2, 4);
GO

-------------------------------------------------------------------------------
-- Y) RULE_SNAPSHOTS
-------------------------------------------------------------------------------
INSERT INTO dbo.RULE_SNAPSHOTS (
    SNAPSHOT_NAME, CREATED_BY, SNAPSHOT_JSON
)
VALUES
  ('TestSnap1', 'AdminUser', '[{"RULE_ID":1,"RULE_NAME":"Parent Rule Alpha"}]');
GO

-------------------------------------------------------------------------------
-- Z) HELP_CONTENT
-------------------------------------------------------------------------------
INSERT INTO dbo.HELP_CONTENT (
    CATEGORY, TITLE, [CONTENT]
)
VALUES
  ('FAQ',   'How to create a rule?', 'Use the Business Rules tab, click "Add Rule", and provide details.'),
  ('GUIDE', 'Approvals Workflow',   'Rules need multi-step approvals from relevant groups...');
GO