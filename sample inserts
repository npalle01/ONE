------------------------------------------------------------------------
-- USERS
------------------------------------------------------------------------
INSERT INTO dbo.USERS (USERNAME, [PASSWORD], USER_GROUP)
VALUES
('admin','12345','Admin'),
('alice','pass','BG1'),
('bob','pass2','BG2');

------------------------------------------------------------------------
-- BUSINESS_GROUPS
------------------------------------------------------------------------
INSERT INTO dbo.BUSINESS_GROUPS (GROUP_NAME, DESCRIPTION, EMAIL)
VALUES
('BG1','Group 1','bg1@example.com'),
('BG2','Group 2','bg2@example.com'),
('Admin','Admin special group','admin@example.com');  -- optional

------------------------------------------------------------------------
-- GROUP_PERMISSIONS
------------------------------------------------------------------------
INSERT INTO dbo.GROUP_PERMISSIONS (GROUP_NAME, TARGET_TABLE)
VALUES
('BG1','dbo.BRM_RULES'),
('BG1','dbo.DATA_VALIDATIONS'),
('BG2','dbo.BRM_RULES'),
('BG2','dbo.DECISION_TABLES'),
('Admin','dbo.*'); -- Fake "Admin" permission for demonstration

------------------------------------------------------------------------
-- BUSINESS_GROUP_APPROVERS
------------------------------------------------------------------------
INSERT INTO dbo.BUSINESS_GROUP_APPROVERS (GROUP_NAME, USERNAME)
VALUES
('BG1','alice'),
('BG2','bob');

------------------------------------------------------------------------
-- BRM_RULE_TYPES
------------------------------------------------------------------------
INSERT INTO dbo.BRM_RULE_TYPES (RULE_TYPE_NAME)
VALUES
('TypeA'),
('TypeB');

------------------------------------------------------------------------
-- BRM_RULE_GROUPS
------------------------------------------------------------------------
INSERT INTO dbo.BRM_RULE_GROUPS (GROUP_NAME)
VALUES
('RG1'),
('RG2');

------------------------------------------------------------------------
-- BRM_RULES
------------------------------------------------------------------------
-- We'll create 3 rules to demonstrate BFS, conflicts, etc.
INSERT INTO dbo.BRM_RULES (
  GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID,
  RULE_NAME, RULE_SQL, EFFECTIVE_START_DATE,
  EFFECTIVE_END_DATE, STATUS, VERSION,
  CREATED_BY, DESCRIPTION, OPERATION_TYPE,
  BUSINESS_JUSTIFICATION, CREATED_TIMESTAMP,
  UPDATED_BY, OWNER_GROUP, CLUSTER_NAME,
  APPROVAL_STATUS, IS_GLOBAL, CRITICAL_RULE,
  CRITICAL_SCOPE, CDC_TYPE, LIFECYCLE_STATE,
  DECISION_TABLE_ID, IS_ENCRYPTED
)
VALUES
(1, NULL, 1, -- group_id=1 => "RG1"
 'SampleRule1', 'SELECT 1', '2025-01-01','2025-12-31','INACTIVE',1,
 'admin','Just a sample','SELECT',
 'We need a sample rule for BFS', GETDATE(),
 NULL,'BG1','', 'APPROVED',0,0,'NONE','NONE','ACTIVE',NULL,0),
(1, 1, 1,
 'SampleChild', 'SELECT 0', '2025-01-01','2025-12-31','INACTIVE',1,
 'admin','Child rule','SELECT',
 'Child of SampleRule1', GETDATE(),
 NULL,'BG1','','APPROVED',0,0,'NONE','NONE','ACTIVE',NULL,0),
(2, NULL, 2,
 'AnotherRule', 'SELECT 1', '2025-01-01','2025-12-31','INACTIVE',1,
 'alice','Another BFS example','SELECT',
 'We want to test conflict logic', GETDATE(),
 NULL,'BG2','','APPROVED',0,0,'NONE','NONE','ACTIVE',NULL,0);

------------------------------------------------------------------------
-- BRM_RULE_TABLE_DEPENDENCIES
------------------------------------------------------------------------
INSERT INTO dbo.BRM_RULE_TABLE_DEPENDENCIES (
  RULE_ID, DATABASE_NAME, TABLE_NAME, COLUMN_NAME, COLUMN_OP
)
VALUES
(1, 'dbo', 'Customers', 'AutoCol', 'READ'),
(2, 'dbo', 'Orders', 'AutoCol', 'READ'),
(3, 'dbo', 'SomeOtherTable', 'AutoCol', 'READ');

------------------------------------------------------------------------
-- BRM_CUSTOM_RULE_GROUPS
------------------------------------------------------------------------
INSERT INTO dbo.BRM_CUSTOM_RULE_GROUPS (
  CUSTOM_GROUP_NAME, OWNER_BUSINESS_GROUP, CREATED_BY, CREATED_TIMESTAMP
)
VALUES
('MyCustomGroup1','BG1','admin',GETDATE()),
('MyCustomGroup2','BG2','admin',GETDATE());

------------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_MEMBERS
------------------------------------------------------------------------
-- Assign RuleID=1 to custom group 1, RuleID=2 to custom group 1, RuleID=3 to group 2
INSERT INTO dbo.BRM_CUSTOM_GROUP_MEMBERS (CUSTOM_GROUP_ID, RULE_ID)
VALUES
(1,1),
(1,2),
(2,3);

------------------------------------------------------------------------
-- RULE_SCHEDULES
------------------------------------------------------------------------
-- Schedule rule_id=1 for 2025-12-31
INSERT INTO dbo.RULE_SCHEDULES (RULE_ID, SCHEDULE_TIME, STATUS, CREATED_TIMESTAMP)
VALUES
(1, '2025-12-31 10:00:00','Scheduled', GETDATE());

------------------------------------------------------------------------
-- DECISION_TABLES
------------------------------------------------------------------------
INSERT INTO dbo.DECISION_TABLES (TABLE_NAME, DESCRIPTION)
VALUES
('SomeDecisionTable','Simple DT for demonstration');

------------------------------------------------------------------------
-- RULE_CONFLICTS
------------------------------------------------------------------------
-- conflict between rule 1 and rule 3 => priority=5
INSERT INTO dbo.RULE_CONFLICTS (RULE_ID1, RULE_ID2, PRIORITY)
VALUES
(1, 3, 5);

------------------------------------------------------------------------
-- COMPOSITE_RULES
------------------------------------------------------------------------
-- composite references: "Rule1==PASS AND Rule3==PASS"
INSERT INTO dbo.COMPOSITE_RULES (CRULE_NAME, LOGIC_EXPR, ACTION_ON_PASS)
VALUES
('Comp1','Rule1==PASS AND Rule3==PASS','SendEmail');

------------------------------------------------------------------------
-- RULE_SNAPSHOTS
------------------------------------------------------------------------
INSERT INTO dbo.RULE_SNAPSHOTS (SNAPSHOT_NAME, CREATED_BY, CREATED_TIMESTAMP, SNAPSHOT_JSON)
VALUES
('Snap1','admin',GETDATE(),'[{"RULE_ID":1,"RULE_NAME":"SampleRule1"}]');

------------------------------------------------------------------------
-- RULE_TAGS
------------------------------------------------------------------------
INSERT INTO dbo.RULE_TAGS (RULE_ID, TAG_NAME)
VALUES
(1,'TagA'),
(3,'TagB');

------------------------------------------------------------------------
-- DATA_VALIDATIONS
------------------------------------------------------------------------
INSERT INTO dbo.DATA_VALIDATIONS (
  TABLE_NAME, COLUMN_NAME, VALIDATION_TYPE, PARAMS
)
VALUES
('dbo.Customers','Email','NOT NULL','');

------------------------------------------------------------------------
-- RULE_EXECUTION_LOGS
------------------------------------------------------------------------
INSERT INTO dbo.RULE_EXECUTION_LOGS (
  RULE_ID, EXECUTION_TIMESTAMP, PASS_FLAG,
  MESSAGE, RECORD_COUNT, EXECUTION_TIME_MS
)
VALUES
(1, GETDATE(), 1, 'Returned 1 => PASS', 1, 10.5),
(2, GETDATE(), 0, 'Returned 0 => FAIL', 1, 15.2);

------------------------------------------------------------------------
-- BRM_GLOBAL_CRITICAL_LINKS
------------------------------------------------------------------------
-- Suppose rule 1 is global-critical => link it to rule 2 as a child
INSERT INTO dbo.BRM_GLOBAL_CRITICAL_LINKS (GCR_RULE_ID, TARGET_RULE_ID)
VALUES
(1,2);

------------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_BACKUPS
------------------------------------------------------------------------
-- minimal example => backup version=1 for group_id=1
INSERT INTO dbo.BRM_CUSTOM_GROUP_BACKUPS (
  CUSTOM_GROUP_ID, BACKUP_TIMESTAMP, BACKUP_VERSION, BACKUP_JSON
)
VALUES
(1, GETDATE(), 1, N'{"group_name":"MyCustomGroup1","members":[1,2]}');

------------------------------------------------------------------------
-- SECURE_FILES
------------------------------------------------------------------------
-- store an example file content. We'll treat SEC_ID=1 as the main record.
INSERT INTO dbo.SECURE_FILES (SEC_ID, SEC_CONTENT, SAVED_BY, SAVED_TIMESTAMP)
VALUES
(1, N'<PLAIN>Initial Plain Content</PLAIN>', 'UserID:1', GETDATE());

------------------------------------------------------------------------
-- BRM_RULE_APPROVALS
------------------------------------------------------------------------
-- Suppose rule_id=1 => BG1 => user=alice => stage=1 => already approved
INSERT INTO dbo.BRM_RULE_APPROVALS (
  RULE_ID, GROUP_NAME, USERNAME, APPROVED_FLAG, APPROVED_TIMESTAMP, APPROVAL_STAGE
)
VALUES
(1,'BG1','alice',1,GETDATE(),1),

-- Then stage=2 => FINAL => final_approver => not yet approved => 0
(1,'FINAL','final_approver',0,NULL,2),

-- Another example => rule_id=3 => BG2 => bob => stage=1 => not yet approved
(3,'BG2','bob',0,NULL,1);

------------------------------------------------------------------------
-- Optionally: BRM_RULE_LINEAGE, BRM_GROUP_BACKUPS, BRM_COLUMN_MAPPING, BRM_RULE_COMMENTS
-- if your code references them. 
-- We'll just do 1-2 inserts each as placeholders.

-- BRM_RULE_LINEAGE
INSERT INTO dbo.BRM_RULE_LINEAGE (RULE_ID, PARENT_RULE_ID)
VALUES (2,1);  -- child pointer

-- BRM_GROUP_BACKUPS
INSERT INTO dbo.BRM_GROUP_BACKUPS (GROUP_NAME, BACKUP_DATA, BACKUP_TIMESTAMP)
VALUES ('BG1', 'some data here', GETDATE());

-- BRM_COLUMN_MAPPING
INSERT INTO dbo.BRM_COLUMN_MAPPING (SOURCE_RULE_ID, RULE_ID, COLUMN_NAME)
VALUES (1,2,'MappedCol');

-- BRM_RULE_COMMENTS
INSERT INTO dbo.BRM_RULE_COMMENTS (RULE_ID, COMMENT_TEXT, CREATED_BY, CREATED_TIMESTAMP)
VALUES 
(1,'This is a sample comment','admin',GETDATE()),
(3,'Another comment on rule 3','alice',GETDATE());

------------------------------------------------------------------------
-- DONE. 
-- You now have sample data for each table, allowing you to test BFS, 
-- scheduling, conflicts, composites, custom groups, etc.
------------------------------------------------------------------------