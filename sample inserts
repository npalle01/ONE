---------------------------------------
-- Sample Data Inserts for Testing BRM TOOL
---------------------------------------

-- 1. USERS (e.g., Admin and business users)
INSERT INTO USERS (USERNAME, PASSWORD, USER_GROUP) VALUES ('admin', 'adminpass', 'Admin');
INSERT INTO USERS (USERNAME, PASSWORD, USER_GROUP) VALUES ('user1', 'user1pass', 'BG1');
INSERT INTO USERS (USERNAME, PASSWORD, USER_GROUP) VALUES ('user2', 'user2pass', 'BG2');

-- 2. BRM_RULE_LOCKS (simulate one active lock)
INSERT INTO BRM_RULE_LOCKS (RULE_ID, LOCKED_BY, LOCK_TIMESTAMP, EXPIRY_TIMESTAMP, FORCE_LOCK, ACTIVE_LOCK)
VALUES (1, 'user1', GETDATE(), DATEADD(MINUTE,30,GETDATE()), 0, 1);

-- 3. GROUP_PERMISSIONS (permissions on tables)
INSERT INTO GROUP_PERMISSIONS (GROUP_NAME, TARGET_TABLE) VALUES ('BG1', 'dbo.Customers');
INSERT INTO GROUP_PERMISSIONS (GROUP_NAME, TARGET_TABLE) VALUES ('BG2', 'dbo.Orders');
INSERT INTO GROUP_PERMISSIONS (GROUP_NAME, TARGET_TABLE) VALUES ('Admin', 'dbo.*');

-- 4. DATA_VALIDATIONS (for data integrity testing)
INSERT INTO DATA_VALIDATIONS (TABLE_NAME, COLUMN_NAME, VALIDATION_TYPE, PARAMS)
VALUES ('dbo.Customers', 'Email', 'NOT NULL', '');
INSERT INTO DATA_VALIDATIONS (TABLE_NAME, COLUMN_NAME, VALIDATION_TYPE, PARAMS)
VALUES ('dbo.Orders', 'OrderAmount', 'RANGE', '0,10000');

-- 5. BRM_RULE_TABLE_DEPENDENCIES (simulate rule dependencies)
INSERT INTO BRM_RULE_TABLE_DEPENDENCIES (RULE_ID, DATABASE_NAME, TABLE_NAME, COLUMN_NAME, COLUMN_OP, DATA_TYPE)
VALUES (1, 'dbo', 'Customers', 'CustomerID', 'READ', 'INT');
INSERT INTO BRM_RULE_TABLE_DEPENDENCIES (RULE_ID, DATABASE_NAME, TABLE_NAME, COLUMN_NAME, COLUMN_OP, DATA_TYPE)
VALUES (2, 'dbo', 'Orders', 'OrderID', 'WRITE', 'INT');

-- 6. BRM_RULE_APPROVALS (sample approval rows for a rule)
INSERT INTO BRM_RULE_APPROVALS (RULE_ID, GROUP_NAME, USERNAME, APPROVED_FLAG, APPROVAL_STAGE)
VALUES (1, 'BG1', 'user1', 0, 1);
INSERT INTO BRM_RULE_APPROVALS (RULE_ID, GROUP_NAME, USERNAME, APPROVED_FLAG, APPROVAL_STAGE)
VALUES (1, 'BG2', 'user2', 0, 2);

-- 7. BRM_RULES (sample business rules)
INSERT INTO BRM_RULES (
    GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL,
    EFFECTIVE_START_DATE, EFFECTIVE_END_DATE, STATUS, VERSION, CREATED_BY,
    DESCRIPTION, OPERATION_TYPE, BUSINESS_JUSTIFICATION, CREATED_TIMESTAMP,
    OWNER_GROUP, APPROVAL_STATUS, IS_GLOBAL, CRITICAL_RULE, CRITICAL_SCOPE, CDC_TYPE, LIFECYCLE_STATE, LOCK_STATUS
)
VALUES (
    1, NULL, 1, 'Customer Age Validation', 'SELECT 1',
    '2025-01-01', NULL, 'INACTIVE', 1, 'user1',
    'Validate that customer age is above 18', 'SELECT', 'Business need', GETDATE(),
    'BG1', 'APPROVAL_IN_PROGRESS', 0, 0, 'NONE', 'NONE', 'DRAFT', NULL
);

INSERT INTO BRM_RULES (
    GROUP_ID, PARENT_RULE_ID, RULE_TYPE_ID, RULE_NAME, RULE_SQL,
    EFFECTIVE_START_DATE, EFFECTIVE_END_DATE, STATUS, VERSION, CREATED_BY,
    DESCRIPTION, OPERATION_TYPE, BUSINESS_JUSTIFICATION, CREATED_TIMESTAMP,
    OWNER_GROUP, APPROVAL_STATUS, IS_GLOBAL, CRITICAL_RULE, CRITICAL_SCOPE, CDC_TYPE, LIFECYCLE_STATE, LOCK_STATUS
)
VALUES (
    2, 1, 2, 'Order Amount Check', 'SELECT 0',
    '2025-01-01', NULL, 'INACTIVE', 1, 'user2',
    'Ensure order amount is within limits', 'SELECT', 'Operational need', GETDATE(),
    'BG2', 'APPROVAL_IN_PROGRESS', 0, 0, 'NONE', 'NONE', 'DRAFT', NULL
);

-- 8. BRM_GLOBAL_CRITICAL_LINKS (link rule 1 as critical parent for rule 2)
INSERT INTO BRM_GLOBAL_CRITICAL_LINKS (GCR_RULE_ID, TARGET_RULE_ID) VALUES (1, 2);

-- 9. RULE_CONFLICTS (sample conflict between two rules)
INSERT INTO RULE_CONFLICTS (RULE_ID1, RULE_ID2, PRIORITY) VALUES (1, 2, 1);

-- 10. COMPOSITE_RULES (composite rule referring to Rule1 and Rule2)
INSERT INTO COMPOSITE_RULES (CRULE_NAME, LOGIC_EXPR, ACTION_ON_PASS)
VALUES ('Composite Rule 1', 'Rule1==PASS AND Rule2==PASS', 'SendEmail');

-- 11. RULE_EXECUTION_LOGS (a sample log entry)
INSERT INTO RULE_EXECUTION_LOGS (RULE_ID, PASS_FLAG, MESSAGE, RECORD_COUNT, EXECUTION_TIME_MS)
VALUES (1, 1, 'Passed', 10, 500);

-- 12. BRM_COLUMN_MAPPING (map one ruleâ€™s output to another rule)
INSERT INTO BRM_COLUMN_MAPPING (SOURCE_RULE_ID, RULE_ID) VALUES (1, 2);

-- 13. RULE_SCHEDULES (schedule a rule for execution 1 hour from now)
INSERT INTO RULE_SCHEDULES (RULE_ID, SCHEDULE_TIME, STATUS, VALIDATION_FLAG)
VALUES (1, DATEADD(HOUR, 1, GETDATE()), 'Scheduled', 1);

-- 14. DECISION_TABLES (a sample decision table)
INSERT INTO DECISION_TABLES (TABLE_NAME, DESCRIPTION)
VALUES ('dbo.Customers', 'Decision table for customer validations');

-- 15. RULE_SNAPSHOTS (a snapshot of rule data)
INSERT INTO RULE_SNAPSHOTS (SNAPSHOT_NAME, CREATED_BY, SNAPSHOT_JSON)
VALUES ('Snapshot 1', 'user1', '{"snapshot": "data"}');

-- 16. RULE_TAGS (tag rules for categorization)
INSERT INTO RULE_TAGS (RULE_ID, TAG_NAME) VALUES (1, 'Finance');
INSERT INTO RULE_TAGS (RULE_ID, TAG_NAME) VALUES (2, 'Sales');

-- 17. DATA_VALIDATION_LOGS (log results of data validations)
INSERT INTO DATA_VALIDATION_LOGS (RESULT_FLAG) VALUES ('PASS');
INSERT INTO DATA_VALIDATION_LOGS (RESULT_FLAG) VALUES ('FAIL');

-- 18. BUSINESS_GROUPS (define business groups)
INSERT INTO BUSINESS_GROUPS (GROUP_NAME, DESCRIPTION, EMAIL)
VALUES ('BG1', 'Business Group 1', 'bg1@example.com');
INSERT INTO BUSINESS_GROUPS (GROUP_NAME, DESCRIPTION, EMAIL)
VALUES ('BG2', 'Business Group 2', 'bg2@example.com');
INSERT INTO BUSINESS_GROUPS (GROUP_NAME, DESCRIPTION, EMAIL)
VALUES ('Admin', 'Administrators', 'admin@example.com');

-- 19. BRM_RULE_TYPES (define rule types)
INSERT INTO BRM_RULE_TYPES (RULE_TYPE_NAME) VALUES ('Validation');
INSERT INTO BRM_RULE_TYPES (RULE_TYPE_NAME) VALUES ('Check');

-- 20. BRM_RULE_GROUPS (sample rule groups)
INSERT INTO BRM_RULE_GROUPS (GROUP_NAME) VALUES ('Group1');
INSERT INTO BRM_RULE_GROUPS (GROUP_NAME) VALUES ('Group2');

-- 21. BRM_RULE_LINEAGE (record a lineage relation)
INSERT INTO BRM_RULE_LINEAGE (RULE_ID, DEPENDS_ON_RULE_ID, DETAILS)
VALUES (2, 1, 'Rule 2 depends on Rule 1');

-- 22. BRM_GROUP_BACKUPS (backup data for a group)
INSERT INTO BRM_GROUP_BACKUPS (GROUP_ID, BACKUP_JSON)
VALUES (1, '{"backup": "group1 data"}');

-- 23. BRM_CUSTOM_RULE_GROUPS (custom groups for rule assignments)
INSERT INTO BRM_CUSTOM_RULE_GROUPS (CUSTOM_GROUP_NAME, OWNER_BUSINESS_GROUP, CREATED_BY)
VALUES ('CustomGroup1', 'BG1', 'user1');

-- 24. BRM_CUSTOM_GROUP_MEMBERS (assign rules to a custom group)
INSERT INTO BRM_CUSTOM_GROUP_MEMBERS (CUSTOM_GROUP_ID, RULE_ID) VALUES (1, 1);
INSERT INTO BRM_CUSTOM_GROUP_MEMBERS (CUSTOM_GROUP_ID, RULE_ID) VALUES (1, 2);

-- 25. BUSINESS_GROUP_APPROVERS (assign approvers for business groups)
INSERT INTO BUSINESS_GROUP_APPROVERS (GROUP_NAME, USERNAME) VALUES ('BG1', 'user1');
INSERT INTO BUSINESS_GROUP_APPROVERS (GROUP_NAME, USERNAME) VALUES ('BG2', 'user2');

-- 26. BRM_CUSTOM_GROUP_BACKUPS (backup custom group membership)
INSERT INTO BRM_CUSTOM_GROUP_BACKUPS (CUSTOM_GROUP_ID, BACKUP_VERSION, BACKUP_JSON)
VALUES (1, 1, '{"backup": "custom group backup version 1"}');

-- 27. BRM_RULE_COMMENTS (add comments to rules)
INSERT INTO BRM_RULE_COMMENTS (RULE_ID, COMMENT_TEXT, COMMENTED_BY)
VALUES (1, 'Initial creation of rule', 'user1');
INSERT INTO BRM_RULE_COMMENTS (RULE_ID, COMMENT_TEXT, COMMENTED_BY)
VALUES (2, 'Reviewed by team', 'user2');