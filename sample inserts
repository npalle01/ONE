-------------------------------------------------------------------------------
-- SAMPLE DATA INSERTS FOR BRM TOOL
-------------------------------------------------------------------------------
-- 1. USERS
INSERT INTO USERS (USERNAME, PASSWORD, USER_GROUP)
VALUES 
  ('admin', 'admin123', 'Admin'),
  ('alice', 'alice123', 'BG1'),
  ('bob',   'bob123',   'BG2');

-------------------------------------------------------------------------------
-- 2. BUSINESS_GROUPS
INSERT INTO BUSINESS_GROUPS (GROUP_NAME, DESCRIPTION, EMAIL)
VALUES
  ('BG1', 'Business Group 1 (Credit Risk)', 'bg1@example.com'),
  ('BG2', 'Business Group 2 (Market Risk)', 'bg2@example.com'),
  ('FINAL','Final Approvers','final@example.com');

-------------------------------------------------------------------------------
-- 3. GROUP_PERMISSIONS
INSERT INTO GROUP_PERMISSIONS (GROUP_NAME, TARGET_TABLE)
VALUES
  ('BG1', 'dbo.Credit_Portfolio'),
  ('BG2', 'dbo.Market_Trades');

-------------------------------------------------------------------------------
-- 4. BRM_RULE_TYPES
INSERT INTO BRM_RULE_TYPES (RULE_TYPE_ID, RULE_TYPE_NAME)
VALUES 
  (1, 'Data Quality'),
  (2, 'Data Movement'),
  (3, 'Risk Checks');

-------------------------------------------------------------------------------
-- 5. BRM_RULE_GROUPS
INSERT INTO BRM_RULE_GROUPS (GROUP_NAME, DESCRIPTION)
VALUES
  ('CreditRiskGroup','Holds credit risk rules'),
  ('MarketRiskGroup','Holds market risk rules');

-------------------------------------------------------------------------------
-- 6. BRM_RULES
-- We'll insert two sample rules: one for credit risk in BG1, one for market risk in BG2.
-- Note that GROUP_ID must match from BRM_RULE_GROUPS, and OWNER_GROUP must match from BUSINESS_GROUPS.

-- Let's find the GROUP_ID for 'CreditRiskGroup' (assume it auto-generated ID=1),
-- and for 'MarketRiskGroup' (assume ID=2).
-- Adjust if your actual IDs differ.

INSERT INTO BRM_RULES (
    GROUP_ID,
    PARENT_RULE_ID,
    RULE_TYPE_ID,
    RULE_NAME,
    RULE_SQL,
    EFFECTIVE_START_DATE,
    STATUS,
    VERSION,
    CREATED_BY,
    DESCRIPTION,
    OPERATION_TYPE,
    BUSINESS_JUSTIFICATION,
    CREATED_TIMESTAMP,
    OWNER_GROUP,
    APPROVAL_STATUS,
    IS_GLOBAL,
    CRITICAL_RULE,
    CRITICAL_SCOPE,
    CDC_TYPE
)
VALUES
-- A credit exposure limit rule (in group ID=1, belongs to BG1).
(1, NULL, 3, 'MaxCreditExposure', 
 N'SELECT CASE WHEN SUM(Exposure) < 100000000 THEN 1 ELSE 0 END FROM Credit_Portfolio', 
 GETDATE(), 
 'INACTIVE', 1, 'admin', 
 N'Checks total credit exposure < $100M', 
 N'SELECT', 
 N'Reduce credit risk', 
 GETDATE(), 
 'BG1', 
 'APPROVAL_IN_PROGRESS', 
 0, 
 0, 
 'NONE', 
 'NONE'),

-- A market VaR rule (in group ID=2, belongs to BG2).
(2, NULL, 3, 'MarketVaRCheck', 
 N'SELECT CASE WHEN SUM(VaR) < 50000000 THEN 1 ELSE 0 END FROM Market_Trades', 
 GETDATE(), 
 'INACTIVE', 1, 'admin', 
 N'Checks if VaR < $50M', 
 N'SELECT',
 N'Mitigate market risk', 
 GETDATE(),
 'BG2',
 'APPROVAL_IN_PROGRESS',
 0,
 1,
 'CLUSTER',
 'NONE');

-------------------------------------------------------------------------------
-- 7. BRM_RULE_TABLE_DEPENDENCIES
-- Typically populated automatically by your code. Let's add a couple of manual lines
-- showing that the credit rule reads from dbo.Credit_Portfolio and the market rule reads from dbo.Market_Trades.

-- Suppose MaxCreditExposure => RULE_ID=1, MarketVaRCheck => RULE_ID=2 (adjust if your IDs differ).
INSERT INTO BRM_RULE_TABLE_DEPENDENCIES (RULE_ID, DATABASE_NAME, TABLE_NAME, COLUMN_NAME, COLUMN_OP)
VALUES
 (1, 'dbo', 'Credit_Portfolio', 'Exposure', 'READ'),
 (2, 'dbo', 'Market_Trades', 'VaR', 'READ');

-------------------------------------------------------------------------------
-- 8. BRM_AUDIT_LOG
-- Typically inserted by your code. For demo, we'll add a placeholder row.
INSERT INTO BRM_AUDIT_LOG (
    ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA
)
VALUES
 ('INSERT','BRM_RULES','1','admin',NULL, '{ "RULE_NAME": "MaxCreditExposure" }');

-------------------------------------------------------------------------------
-- 9. BRM_RULE_LINEAGE
-- If you have advanced lineage captures. For now, a placeholder.
INSERT INTO BRM_RULE_LINEAGE (RULE_ID, SOURCE_INFO, TARGET_INFO, TRANSFORMATION_DETAILS)
VALUES
 (1, 'Source: Credit_Portfolio', 'N/A', 'Summation of exposures'),
 (2, 'Source: Market_Trades',    'N/A', 'Summation of VaR');

-------------------------------------------------------------------------------
-- 10. BRM_GROUP_BACKUPS
-- For group backups. Let's just insert a single example.
INSERT INTO BRM_GROUP_BACKUPS (GROUP_NAME, BACKUP_VERSION, BACKUP_JSON)
VALUES
 ('BG1', 1, '{ "some": "backup data" }');

-------------------------------------------------------------------------------
-- 11. BRM_COLUMN_MAPPING
-- If used to map columns from rule to rule. A placeholder row:
INSERT INTO BRM_COLUMN_MAPPING (RULE_ID, SOURCE_RULE_ID, SOURCE_COLUMN_NAME, TARGET_COLUMN_NAME)
VALUES
 (1, 1, 'Exposure', 'ExposureCheck');

-------------------------------------------------------------------------------
-- 12. BRM_CUSTOM_RULE_GROUPS
INSERT INTO BRM_CUSTOM_RULE_GROUPS (CUSTOM_GROUP_NAME, OWNER_BUSINESS_GROUP, CREATED_BY)
VALUES
 ('Operational Risk – Q1','BG1','admin'),
 ('Liquidity Risk – Spring','BG2','admin');

-------------------------------------------------------------------------------
-- 13. BRM_CUSTOM_GROUP_MEMBERS
-- Suppose we want to put rule_id=1 in "Operational Risk – Q1" => which might have CUSTOM_GROUP_ID=1 (check actual).
-- We'll guess the ID is 1 for the first custom group, 2 for the second, etc.

INSERT INTO BRM_CUSTOM_GROUP_MEMBERS (CUSTOM_GROUP_ID, RULE_ID)
VALUES
 (1, 1),  -- puts MaxCreditExposure in custom group #1
 (2, 2);  -- puts MarketVaRCheck in custom group #2

-------------------------------------------------------------------------------
-- 14. BUSINESS_GROUP_APPROVERS
-- Let alice be an approver for BG1, bob for BG2, and finalApprover for FINAL.

INSERT INTO BUSINESS_GROUP_APPROVERS (GROUP_NAME, USERNAME)
VALUES
 ('BG1','alice'),
 ('BG2','bob'),
 ('FINAL','final_approver');

-------------------------------------------------------------------------------
-- 15. BRM_RULE_APPROVALS
-- Typically inserted by create_multistep_approvals. We'll add an example:
INSERT INTO BRM_RULE_APPROVALS (
  RULE_ID, GROUP_NAME, USERNAME, APPROVED_FLAG, APPROVED_TIMESTAMP, APPROVAL_STAGE
)
VALUES
 (1, 'BG1', 'alice', 0, NULL, 1),      -- rule 1 waiting BG1
 (1, 'FINAL','final_approver',0,NULL,2), -- final stage
 (2, 'BG2', 'bob', 0, NULL, 1),
 (2, 'FINAL','final_approver',0,NULL,2);

-------------------------------------------------------------------------------
-- 16. BRM_CUSTOM_GROUP_BACKUPS
INSERT INTO BRM_CUSTOM_GROUP_BACKUPS (CUSTOM_GROUP_ID, BACKUP_VERSION, BACKUP_JSON)
VALUES
 (1, 1, '{ "group_name": "Operational Risk – Q1", "members": [1] }'),
 (2, 1, '{ "group_name": "Liquidity Risk – Spring", "members": [2] }');

-------------------------------------------------------------------------------
-- 17. BRM_GLOBAL_CRITICAL_LINKS
-- If MarketVaRCheck (rule_id=2) is a global rule that, if fails, should skip rule 1 as well, for example:
INSERT INTO BRM_GLOBAL_CRITICAL_LINKS (GCR_RULE_ID, TARGET_RULE_ID)
VALUES
 (2, 1);

-------------------------------------------------------------------------------
-- 18. RULE_SCHEDULES
-- Schedules rule 1 to run tomorrow at midnight.
INSERT INTO RULE_SCHEDULES (RULE_ID, SCHEDULE_TIME, STATUS)
VALUES
 (1, DATEADD(DAY,1,CAST(GETDATE() as date)), 'Scheduled');

-------------------------------------------------------------------------------
-- 19. BRM_RULE_COMMENTS
-- If you have a comments table. Example:
INSERT INTO BRM_RULE_COMMENTS (RULE_ID, USERNAME, COMMENT_TEXT)
VALUES
 (1, 'alice', 'Need to double-check the exposure threshold'),
 (2, 'bob',   'VaR limit might be too low?');

-------------------------------------------------------------------------------
-- 20. DECISION_TABLES
INSERT INTO DECISION_TABLES (TABLE_NAME, DESCRIPTION)
VALUES
 ('CreditRiskThresholds','Defines thresholds for various credit risk segments'),
 ('VarLimits','Defines max VaR per asset class');

-------------------------------------------------------------------------------
-- 21. RULE_CONFLICTS
INSERT INTO RULE_CONFLICTS (RULE_ID1, RULE_ID2, PRIORITY)
VALUES
 (1,2, 1);

-------------------------------------------------------------------------------
-- 22. COMPOSITE_RULES
INSERT INTO COMPOSITE_RULES (CRULE_NAME, LOGIC_EXPR, ACTION_ON_PASS)
VALUES
 ('CompositeRiskRule', 'Rule1==PASS AND Rule2==PASS', 'Notify Admin');

-------------------------------------------------------------------------------
-- 23. RULE_SNAPSHOTS
INSERT INTO RULE_SNAPSHOTS (SNAPSHOT_NAME, CREATED_BY, SNAPSHOT_JSON)
VALUES
 ('BeforeRegChange','admin','{ "rules": "snapshot goes here" }');

-------------------------------------------------------------------------------
-- 24. RULE_TAGS
INSERT INTO RULE_TAGS (RULE_ID, TAG_NAME)
VALUES
 (1, 'Credit'),
 (2, 'Market');

-------------------------------------------------------------------------------
-- 25. DATA_VALIDATIONS
INSERT INTO DATA_VALIDATIONS (TABLE_NAME,COLUMN_NAME,VALIDATION_TYPE,PARAMS)
VALUES
 ('Credit_Portfolio','Exposure','RANGE','0-9999999999'),
 ('Market_Trades','VaR','NOT NULL','');

-------------------------------------------------------------------------------
-- 26. RULE_EXECUTION_LOGS
-- E.g. once rule 1 and 2 have been executed. We'll do a fake row:
INSERT INTO RULE_EXECUTION_LOGS (
  RULE_ID, EXECUTION_TIMESTAMP, PASS_FLAG, MESSAGE, RECORD_COUNT
)
VALUES
 (1, GETDATE(), 1, 'Returned: 1', 10),
 (2, GETDATE(), 0, 'Returned: 0 => FAIL', 5);

-------------------------------------------------------------------------------
-- Done. Now you have sample data for testing.
-------------------------------------------------------------------------------