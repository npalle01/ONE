from PyQt5.QtCore import QDate, QTime, QDateTime

def convert_to_qdatetime(dt):
    # If dt is a Python datetime, convert it:
    if isinstance(dt, datetime):
        return QDateTime(QDate(dt.year, dt.month, dt.day), QTime(dt.hour, dt.minute, dt.second))
    # If it's already a string, try converting using your format:
    elif isinstance(dt, str):
        qdt = QDateTime.fromString(dt, "yyyy-MM-dd HH:mm:ss")
        # You may also check if the conversion succeeded:
        if qdt.isValid():
            return qdt
        else:
            # Fallback to current date/time if needed:
            return QDateTime.currentDateTime()
    else:
        # Fallback:
        return QDateTime.currentDateTime()

# In your RuleEditorDialog.load_existing() method:
start = rd.get("EFFECTIVE_START_DATE")
if start:
    self.start_dt.setDateTime(convert_to_qdatetime(start))

end = rd.get("EFFECTIVE_END_DATE")
if end:
    self.end_dt.setDateTime(convert_to_qdatetime(end))