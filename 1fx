from PyQt5.QtWidgets import QWidget, QVBoxLayout, QFormLayout, QLineEdit, QPushButton, QMessageBox, QComboBox

class ApproverAddTab(QWidget):
    """
    A widget that allows an admin to add a new approver.
    This version uses a dropâ€‘down (QComboBox) for selecting the approver's group.
    Adjust the INSERT statement and field names to match your database schema.
    """
    def __init__(self, connection, parent=None):
        super().__init__(parent)
        self.connection = connection
        self.init_ui()

    def init_ui(self):
        layout = QVBoxLayout(self)
        form_layout = QFormLayout()

        self.username_edit = QLineEdit()
        form_layout.addRow("Username:", self.username_edit)

        # Use a QComboBox for selecting the group instead of a QLineEdit.
        self.group_combo = QComboBox()
        # Populate the combo box with a list of groups.
        # You can hard-code the groups or load them from your database.
        groups = ["Admin", "BusinessGroup", "OtherGroup"]  # Replace or load dynamically as needed.
        self.group_combo.addItems(groups)
        form_layout.addRow("Group:", self.group_combo)

        self.email_edit = QLineEdit()
        form_layout.addRow("Email:", self.email_edit)

        layout.addLayout(form_layout)

        add_button = QPushButton("Add Approver")
        add_button.clicked.connect(self.add_approver)
        layout.addWidget(add_button)

        self.setLayout(layout)

    def add_approver(self):
        username = self.username_edit.text().strip()
        group = self.group_combo.currentText().strip()
        email = self.email_edit.text().strip()

        if not username or not group:
            QMessageBox.warning(self, "Input Error", "Username and Group are required.")
            return

        c = self.connection.cursor()
        try:
            # Adjust the table and column names as needed.
            c.execute("""
                INSERT INTO APPROVERS (USERNAME, GROUP_NAME, EMAIL)
                VALUES (?, ?, ?)
            """, (username, group, email))
            self.connection.commit()
            QMessageBox.information(self, "Success", f"Approver '{username}' added successfully.")
            # Clear fields after successful addition.
            self.username_edit.clear()
            self.email_edit.clear()
        except Exception as e:
            QMessageBox.critical(self, "Error Adding Approver", str(e))


# In your MainWindow __init__ (or AdminTab) after initializing self.tabs:
if self.user_group == "Admin":
    self.approver_add_tab = ApproverAddTab(self.connection)
    self.tabs.addTab(self.approver_add_tab, "Approver Add")