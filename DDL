-- 1. USERS
CREATE TABLE USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME VARCHAR(100) NOT NULL,
    PASSWORD VARCHAR(100) NOT NULL,
    USER_GROUP VARCHAR(50) NOT NULL
);
GO

-- 2. BRM_AUDIT_LOG
CREATE TABLE BRM_AUDIT_LOG (
    AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ACTION VARCHAR(50) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    RECORD_ID VARCHAR(50) NULL,
    ACTION_BY VARCHAR(100) NOT NULL,
    OLD_DATA NVARCHAR(MAX) NULL,
    NEW_DATA NVARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

-- 3. RULE_LOCKS
CREATE TABLE RULE_LOCKS (
    LOCK_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    LOCKED_BY VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

-- 4. BRM_RULES (Main rules table)
CREATE TABLE BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID INT NULL,
    PARENT_RULE_ID INT NULL,
    RULE_TYPE_ID INT NOT NULL,
    RULE_NAME VARCHAR(255) NOT NULL,
    RULE_SQL NVARCHAR(MAX) NULL,
    EFFECTIVE_START_DATE DATETIME NOT NULL,
    EFFECTIVE_END_DATE DATETIME NULL,
    STATUS VARCHAR(50) NOT NULL,
    VERSION INT NOT NULL DEFAULT 1,
    CREATED_BY VARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    OPERATION_TYPE VARCHAR(50) NULL,
    BUSINESS_JUSTIFICATION NVARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    UPDATED_BY VARCHAR(100) NULL,
    OWNER_GROUP VARCHAR(50) NOT NULL,
    CLUSTER_NAME VARCHAR(100) NULL,
    APPROVAL_STATUS VARCHAR(50) NOT NULL,
    IS_GLOBAL BIT NOT NULL DEFAULT 0,
    CRITICAL_RULE BIT NOT NULL DEFAULT 0,
    CRITICAL_SCOPE VARCHAR(50) NOT NULL DEFAULT 'NONE',
    CDC_TYPE VARCHAR(50) NOT NULL DEFAULT 'NONE',
    LIFECYCLE_STATE VARCHAR(50) NOT NULL,
    DECISION_TABLE_ID INT NULL,
    ENCRYPTED_FLAG BIT NOT NULL DEFAULT 0,
    LOCKED_BY VARCHAR(100) NULL,
    LOCKED_AT DATETIME NULL
);
GO

-- 5. BRM_RULE_TYPES
CREATE TABLE BRM_RULE_TYPES (
    RULE_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100) NOT NULL
);
GO

-- 6. BRM_RULE_GROUPS
CREATE TABLE BRM_RULE_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL
);
GO

-- 7. BUSINESS_GROUPS
CREATE TABLE BUSINESS_GROUPS (
    BUSINESS_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    EMAIL VARCHAR(255) NULL
);
GO

-- 8. RULE_EXECUTION_LOGS
CREATE TABLE RULE_EXECUTION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE NVARCHAR(MAX) NULL,
    RECORD_COUNT INT NOT NULL,
    EXECUTION_TIME_MS FLOAT NOT NULL,
    CPU_USAGE FLOAT NOT NULL,
    MEM_USAGE FLOAT NOT NULL
);
GO

-- 9. RULE_CONFLICTS
CREATE TABLE RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1 INT NOT NULL,
    RULE_ID2 INT NOT NULL,
    PRIORITY INT NOT NULL
);
GO

-- 10. COMPOSITE_RULES
CREATE TABLE COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME VARCHAR(255) NOT NULL,
    LOGIC_EXPR NVARCHAR(MAX) NULL,
    ACTION_ON_PASS NVARCHAR(255) NULL
);
GO

-- 11. BRM_GLOBAL_CRITICAL_LINKS
CREATE TABLE BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);
GO

-- 12. BRM_RULE_TABLE_DEPENDENCIES
CREATE TABLE BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATABASE_NAME VARCHAR(100) NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NULL,
    COLUMN_OP VARCHAR(50) NULL
);
GO

-- 13. RULE_SCHEDULES
CREATE TABLE RULE_SCHEDULES (
    SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SCHEDULE_TIME DATETIME NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    RUN_DATA_VALIDATIONS BIT NOT NULL DEFAULT 0
);
GO

-- 14. DECISION_TABLES
CREATE TABLE DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(255) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL
);
GO

-- 15. RULE_SNAPSHOTS
CREATE TABLE RULE_SNAPSHOTS (
    SNAPSHOT_ID INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME VARCHAR(255) NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    SNAPSHOT_JSON NVARCHAR(MAX) NOT NULL
);
GO

-- 16. RULE_TAGS
CREATE TABLE RULE_TAGS (
    TAG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    TAG_NAME VARCHAR(100) NOT NULL
);
GO

-- 17. DATA_VALIDATIONS
CREATE TABLE DATA_VALIDATIONS (
    VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NULL,
    VALIDATION_TYPE VARCHAR(50) NOT NULL,
    PARAMS VARCHAR(255) NULL,
    VALIDATION_QUERY NVARCHAR(MAX) NULL
);
GO

-- 18. DATA_VALIDATION_LOGS
CREATE TABLE DATA_VALIDATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID INT NOT NULL,
    EXEC_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE NVARCHAR(MAX) NULL
);
GO

-- 19. BRM_RULE_APPROVALS
CREATE TABLE BRM_RULE_APPROVALS (
    APPROVAL_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    GROUP_NAME VARCHAR(100) NOT NULL,
    USERNAME VARCHAR(100) NOT NULL,
    APPROVED_FLAG INT NOT NULL,  -- 0: pending, 1: approved, 2: rejected
    APPROVED_TIMESTAMP DATETIME NULL,
    APPROVAL_STAGE INT NOT NULL,
    APPROVAL_LANE VARCHAR(100) NULL
);
GO

-- 20. RULE_PERF_STATS
CREATE TABLE RULE_PERF_STATS (
    STAT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATE_KEY VARCHAR(8) NOT NULL,  -- Format: YYYYMMDD
    EXEC_TIME_MS FLOAT NOT NULL,
    MEMORY_KB FLOAT NOT NULL,
    USAGE_COUNT INT NOT NULL DEFAULT 1,
    CREATED_TS DATETIME NOT NULL DEFAULT GETDATE()
);
GO

-- 21. GROUP_PERMISSIONS
CREATE TABLE GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    TARGET_TABLE VARCHAR(100) NOT NULL
);
GO

-- 22. BRM_RULE_LINEAGE
CREATE TABLE BRM_RULE_LINEAGE (
    LINEAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    LINEAGE_INFO NVARCHAR(MAX) NOT NULL
);
GO

-- 23. BRM_GROUP_BACKUPS
CREATE TABLE BRM_GROUP_BACKUPS (
    BACKUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    BACKUP_VERSION INT NOT NULL,
    BACKUP_JSON NVARCHAR(MAX) NOT NULL
);
GO

-- 24. BRM_COLUMN_MAPPING
CREATE TABLE BRM_COLUMN_MAPPING (
    MAPPING_ID INT IDENTITY(1,1) PRIMARY KEY,
    SOURCE_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL,
    COLUMN_MAPPING NVARCHAR(MAX) NOT NULL
);
GO

-- 25. BRM_CUSTOM_RULE_GROUPS
CREATE TABLE BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME VARCHAR(100) NOT NULL,
    OWNER_BUSINESS_GROUP VARCHAR(100) NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

-- 26. BRM_CUSTOM_GROUP_MEMBERS
CREATE TABLE BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID INT NOT NULL
);
GO

-- 27. BUSINESS_GROUP_APPROVERS
CREATE TABLE BUSINESS_GROUP_APPROVERS (
    APPROVER_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    USERNAME VARCHAR(100) NOT NULL
);
GO

-- 28. BRM_RULE_COMMENTS
CREATE TABLE BRM_RULE_COMMENTS (
    COMMENT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    COMMENT_TEXT NVARCHAR(MAX) NOT NULL,
    COMMENTED_BY VARCHAR(100) NOT NULL,
    COMMENT_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

-- 29. BRM_CUSTOM_GROUP_BACKUPS
CREATE TABLE BRM_CUSTOM_GROUP_BACKUPS (
    BACKUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    BACKUP_VERSION INT NOT NULL,
    BACKUP_JSON NVARCHAR(MAX) NOT NULL
);
GO

-- 30. BRM_DEFECTS (Defect logging and management module)
CREATE TABLE BRM_DEFECTS (
    DEFECT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DEFECT_DESCRIPTION NVARCHAR(MAX) NOT NULL,
    DEFECT_STATUS VARCHAR(50) NOT NULL, -- e.g., 'Open', 'In Progress', 'Closed'
    REPORTED_BY VARCHAR(100) NOT NULL,
    ASSIGNED_TO VARCHAR(100) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    UPDATED_TIMESTAMP DATETIME NULL,
    NOTES NVARCHAR(MAX) NULL
);
GO


