Below is a suggested T-SQL DDL script (for SQL Server) creating all tables/columns referenced in your 8‑part BRM Tool code. This should allow the Python code to run without “object not found” errors. Adjust data types, constraints, defaults, indexes, etc. as needed for your environment.

	NOTE
		•	Some columns (e.g. LOCKED_BY, LOCK_STATUS, LOCKED_AT) appear in certain code paths.
	•	Some rarely used tables like BRM_RULE_LINEAGE, BRM_COLUMN_MAPPING, BRM_GROUP_BACKUPS, BRM_RULE_COMMENTS appear in the “control tables” list.
	•	The data types (e.g. VARCHAR, NVARCHAR, INT) and constraints below are guesses. Tweak as required.

⸻



-------------------------------------------------------------------------------
-- 1) USERS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[USERS] (
    [USER_ID]      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [USERNAME]     VARCHAR(100)      NOT NULL,
    [PASSWORD]     VARCHAR(100)      NOT NULL,
    [USER_GROUP]   VARCHAR(100)      NOT NULL
);
GO


-------------------------------------------------------------------------------
-- 2) BUSINESS_GROUPS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BUSINESS_GROUPS] (
    [GROUP_NAME]   VARCHAR(100)  NOT NULL PRIMARY KEY,
    [DESCRIPTION]  VARCHAR(200)  NULL,
    [EMAIL]        VARCHAR(200)  NULL
);
GO


-------------------------------------------------------------------------------
-- 3) GROUP_PERMISSIONS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[GROUP_PERMISSIONS] (
    [PERMISSION_ID] INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [GROUP_NAME]    VARCHAR(100)      NOT NULL,
    [TARGET_TABLE]  VARCHAR(200)      NOT NULL
    -- Optionally you can add more columns like read/write flags if needed
);
GO

-- (Optional) foreign key from GROUP_PERMISSIONS to BUSINESS_GROUPS:
-- ALTER TABLE [dbo].[GROUP_PERMISSIONS]
--     ADD CONSTRAINT FK_GROUP_PERM_BG
--         FOREIGN KEY (GROUP_NAME) REFERENCES [dbo].[BUSINESS_GROUPS](GROUP_NAME);


-------------------------------------------------------------------------------
-- 4) BRM_RULE_TYPES
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BRM_RULE_TYPES] (
    [RULE_TYPE_ID]   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [RULE_TYPE_NAME] VARCHAR(100)      NOT NULL
);
GO


-------------------------------------------------------------------------------
-- 5) BRM_RULE_GROUPS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BRM_RULE_GROUPS] (
    [GROUP_ID]   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [GROUP_NAME] VARCHAR(100)      NOT NULL
);
GO


-------------------------------------------------------------------------------
-- 6) BRM_RULES
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BRM_RULES] (
    [RULE_ID]               INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [GROUP_ID]              INT         NULL,   -- references BRM_RULE_GROUPS(GROUP_ID)
    [PARENT_RULE_ID]        INT         NULL,   -- self-referencing (another RULE_ID)
    [RULE_TYPE_ID]          INT         NULL,   -- references BRM_RULE_TYPES(RULE_TYPE_ID)
    [RULE_NAME]             VARCHAR(200) NOT NULL,
    [RULE_SQL]              NVARCHAR(MAX) NULL,
    [EFFECTIVE_START_DATE]  DATETIME     NULL,
    [EFFECTIVE_END_DATE]    DATETIME     NULL,
    [STATUS]                VARCHAR(50)  NOT NULL DEFAULT('INACTIVE'),
    [VERSION]               INT          NOT NULL DEFAULT(1),
    [CREATED_BY]            VARCHAR(100) NULL,
    [DESCRIPTION]           VARCHAR(500) NULL,
    [OPERATION_TYPE]        VARCHAR(50)  NULL,   -- e.g. INSERT, UPDATE, DELETE, SELECT, DECISION_TABLE, ...
    [BUSINESS_JUSTIFICATION] VARCHAR(500) NULL,
    [CREATED_TIMESTAMP]     DATETIME     NULL DEFAULT(GETDATE()),
    [UPDATED_BY]            VARCHAR(100) NULL,
    [OWNER_GROUP]           VARCHAR(100) NULL,   -- references BUSINESS_GROUPS.GROUP_NAME typically
    [CLUSTER_NAME]          VARCHAR(100) NULL,
    [APPROVAL_STATUS]       VARCHAR(50)  NULL,   -- e.g. APPROVAL_IN_PROGRESS, APPROVED, REJECTED, ...
    [IS_GLOBAL]             BIT          NOT NULL DEFAULT(0),
    [CRITICAL_RULE]         BIT          NOT NULL DEFAULT(0),
    [CRITICAL_SCOPE]        VARCHAR(50)  NULL DEFAULT('NONE'), -- e.g. NONE/GROUP/CLUSTER/GLOBAL
    [CDC_TYPE]              VARCHAR(50)  NULL DEFAULT('NONE'),
    [LIFECYCLE_STATE]       VARCHAR(50)  NULL DEFAULT('DRAFT'), -- e.g. DRAFT, UNDER_APPROVAL, ACTIVE, ...
    [DECISION_TABLE_ID]     INT          NULL,   -- references DECISION_TABLES
    [ENCRYPTED_FLAG]        BIT          NOT NULL DEFAULT(0),

    -- Locking columns used in some parts of the code:
    [LOCK_STATUS]           BIT          NOT NULL DEFAULT(0), 
    [LOCKED_BY]             VARCHAR(100) NULL,
    [LOCKED_AT]             DATETIME     NULL
);
GO

-- Potential foreign keys (optional, remove if you prefer no constraints):
-- ALTER TABLE [dbo].[BRM_RULES]
--     ADD CONSTRAINT FK_BRM_RULES_GROUPS
--         FOREIGN KEY (GROUP_ID) REFERENCES [dbo].[BRM_RULE_GROUPS](GROUP_ID);
-- ALTER TABLE [dbo].[BRM_RULES]
--     ADD CONSTRAINT FK_BRM_RULES_TYPES
--         FOREIGN KEY (RULE_TYPE_ID) REFERENCES [dbo].[BRM_RULE_TYPES](RULE_TYPE_ID);

-- Self-reference for PARENT_RULE_ID:
-- ALTER TABLE [dbo].[BRM_RULES]
--     ADD CONSTRAINT FK_BRM_RULES_PARENT
--         FOREIGN KEY (PARENT_RULE_ID) REFERENCES [dbo].[BRM_RULES](RULE_ID);


-------------------------------------------------------------------------------
-- 7) BRM_RULE_TABLE_DEPENDENCIES
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BRM_RULE_TABLE_DEPENDENCIES] (
    [DEPENDENCY_ID] INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [RULE_ID]       INT          NOT NULL,
    [DATABASE_NAME] VARCHAR(100) NULL,
    [TABLE_NAME]    VARCHAR(200) NULL,
    [COLUMN_NAME]   VARCHAR(200) NULL,
    [COLUMN_OP]     VARCHAR(50)  NULL -- e.g. READ, WRITE
);
GO

-- Optional foreign key to BRM_RULES:
-- ALTER TABLE [dbo].[BRM_RULE_TABLE_DEPENDENCIES]
--     ADD CONSTRAINT FK_RULE_TABLE_DEPS
--         FOREIGN KEY (RULE_ID) REFERENCES [dbo].[BRM_RULES](RULE_ID);


-------------------------------------------------------------------------------
-- 8) BRM_AUDIT_LOG
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BRM_AUDIT_LOG] (
    [AUDIT_ID]        INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [ACTION]          VARCHAR(50)  NOT NULL,
    [TABLE_NAME]      VARCHAR(100) NOT NULL,
    [RECORD_ID]       VARCHAR(50)  NULL,
    [ACTION_BY]       VARCHAR(100) NULL,
    [OLD_DATA]        NVARCHAR(MAX) NULL,
    [NEW_DATA]        NVARCHAR(MAX) NULL,
    [ACTION_TIMESTAMP] DATETIME    NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 9) BRM_RULE_LINEAGE
-------------------------------------------------------------------------------
-- Not heavily used in the sample code, but referenced in control tables
CREATE TABLE [dbo].[BRM_RULE_LINEAGE] (
    [LINEAGE_ID] INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [RULE_ID]    INT NOT NULL,
    [LINEAGE_JSON] NVARCHAR(MAX) NULL
);
GO


-------------------------------------------------------------------------------
-- 10) BRM_GROUP_BACKUPS
-------------------------------------------------------------------------------
-- Mentioned in control tables list (not heavily detailed)
CREATE TABLE [dbo].[BRM_GROUP_BACKUPS] (
    [BACKUP_ID]     INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [GROUP_NAME]    VARCHAR(100) NOT NULL,
    [BACKUP_JSON]   NVARCHAR(MAX) NULL,
    [BACKUP_TS]     DATETIME     NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 11) BRM_COLUMN_MAPPING
-------------------------------------------------------------------------------
-- Mentioned in code references for ensuring no references exist before deletion
CREATE TABLE [dbo].[BRM_COLUMN_MAPPING] (
    [MAPPING_ID]    INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [SOURCE_RULE_ID] INT  NULL,
    [RULE_ID]        INT  NULL,
    [COLUMN_INFO]    VARCHAR(200) NULL
);
GO


-------------------------------------------------------------------------------
-- 12) BRM_RULE_COMMENTS
-------------------------------------------------------------------------------
-- Mentioned in the table list. Minimal columns assumed.
CREATE TABLE [dbo].[BRM_RULE_COMMENTS] (
    [COMMENT_ID] INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [RULE_ID]    INT NOT NULL,
    [COMMENT_TXT] NVARCHAR(MAX) NULL,
    [CREATED_BY]  VARCHAR(100) NULL,
    [CREATED_TS]  DATETIME     NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 13) BRM_CUSTOM_RULE_GROUPS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BRM_CUSTOM_RULE_GROUPS] (
    [CUSTOM_GROUP_ID]   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [CUSTOM_GROUP_NAME] VARCHAR(200)      NOT NULL,
    [OWNER_BUSINESS_GROUP] VARCHAR(100)   NULL,
    [CREATED_BY]        VARCHAR(100)     NULL,
    [CREATED_TIMESTAMP] DATETIME         NOT NULL DEFAULT(GETDATE())
);
GO


-------------------------------------------------------------------------------
-- 14) BRM_CUSTOM_GROUP_MEMBERS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BRM_CUSTOM_GROUP_MEMBERS] (
    [CUSTOM_GROUP_ID] INT NOT NULL,
    [RULE_ID]         INT NOT NULL
    -- You can add a composite PK if you wish:
    -- CONSTRAINT PK_CUSTOM_GROUP_MEMBERS PRIMARY KEY (CUSTOM_GROUP_ID, RULE_ID)
);
GO


-------------------------------------------------------------------------------
-- 15) BUSINESS_GROUP_APPROVERS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BUSINESS_GROUP_APPROVERS] (
    [APPROVER_ID] INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [GROUP_NAME]  VARCHAR(100) NOT NULL,
    [USERNAME]    VARCHAR(100) NOT NULL
);
GO


-------------------------------------------------------------------------------
-- 16) BRM_RULE_APPROVALS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BRM_RULE_APPROVALS] (
    [APPROVAL_ID]       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [RULE_ID]           INT NOT NULL,
    [GROUP_NAME]        VARCHAR(100) NOT NULL,
    [USERNAME]          VARCHAR(100) NOT NULL,
    [APPROVED_FLAG]     INT  NOT NULL DEFAULT(0),  -- 0=Pending, 1=Approved, 2=Rejected
    [APPROVED_TIMESTAMP] DATETIME NULL,
    [APPROVAL_STAGE]    INT  NOT NULL DEFAULT(1)
);
GO


-------------------------------------------------------------------------------
-- 17) BRM_CUSTOM_GROUP_BACKUPS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BRM_CUSTOM_GROUP_BACKUPS] (
    [BACKUP_ID]         INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [CUSTOM_GROUP_ID]   INT NOT NULL,
    [BACKUP_TIMESTAMP]  DATETIME NOT NULL DEFAULT(GETDATE()),
    [BACKUP_VERSION]    INT NOT NULL,
    [BACKUP_JSON]       NVARCHAR(MAX) NULL
);
GO


-------------------------------------------------------------------------------
-- 18) BRM_GLOBAL_CRITICAL_LINKS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[BRM_GLOBAL_CRITICAL_LINKS] (
    [GCR_ID]       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [GCR_RULE_ID]  INT NOT NULL,
    [TARGET_RULE_ID] INT NOT NULL
);
GO


-------------------------------------------------------------------------------
-- 19) RULE_SCHEDULES
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[RULE_SCHEDULES] (
    [SCHEDULE_ID]      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [RULE_ID]          INT NOT NULL,
    [SCHEDULE_TIME]    DATETIME  NOT NULL,
    [STATUS]           VARCHAR(50) NOT NULL DEFAULT('Scheduled'),
    [CREATED_TIMESTAMP] DATETIME  NOT NULL DEFAULT(GETDATE()),
    [RUN_DATA_VALIDATIONS] BIT    NOT NULL DEFAULT(0)
);
GO


-------------------------------------------------------------------------------
-- 20) BRM_RULE_COMMENTS
-- (We already created above; if not, place it here)
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
-- 21) DECISION_TABLES
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[DECISION_TABLES] (
    [DECISION_TABLE_ID] INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [TABLE_NAME]        VARCHAR(200)  NOT NULL,
    [DESCRIPTION]       VARCHAR(500)  NULL
);
GO


-------------------------------------------------------------------------------
-- 22) RULE_CONFLICTS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[RULE_CONFLICTS] (
    [CONFLICT_ID] INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [RULE_ID1]    INT NOT NULL,
    [RULE_ID2]    INT NOT NULL,
    [PRIORITY]    INT NOT NULL DEFAULT(1)
);
GO


-------------------------------------------------------------------------------
-- 23) COMPOSITE_RULES
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[COMPOSITE_RULES] (
    [COMPOSITE_RULE_ID] INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [CRULE_NAME]        VARCHAR(200) NULL,
    [LOGIC_EXPR]        VARCHAR(MAX) NULL,
    [ACTION_ON_PASS]    VARCHAR(200) NULL
);
GO


-------------------------------------------------------------------------------
-- 24) RULE_SNAPSHOTS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[RULE_SNAPSHOTS] (
    [SNAPSHOT_ID]     INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [SNAPSHOT_NAME]   VARCHAR(200)      NOT NULL,
    [CREATED_BY]      VARCHAR(100)      NULL,
    [CREATED_TIMESTAMP] DATETIME       NOT NULL DEFAULT(GETDATE()),
    [SNAPSHOT_JSON]   NVARCHAR(MAX)    NULL
);
GO


-------------------------------------------------------------------------------
-- 25) RULE_TAGS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[RULE_TAGS] (
    [TAG_ID]   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [RULE_ID]  INT NOT NULL,
    [TAG_NAME] VARCHAR(200) NOT NULL
);
GO


-------------------------------------------------------------------------------
-- 26) DATA_VALIDATIONS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[DATA_VALIDATIONS] (
    [VALIDATION_ID]   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [TABLE_NAME]      VARCHAR(200)  NOT NULL,
    [COLUMN_NAME]     VARCHAR(200)  NOT NULL,
    [VALIDATION_TYPE] VARCHAR(50)   NOT NULL,  -- e.g. 'NOT NULL', 'RANGE', etc.
    [PARAMS]          VARCHAR(500)  NULL
);
GO


-------------------------------------------------------------------------------
-- 27) RULE_EXECUTION_LOGS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[RULE_EXECUTION_LOGS] (
    [EXEC_LOG_ID]       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [RULE_ID]           INT NOT NULL,
    [EXECUTION_TIMESTAMP] DATETIME NOT NULL DEFAULT(GETDATE()),
    [PASS_FLAG]         BIT        NOT NULL DEFAULT(1),
    [MESSAGE]           VARCHAR(500) NULL,
    [RECORD_COUNT]      INT        NULL,
    [EXECUTION_TIME_MS] INT        NULL,
    [CPU_USAGE]         INT        NULL,
    [MEM_USAGE]         INT        NULL
);
GO


-------------------------------------------------------------------------------
-- 28) RULE_PERF_STATS
-------------------------------------------------------------------------------
CREATE TABLE [dbo].[RULE_PERF_STATS] (
    [STATS_ID]     INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [RULE_ID]      INT NOT NULL,
    [DATE_KEY]     VARCHAR(8)  NOT NULL,  -- e.g. '20250101'
    [EXEC_TIME_MS] FLOAT       NOT NULL DEFAULT(0),
    [MEMORY_KB]    FLOAT       NOT NULL DEFAULT(0),
    [USAGE_COUNT]  INT         NOT NULL DEFAULT(0),
    [CREATED_TS]   DATETIME    NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------------------
-- DONE!
-------------------------------------------------------------------------------

/*
  NOTES:
  1) The above tables are skeleton definitions. Add or remove constraints (NOT NULL, FOREIGN KEY, etc.) as needed.
  2) Some code sections reference constraints or unique indexes (e.g. unique rule names within a group). If that’s required,
     add them:
        ALTER TABLE BRM_RULES ADD CONSTRAINT UQ_RULE_OWNER_NAME 
            UNIQUE(OWNER_GROUP, RULE_NAME);
  3) Adjust data types (like NVARCHAR vs VARCHAR, or TEXT vs MAX) to meet your actual data-size needs.
  4) If you prefer to handle locking in a separate table (like `RULE_LOCKS`) instead of columns in `BRM_RULES`, 
     remove `LOCK_STATUS`, `LOCKED_BY`, `LOCKED_AT` from `BRM_RULES` and create that separate table as shown in 
     early code examples.
  5) The code references these table names and columns in Parts 1–8. With the above schema in place, your Python code 
     should not raise “table/column not found” errors.
*/

Use the above CREATE TABLE statements (plus any desired keys or indexes) to ensure the Python BRM Tool code finds all necessary objects. Adjust as you see fit for your particular environment (collations, filegroups, indexing strategy, etc.).

