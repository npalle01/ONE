/********************************************************************
  DDL Script for BRM TOOL – Complete Database Schema (29 Tables)
  
  Note:
  - Tables 1-24 come from direct code references (Parts 1–7).
  - Tables 25-29 are additional (for alerts, notifications, user sessions,
    and rule history) that many production systems add.
  - This script is written for SQL Server; adjust functions (like GETDATE(),
    DATEDIFF, etc.) as needed for your environment.
********************************************************************/

------------------------------
-- 1. USERS
------------------------------
CREATE TABLE USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME NVARCHAR(100) NOT NULL UNIQUE,
    PASSWORD NVARCHAR(100) NOT NULL,
    USER_GROUP NVARCHAR(50) NOT NULL
);
GO

------------------------------
-- 2. BUSINESS_GROUPS
------------------------------
CREATE TABLE BUSINESS_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME NVARCHAR(50) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    EMAIL NVARCHAR(100) NULL,
    IS_OWNER_GROUP BIT NOT NULL
);
GO

------------------------------
-- 3. BUSINESS_GROUP_APPROVERS
------------------------------
CREATE TABLE BUSINESS_GROUP_APPROVERS (
    APPROVER_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME NVARCHAR(50) NOT NULL,
    USERNAME NVARCHAR(100) NOT NULL
);
GO

------------------------------
-- 4. GROUP_PERMISSIONS
------------------------------
CREATE TABLE GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME NVARCHAR(50) NOT NULL,
    TARGET_TABLE NVARCHAR(100) NOT NULL
);
GO

------------------------------
-- 5. BRM_RULES
------------------------------
CREATE TABLE BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID INT NULL,
    PARENT_RULE_ID INT NULL,
    RULE_TYPE_ID INT NOT NULL,
    RULE_NAME NVARCHAR(200) NOT NULL,
    RULE_SQL NVARCHAR(MAX) NOT NULL,
    EFFECTIVE_START_DATE DATE NOT NULL,
    EFFECTIVE_END_DATE DATE NULL,
    STATUS NVARCHAR(50) NOT NULL,
    VERSION INT NOT NULL,
    CREATED_BY NVARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    OPERATION_TYPE NVARCHAR(20) NOT NULL,
    BUSINESS_JUSTIFICATION NVARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    UPDATED_BY NVARCHAR(100) NULL,
    OWNER_GROUP NVARCHAR(50) NOT NULL,
    CLUSTER_NAME NVARCHAR(50) NULL,
    APPROVAL_STATUS NVARCHAR(50) NOT NULL,
    IS_GLOBAL BIT NOT NULL,
    CRITICAL_RULE BIT NOT NULL,
    CRITICAL_SCOPE NVARCHAR(20) NOT NULL,
    CDC_TYPE NVARCHAR(20) NOT NULL,
    LIFECYCLE_STATE NVARCHAR(20) NOT NULL,
    UPDATED_TIMESTAMP DATETIME NULL,
    ENCRYPTED_FILE_PATH NVARCHAR(255) NULL,
    -- Additional columns for dashboard
    LOCK_STATUS NVARCHAR(20) NOT NULL DEFAULT 'UNLOCKED',
    PERF_MS_AVG FLOAT NOT NULL DEFAULT 0
);
GO

------------------------------
-- 6. BRM_AUDIT_LOG
------------------------------
CREATE TABLE BRM_AUDIT_LOG (
    AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ACTION NVARCHAR(50) NOT NULL,
    TABLE_NAME NVARCHAR(100) NOT NULL,
    RECORD_ID NVARCHAR(50) NULL,
    ACTION_BY NVARCHAR(100) NOT NULL,
    OLD_DATA NVARCHAR(MAX) NULL,
    NEW_DATA NVARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

------------------------------
-- 7. BRM_RULE_LOCKS
------------------------------
CREATE TABLE BRM_RULE_LOCKS (
    LOCK_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    LOCKED_BY NVARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP DATETIME NOT NULL,
    EXPIRY_TIMESTAMP DATETIME NULL,
    FORCE_LOCK BIT NOT NULL,
    ACTIVE_LOCK BIT NOT NULL
);
GO

------------------------------
-- 8. BRM_RULE_TABLE_DEPENDENCIES
------------------------------
CREATE TABLE BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATABASE_NAME NVARCHAR(100) NOT NULL,
    TABLE_NAME NVARCHAR(100) NOT NULL,
    COLUMN_NAME NVARCHAR(100) NULL,
    COLUMN_OP NVARCHAR(10) NOT NULL
);
GO

------------------------------
-- 9. BRM_GLOBAL_CRITICAL_LINKS
------------------------------
CREATE TABLE BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);
GO

------------------------------
-- 10. RULE_CONFLICTS
------------------------------
CREATE TABLE RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1 INT NOT NULL,
    RULE_ID2 INT NOT NULL,
    PRIORITY INT NOT NULL
);
GO

------------------------------
-- 11. COMPOSITE_RULES
------------------------------
CREATE TABLE COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME NVARCHAR(200) NOT NULL,
    LOGIC_EXPR NVARCHAR(MAX) NULL,
    ACTION_ON_PASS NVARCHAR(100) NULL
);
GO

------------------------------
-- 12. BRM_COLUMN_MAPPING
------------------------------
CREATE TABLE BRM_COLUMN_MAPPING (
    MAPPING_ID INT IDENTITY(1,1) PRIMARY KEY,
    SOURCE_RULE_ID INT NOT NULL,
    RULE_ID INT NOT NULL
    -- Additional columns as needed
);
GO

------------------------------
-- 13. BRM_RULE_APPROVALS
------------------------------
CREATE TABLE BRM_RULE_APPROVALS (
    APPROVAL_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    GROUP_NAME NVARCHAR(50) NOT NULL,
    USERNAME NVARCHAR(100) NOT NULL,
    APPROVED_FLAG BIT NOT NULL,
    APPROVAL_STAGE INT NOT NULL,
    APPROVED_TIMESTAMP DATETIME NULL
);
GO

------------------------------
-- 14. RULE_SCHEDULES
------------------------------
CREATE TABLE RULE_SCHEDULES (
    SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SCHEDULE_TIME DATETIME NOT NULL,
    STATUS NVARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    VALIDATION_FLAG BIT NOT NULL
);
GO

------------------------------
-- 15. BRM_CUSTOM_RULE_GROUPS
------------------------------
CREATE TABLE BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME NVARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL
);
GO

------------------------------
-- 16. BRM_CUSTOM_GROUP_MEMBERS
------------------------------
CREATE TABLE BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID INT NOT NULL
);
GO

------------------------------
-- 17. DECISION_TABLES
------------------------------
CREATE TABLE DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME NVARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL
);
GO

------------------------------
-- 18. RULE_TAGS
------------------------------
CREATE TABLE RULE_TAGS (
    TAG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    TAG_NAME NVARCHAR(100) NOT NULL
);
GO

------------------------------
-- 19. DATA_VALIDATIONS
------------------------------
CREATE TABLE DATA_VALIDATIONS (
    VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME NVARCHAR(100) NOT NULL,
    COLUMN_NAME NVARCHAR(100) NOT NULL,
    VALIDATION_TYPE NVARCHAR(50) NOT NULL,
    PARAMS NVARCHAR(100) NULL
);
GO

------------------------------
-- 20. DATA_VALIDATION_LOGS
------------------------------
CREATE TABLE DATA_VALIDATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RESULT_FLAG NVARCHAR(10) NOT NULL,
    VALIDATION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

------------------------------
-- 21. ACTIVITY_LOG
------------------------------
CREATE TABLE ACTIVITY_LOG (
    ACTIVITY_ID INT IDENTITY(1,1) PRIMARY KEY,
    EVENT_TYPE NVARCHAR(50) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NOT NULL,
    [USER] NVARCHAR(100) NOT NULL,
    TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    ADDITIONAL_DATA NVARCHAR(MAX) NULL
);
GO

------------------------------
-- 22. BRM_DEFECT_LOGS
------------------------------
CREATE TABLE BRM_DEFECT_LOGS (
    DEFECT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NOT NULL,
    SEVERITY NVARCHAR(20) NOT NULL,
    REPORTER NVARCHAR(100) NOT NULL,
    STATUS NVARCHAR(50) NOT NULL,
    TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

------------------------------
-- 23. RULE_EXECUTION_LOGS
------------------------------
CREATE TABLE RULE_EXECUTION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    RECORD_COUNT INT NOT NULL,
    EXEC_TIME_MS FLOAT NOT NULL
);
GO

------------------------------
-- 24. RULE_SNAPSHOTS
------------------------------
CREATE TABLE RULE_SNAPSHOTS (
    SNAPSHOT_ID INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME NVARCHAR(100) NOT NULL,
    CREATED_BY NVARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    SNAPSHOT_JSON NVARCHAR(MAX) NOT NULL
);
GO

------------------------------
-- 25. BRM_RULE_LINEAGE
------------------------------
CREATE TABLE BRM_RULE_LINEAGE (
    LINEAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    PARENT_RULE_ID INT NOT NULL
);
GO

------------------------------
-- 26. BRM_ALERTS
------------------------------
CREATE TABLE BRM_ALERTS (
    ALERT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NULL,
    ALERT_TYPE NVARCHAR(50) NOT NULL,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    STATUS NVARCHAR(50) NOT NULL  -- e.g., New, Acknowledged, Resolved
);
GO

------------------------------
-- 27. BRM_NOTIFICATIONS
------------------------------
CREATE TABLE BRM_NOTIFICATIONS (
    NOTIFICATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    USER_ID INT NOT NULL,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    SENT_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    READ_FLAG BIT NOT NULL DEFAULT 0
);
GO

------------------------------
-- 28. BRM_USER_SESSIONS
------------------------------
CREATE TABLE BRM_USER_SESSIONS (
    SESSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    USER_ID INT NOT NULL,
    LOGIN_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    LOGOUT_TIMESTAMP DATETIME NULL,
    IP_ADDRESS NVARCHAR(50) NULL,
    STATUS NVARCHAR(20) NOT NULL  -- e.g., Active, Closed
);
GO

------------------------------
-- 29. BRM_RULE_HISTORY
------------------------------
CREATE TABLE BRM_RULE_HISTORY (
    HISTORY_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    CHANGE_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    CHANGED_BY NVARCHAR(100) NOT NULL,
    OLD_DATA NVARCHAR(MAX) NULL,
    NEW_DATA NVARCHAR(MAX) NULL
);
GO
-- Drop table: USERS
IF OBJECT_ID('dbo.USERS', 'U') IS NOT NULL 
    DROP TABLE dbo.USERS;
GO

-- Drop table: BRM_AUDIT_LOG
IF OBJECT_ID('dbo.BRM_AUDIT_LOG', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_AUDIT_LOG;
GO

-- Drop table: BRM_RULE_LOCKS
IF OBJECT_ID('dbo.BRM_RULE_LOCKS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULE_LOCKS;
GO

-- Drop table: BRM_RULES
IF OBJECT_ID('dbo.BRM_RULES', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULES;
GO

-- Drop table: BRM_RULE_TABLE_DEPENDENCIES
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;
GO

-- Drop table: GROUP_PERMISSIONS
IF OBJECT_ID('dbo.GROUP_PERMISSIONS', 'U') IS NOT NULL 
    DROP TABLE dbo.GROUP_PERMISSIONS;
GO

-- Drop table: DATA_VALIDATIONS
IF OBJECT_ID('dbo.DATA_VALIDATIONS', 'U') IS NOT NULL 
    DROP TABLE dbo.DATA_VALIDATIONS;
GO

-- Drop table: BUSINESS_GROUP_APPROVERS
IF OBJECT_ID('dbo.BUSINESS_GROUP_APPROVERS', 'U') IS NOT NULL 
    DROP TABLE dbo.BUSINESS_GROUP_APPROVERS;
GO

-- Drop table: BRM_RULE_APPROVALS
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULE_APPROVALS;
GO

-- Drop table: BRM_GLOBAL_CRITICAL_LINKS
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS;
GO

-- Drop table: RULE_CONFLICTS
IF OBJECT_ID('dbo.RULE_CONFLICTS', 'U') IS NOT NULL 
    DROP TABLE dbo.RULE_CONFLICTS;
GO

-- Drop table: COMPOSITE_RULES
IF OBJECT_ID('dbo.COMPOSITE_RULES', 'U') IS NOT NULL 
    DROP TABLE dbo.COMPOSITE_RULES;
GO

-- Drop table: BRM_COLUMN_MAPPING
IF OBJECT_ID('dbo.BRM_COLUMN_MAPPING', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_COLUMN_MAPPING;
GO

-- Drop table: BRM_RULE_LINEAGE
IF OBJECT_ID('dbo.BRM_RULE_LINEAGE', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULE_LINEAGE;
GO

-- Drop table: RULE_SCHEDULES
IF OBJECT_ID('dbo.RULE_SCHEDULES', 'U') IS NOT NULL 
    DROP TABLE dbo.RULE_SCHEDULES;
GO

-- Drop table: RULE_EXECUTION_LOGS
IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS', 'U') IS NOT NULL 
    DROP TABLE dbo.RULE_EXECUTION_LOGS;
GO

-- Drop table: BRM_CUSTOM_GROUP_MEMBERS
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;
GO

-- Drop table: BRM_CUSTOM_RULE_GROUPS
IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_CUSTOM_RULE_GROUPS;
GO

-- Drop table: DECISION_TABLES
IF OBJECT_ID('dbo.DECISION_TABLES', 'U') IS NOT NULL 
    DROP TABLE dbo.DECISION_TABLES;
GO

-- Drop table: RULE_TAGS
IF OBJECT_ID('dbo.RULE_TAGS', 'U') IS NOT NULL 
    DROP TABLE dbo.RULE_TAGS;
GO

-- Drop table: DATA_VALIDATION_LOGS
IF OBJECT_ID('dbo.DATA_VALIDATION_LOGS', 'U') IS NOT NULL 
    DROP TABLE dbo.DATA_VALIDATION_LOGS;
GO

-- Drop table: BUSINESS_GROUPS
IF OBJECT_ID('dbo.BUSINESS_GROUPS', 'U') IS NOT NULL 
    DROP TABLE dbo.BUSINESS_GROUPS;
GO

-- Drop table: ACTIVITY_LOG
IF OBJECT_ID('dbo.ACTIVITY_LOG', 'U') IS NOT NULL 
    DROP TABLE dbo.ACTIVITY_LOG;
GO

-- Drop table: BRM_DEFECT_LOGS
IF OBJECT_ID('dbo.BRM_DEFECT_LOGS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_DEFECT_LOGS;
GO

-- Drop table: RULE_SNAPSHOTS
IF OBJECT_ID('dbo.RULE_SNAPSHOTS', 'U') IS NOT NULL 
    DROP TABLE dbo.RULE_SNAPSHOTS;
GO

-- Drop table: BRM_ALERTS
IF OBJECT_ID('dbo.BRM_ALERTS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_ALERTS;
GO

-- Drop table: ALERT_CONFIGURATIONS
IF OBJECT_ID('dbo.ALERT_CONFIGURATIONS', 'U') IS NOT NULL 
    DROP TABLE dbo.ALERT_CONFIGURATIONS;
GO

-- Drop table: BRM_SYSTEM_CONFIG  -- extra table (if required)
IF OBJECT_ID('dbo.BRM_SYSTEM_CONFIG', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_SYSTEM_CONFIG;
GO
