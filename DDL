-------------------------------------------------------------------
-- Drop all tables if they exist (SQL Server style)
-------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_BACKUPS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS;

IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;

IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_CUSTOM_RULE_GROUPS;

IF OBJECT_ID('dbo.COMPOSITE_RULES', 'U') IS NOT NULL 
    DROP TABLE dbo.COMPOSITE_RULES;

IF OBJECT_ID('dbo.DATA_VALIDATION_LOGS', 'U') IS NOT NULL 
    DROP TABLE dbo.DATA_VALIDATION_LOGS;

IF OBJECT_ID('dbo.DATA_VALIDATIONS', 'U') IS NOT NULL 
    DROP TABLE dbo.DATA_VALIDATIONS;

IF OBJECT_ID('dbo.DECISION_TABLES', 'U') IS NOT NULL 
    DROP TABLE dbo.DECISION_TABLES;

IF OBJECT_ID('dbo.BRM_DEFECT_LOGS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_DEFECT_LOGS;

IF OBJECT_ID('dbo.RULE_PERF_STATS', 'U') IS NOT NULL 
    DROP TABLE dbo.RULE_PERF_STATS;

IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS', 'U') IS NOT NULL 
    DROP TABLE dbo.RULE_EXECUTION_LOGS;

IF OBJECT_ID('dbo.RULE_SNAPSHOTS', 'U') IS NOT NULL 
    DROP TABLE dbo.RULE_SNAPSHOTS;

IF OBJECT_ID('dbo.RULE_TAGS', 'U') IS NOT NULL 
    DROP TABLE dbo.RULE_TAGS;

IF OBJECT_ID('dbo.RULE_CONFLICTS', 'U') IS NOT NULL 
    DROP TABLE dbo.RULE_CONFLICTS;

IF OBJECT_ID('dbo.RULE_SCHEDULES', 'U') IS NOT NULL 
    DROP TABLE dbo.RULE_SCHEDULES;

IF OBJECT_ID('dbo.BRM_RULE_APPROVALS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULE_APPROVALS;

IF OBJECT_ID('dbo.BRM_RULE_LOCKS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULE_LOCKS;

IF OBJECT_ID('dbo.BRM_RULES', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULES;

IF OBJECT_ID('dbo.BRM_COLUMN_MAPPING', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_COLUMN_MAPPING;

IF OBJECT_ID('dbo.BRM_RULE_LINEAGE', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULE_LINEAGE;

IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;

IF OBJECT_ID('dbo.BRM_AUDIT_LOG', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_AUDIT_LOG;

IF OBJECT_ID('dbo.GROUP_PERMISSIONS', 'U') IS NOT NULL 
    DROP TABLE dbo.GROUP_PERMISSIONS;

IF OBJECT_ID('dbo.BUSINESS_GROUP_APPROVERS', 'U') IS NOT NULL 
    DROP TABLE dbo.BUSINESS_GROUP_APPROVERS;

IF OBJECT_ID('dbo.BUSINESS_GROUPS', 'U') IS NOT NULL 
    DROP TABLE dbo.BUSINESS_GROUPS;

IF OBJECT_ID('dbo.BRM_RULE_TYPES', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULE_TYPES;

IF OBJECT_ID('dbo.BRM_RULE_GROUPS', 'U') IS NOT NULL 
    DROP TABLE dbo.BRM_RULE_GROUPS;

IF OBJECT_ID('dbo.USERS', 'U') IS NOT NULL 
    DROP TABLE dbo.USERS;
GO

-------------------------------------------------------------------
-- USERS
-------------------------------------------------------------------
CREATE TABLE dbo.USERS (
    USER_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    USERNAME      VARCHAR(100) NOT NULL,
    PASSWORD      VARCHAR(100) NOT NULL,
    USER_GROUP    VARCHAR(100) NOT NULL
    -- no references; group name is just text
);
GO

-------------------------------------------------------------------
-- BUSINESS_GROUPS
-------------------------------------------------------------------
CREATE TABLE dbo.BUSINESS_GROUPS (
    GROUP_NAME    VARCHAR(100) NOT NULL PRIMARY KEY,
    DESCRIPTION   VARCHAR(200) NULL,
    EMAIL         VARCHAR(200) NULL
);
GO

-------------------------------------------------------------------
-- GROUP_PERMISSIONS
-- e.g. "GROUP_NAME" => "TARGET_TABLE"
-------------------------------------------------------------------
CREATE TABLE dbo.GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME    VARCHAR(100) NOT NULL,
    TARGET_TABLE  VARCHAR(200) NOT NULL
    -- no foreign key reference, plain text
);
GO

-------------------------------------------------------------------
-- BUSINESS_GROUP_APPROVERS
-------------------------------------------------------------------
CREATE TABLE dbo.BUSINESS_GROUP_APPROVERS (
    APPROVER_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME    VARCHAR(100) NOT NULL,
    USERNAME      VARCHAR(100) NOT NULL
);
GO

-------------------------------------------------------------------
-- BRM_RULE_TYPES
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_TYPES (
    RULE_TYPE_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION    VARCHAR(200) NULL
);
GO

-------------------------------------------------------------------
-- BRM_RULE_GROUPS
-- e.g. used for the "GroupID" in some references
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_GROUPS (
    GROUP_ID    INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME  VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(200) NULL
);
GO

-------------------------------------------------------------------
-- BRM_RULES
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULES (
    RULE_ID               INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_NAME             VARCHAR(200) NOT NULL,
    RULE_SQL              VARCHAR(MAX) NULL,
    STATUS                VARCHAR(50) NULL,
    VERSION               INT NOT NULL DEFAULT(1),
    OWNER_GROUP           VARCHAR(100) NULL,
    APPROVAL_STATUS       VARCHAR(50) NULL,
    LOCKED_BY             VARCHAR(100) NULL,
    LOCK_STATUS           BIT NOT NULL DEFAULT(0),
    IS_GLOBAL             BIT NOT NULL DEFAULT(0),
    CRITICAL_RULE         BIT NOT NULL DEFAULT(0),
    CRITICAL_SCOPE        VARCHAR(50) NULL,
    OPERATION_TYPE        VARCHAR(50) NULL,
    BUSINESS_JUSTIFICATION VARCHAR(500) NULL,
    LIFECYCLE_STATE       VARCHAR(50) NULL,
    PARENT_RULE_ID        INT NULL,    -- no references
    GROUP_ID              INT NULL,    -- no references
    RULE_TYPE_ID          INT NULL,    -- no references
    EFFECTIVE_START_DATE  VARCHAR(50) NULL,
    EFFECTIVE_END_DATE    VARCHAR(50) NULL,
    CDC_TYPE              VARCHAR(50) NULL,
    CLUSTER_NAME          VARCHAR(100) NULL,
    DECISION_TABLE_ID     INT NULL,    -- no references
    CREATED_BY            VARCHAR(100) NULL,
    CREATED_TIMESTAMP     DATETIME     NULL,
    UPDATED_BY            VARCHAR(100) NULL,
    ENCRYPTED_FLAG        BIT NOT NULL DEFAULT(0)
);
GO

-------------------------------------------------------------------
-- RULE_CONFLICTS
-------------------------------------------------------------------
CREATE TABLE dbo.RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID1    INT NOT NULL, 
    RULE_ID2    INT NOT NULL,
    PRIORITY    INT NOT NULL DEFAULT(1)
);
GO

-------------------------------------------------------------------
-- RULE_SCHEDULES
-------------------------------------------------------------------
CREATE TABLE dbo.RULE_SCHEDULES (
    SCHEDULE_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID          INT NOT NULL,
    SCHEDULE_TIME    DATETIME NOT NULL,
    STATUS           VARCHAR(50) NOT NULL,
    RUN_DATA_VALIDATIONS BIT NOT NULL DEFAULT(0),
    CREATED_TIMESTAMP    DATETIME NULL
);
GO

-------------------------------------------------------------------
-- BRM_RULE_APPROVALS
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_APPROVALS (
    APPROVAL_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID          INT NOT NULL,
    GROUP_NAME       VARCHAR(100) NOT NULL,
    USERNAME         VARCHAR(100) NOT NULL,
    APPROVED_FLAG    INT NOT NULL DEFAULT(0),  -- 0=pending,1=approved,2=rejected
    APPROVAL_STAGE   INT NOT NULL DEFAULT(1),
    APPROVED_TIMESTAMP DATETIME NULL
);
GO

-------------------------------------------------------------------
-- BRM_RULE_LOCKS
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_LOCKS (
    LOCK_ID         INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID         INT NOT NULL,
    LOCKED_BY       VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP  DATETIME NOT NULL DEFAULT(GETDATE()),
    EXPIRY_TIMESTAMP DATETIME NULL,
    FORCE_LOCK      BIT NOT NULL DEFAULT(0),
    ACTIVE_LOCK     BIT NOT NULL DEFAULT(1)
);
GO

-------------------------------------------------------------------
-- BRM_DEFECT_LOGS
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_DEFECT_LOGS (
    DEFECT_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID        INT NULL,
    DESCRIPTION    VARCHAR(1000) NULL,
    SEVERITY       VARCHAR(50) NULL,
    REPORTER       VARCHAR(100) NULL,
    STATUS         VARCHAR(50) NOT NULL DEFAULT('Open'),
    RESOLUTION     VARCHAR(500) NULL,
    TIMESTAMP      DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------
-- DECISION_TABLES
-------------------------------------------------------------------
CREATE TABLE dbo.DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    TABLE_NAME        VARCHAR(200) NOT NULL,
    DESCRIPTION       VARCHAR(500) NULL,
    DECISION_QUERY    VARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NULL DEFAULT(GETDATE()),
    UPDATED_TIMESTAMP DATETIME NULL
);
GO

-------------------------------------------------------------------
-- DATA_VALIDATIONS
-------------------------------------------------------------------
CREATE TABLE dbo.DATA_VALIDATIONS (
    VALIDATION_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    TABLE_NAME      VARCHAR(200) NOT NULL,
    COLUMN_NAME     VARCHAR(200) NOT NULL,
    VALIDATION_TYPE VARCHAR(50) NOT NULL,
    PARAMS          VARCHAR(500) NULL,
    CREATED_TIMESTAMP DATETIME NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------
-- DATA_VALIDATION_LOGS
-------------------------------------------------------------------
CREATE TABLE dbo.DATA_VALIDATION_LOGS (
    LOG_ID              INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    VALIDATION_ID       INT NOT NULL,
    RESULT_FLAG         VARCHAR(10) NOT NULL, -- e.g. PASS/FAIL
    DETAILS             VARCHAR(1000) NULL,
    VALIDATION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------
-- COMPOSITE_RULES
-------------------------------------------------------------------
CREATE TABLE dbo.COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CRULE_NAME        VARCHAR(200) NOT NULL,
    LOGIC_EXPR        VARCHAR(MAX) NULL,
    ACTION_ON_PASS    VARCHAR(200) NULL
);
GO

-------------------------------------------------------------------
-- BRM_CUSTOM_RULE_GROUPS
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CUSTOM_GROUP_NAME     VARCHAR(200) NOT NULL,
    OWNER_BUSINESS_GROUP  VARCHAR(100) NULL,
    CREATED_BY           VARCHAR(100) NULL,
    CREATED_TIMESTAMP    DATETIME NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_MEMBERS
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID         INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CUSTOM_GROUP_ID   INT NOT NULL,
    RULE_ID           INT NOT NULL
);
GO

-------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_BACKUPS
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS (
    BACKUP_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    BACKUP_VERSION  INT NOT NULL,
    BACKUP_JSON     VARCHAR(MAX) NOT NULL
);
GO

-------------------------------------------------------------------
-- BRM_RULE_TABLE_DEPENDENCIES
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID       INT NOT NULL,
    DATABASE_NAME VARCHAR(100) NULL,
    TABLE_NAME    VARCHAR(200) NOT NULL,
    COLUMN_NAME   VARCHAR(200) NULL,
    COLUMN_OP     VARCHAR(20) NULL -- e.g. READ/WRITE
);
GO

-------------------------------------------------------------------
-- BRM_AUDIT_LOG
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_AUDIT_LOG (
    AUDIT_ID          INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    ACTION            VARCHAR(50) NOT NULL,
    TABLE_NAME        VARCHAR(100) NOT NULL,
    RECORD_ID         VARCHAR(50) NULL,
    ACTION_BY         VARCHAR(100) NOT NULL,
    OLD_DATA          VARCHAR(MAX) NULL,
    NEW_DATA          VARCHAR(MAX) NULL,
    ACTION_TIMESTAMP  DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

-------------------------------------------------------------------
-- RULE_PERF_STATS
-------------------------------------------------------------------
CREATE TABLE dbo.RULE_PERF_STATS (
    PERF_ID     INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID     INT NOT NULL,
    DATE_KEY    VARCHAR(8) NOT NULL,  -- e.g. '20250317'
    EXEC_TIME_MS FLOAT NOT NULL DEFAULT(0),
    USAGE_COUNT  INT NOT NULL DEFAULT(0),
    MEMORY_KB    FLOAT NOT NULL DEFAULT(0)
);
GO

-------------------------------------------------------------------
-- RULE_EXECUTION_LOGS
-------------------------------------------------------------------
CREATE TABLE dbo.RULE_EXECUTION_LOGS (
    EXEC_LOG_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID          INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    PASS_FLAG        BIT NOT NULL DEFAULT(0),
    MESSAGE          VARCHAR(1000) NULL,
    RECORD_COUNT     INT NOT NULL DEFAULT(0),
    EXECUTION_TIME_MS INT NOT NULL DEFAULT(0),
    CPU_USAGE        INT NOT NULL DEFAULT(0),
    MEM_USAGE        INT NOT NULL DEFAULT(0)
);
GO

-------------------------------------------------------------------
-- RULE_SNAPSHOTS
-------------------------------------------------------------------
CREATE TABLE dbo.RULE_SNAPSHOTS (
    SNAPSHOT_ID    INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    SNAPSHOT_NAME  VARCHAR(200) NOT NULL,
    CREATED_BY     VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    SNAPSHOT_JSON  VARCHAR(MAX) NOT NULL
);
GO

-------------------------------------------------------------------
-- RULE_TAGS
-------------------------------------------------------------------
CREATE TABLE dbo.RULE_TAGS (
    TAG_ID    INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID   INT NOT NULL,
    TAG_NAME  VARCHAR(100) NOT NULL
);
GO

-------------------------------------------------------------------
-- BRM_RULE_LINEAGE
-- (Used optionally in code references - just placeholders)
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_LINEAGE (
    LINEAGE_ID    INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID       INT NOT NULL,
    PARENT_ID     INT NULL,
    DESCRIPTION   VARCHAR(200) NULL
);
GO

-------------------------------------------------------------------
-- BRM_COLUMN_MAPPING
-- (Optional usage - placeholders)
-------------------------------------------------------------------
CREATE TABLE dbo.BRM_COLUMN_MAPPING (
    MAPPING_ID    INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    SOURCE_RULE_ID INT NOT NULL,
    RULE_ID       INT NOT NULL,
    COLUMN_NAME   VARCHAR(200) NOT NULL
);
GO
CREATE TABLE dbo.HELP_CONTENT (
    HELP_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CATEGORY VARCHAR(50) NOT NULL,  -- e.g., 'FAQ' or 'Guide'
    TITLE VARCHAR(200) NOT NULL,
    CONTENT VARCHAR(MAX) NOT NULL,
    LAST_UPDATED DATETIME NOT NULL DEFAULT(GETDATE())
);
GO
CREATE TABLE dbo.COLLABORATION_LOGS (
    LOG_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    MESSAGE VARCHAR(MAX) NOT NULL,
    SENDER VARCHAR(100) NOT NULL,
    TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO
