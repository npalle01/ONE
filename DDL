DROP TABLE IF EXISTS dbo.BRM_RULE_LOCKS;
DROP TABLE IF EXISTS dbo.SYSTEM_SECRETS;
DROP TABLE IF EXISTS dbo.RULE_EXECUTION_LOGS;
DROP TABLE IF EXISTS dbo.DATA_VALIDATIONS;
DROP TABLE IF EXISTS dbo.RULE_TAGS;
DROP TABLE IF EXISTS dbo.RULE_SNAPSHOTS;
DROP TABLE IF EXISTS dbo.BRM_RULE_COMMENTS;
DROP TABLE IF EXISTS dbo.RULE_SCHEDULES;
DROP TABLE IF EXISTS dbo.BRM_GLOBAL_CRITICAL_LINKS;
DROP TABLE IF EXISTS dbo.BRM_CUSTOM_GROUP_BACKUPS;
DROP TABLE IF EXISTS dbo.BRM_RULE_APPROVALS;
DROP TABLE IF EXISTS dbo.BRM_CUSTOM_GROUP_MEMBERS;
DROP TABLE IF EXISTS dbo.BRM_CUSTOM_RULE_GROUPS;
DROP TABLE IF EXISTS dbo.BRM_COLUMN_MAPPING;
DROP TABLE IF EXISTS dbo.BRM_GROUP_BACKUPS;
DROP TABLE IF EXISTS dbo.BRM_RULE_LINEAGE;
DROP TABLE IF EXISTS dbo.BRM_AUDIT_LOG;
DROP TABLE IF EXISTS dbo.BRM_RULE_TABLE_DEPENDENCIES;
DROP TABLE IF EXISTS dbo.RULE_CONFLICTS;
DROP TABLE IF EXISTS dbo.BRM_RULES;
DROP TABLE IF EXISTS dbo.COMPOSITE_RULES;
DROP TABLE IF EXISTS dbo.DECISION_TABLES;
DROP TABLE IF EXISTS dbo.BUSINESS_GROUP_APPROVERS;
DROP TABLE IF EXISTS dbo.GROUP_PERMISSIONS;
DROP TABLE IF EXISTS dbo.BRM_RULE_GROUPS;
DROP TABLE IF EXISTS dbo.BRM_RULE_TYPES;
DROP TABLE IF EXISTS dbo.BUSINESS_GROUPS;
DROP TABLE IF EXISTS dbo.USERS;


------------------------------------------------------------------------------
-- USERS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.USERS','U') IS NOT NULL
    DROP TABLE dbo.USERS;
GO

CREATE TABLE dbo.USERS (
    USER_ID       INT IDENTITY(1,1) NOT NULL,
    USERNAME      VARCHAR(100)      NOT NULL,
    [PASSWORD]    VARCHAR(100)      NOT NULL,
    USER_GROUP    VARCHAR(100)      NOT NULL,
    CONSTRAINT PK_USERS PRIMARY KEY (USER_ID)
);
GO

------------------------------------------------------------------------------
-- BUSINESS_GROUPS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BUSINESS_GROUPS;
GO

CREATE TABLE dbo.BUSINESS_GROUPS (
    GROUP_NAME    VARCHAR(100)  NOT NULL,
    DESCRIPTION   VARCHAR(500)  NULL,
    EMAIL         VARCHAR(200)  NULL,
    CONSTRAINT PK_BUSINESS_GROUPS PRIMARY KEY (GROUP_NAME)
);
GO

------------------------------------------------------------------------------
-- BRM_RULE_TYPES
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TYPES','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_TYPES;
GO

CREATE TABLE dbo.BRM_RULE_TYPES (
    RULE_TYPE_ID     INT IDENTITY(1,1) NOT NULL,
    RULE_TYPE_NAME   VARCHAR(100)      NOT NULL,
    CONSTRAINT PK_BRM_RULE_TYPES PRIMARY KEY (RULE_TYPE_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_RULE_GROUPS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_GROUPS;
GO

CREATE TABLE dbo.BRM_RULE_GROUPS (
    GROUP_ID     INT IDENTITY(1,1) NOT NULL,
    GROUP_NAME   VARCHAR(100)      NOT NULL,
    -- Optional extra columns if needed
    CONSTRAINT PK_BRM_RULE_GROUPS PRIMARY KEY (GROUP_ID)
);
GO

------------------------------------------------------------------------------
-- GROUP_PERMISSIONS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.GROUP_PERMISSIONS','U') IS NOT NULL
    DROP TABLE dbo.GROUP_PERMISSIONS;
GO

CREATE TABLE dbo.GROUP_PERMISSIONS (
    PERMISSION_ID   INT IDENTITY(1,1) NOT NULL,
    GROUP_NAME      VARCHAR(100)      NOT NULL,
    TARGET_TABLE    VARCHAR(200)      NOT NULL,
    CONSTRAINT PK_GROUP_PERMISSIONS PRIMARY KEY (PERMISSION_ID)
);
GO

------------------------------------------------------------------------------
-- BUSINESS_GROUP_APPROVERS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUP_APPROVERS','U') IS NOT NULL
    DROP TABLE dbo.BUSINESS_GROUP_APPROVERS;
GO

CREATE TABLE dbo.BUSINESS_GROUP_APPROVERS (
    APPROVER_ID  INT IDENTITY(1,1) NOT NULL,
    GROUP_NAME   VARCHAR(100)      NOT NULL,
    USERNAME     VARCHAR(100)      NOT NULL,
    CONSTRAINT PK_BUSINESS_GROUP_APPROVERS PRIMARY KEY (APPROVER_ID)
);
GO

------------------------------------------------------------------------------
-- DECISION_TABLES
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.DECISION_TABLES','U') IS NOT NULL
    DROP TABLE dbo.DECISION_TABLES;
GO

CREATE TABLE dbo.DECISION_TABLES (
    DECISION_TABLE_ID   INT IDENTITY(1,1) NOT NULL,
    TABLE_NAME          VARCHAR(200)      NOT NULL,
    [DESCRIPTION]       VARCHAR(1000)     NULL,
    CONSTRAINT PK_DECISION_TABLES PRIMARY KEY (DECISION_TABLE_ID)
);
GO

------------------------------------------------------------------------------
-- COMPOSITE_RULES
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.COMPOSITE_RULES','U') IS NOT NULL
    DROP TABLE dbo.COMPOSITE_RULES;
GO

CREATE TABLE dbo.COMPOSITE_RULES (
    COMPOSITE_RULE_ID  INT IDENTITY(1,1) NOT NULL,
    CRULE_NAME         VARCHAR(200)      NOT NULL,
    LOGIC_EXPR         VARCHAR(MAX)      NULL,
    ACTION_ON_PASS     VARCHAR(200)      NULL,
    CONSTRAINT PK_COMPOSITE_RULES PRIMARY KEY (COMPOSITE_RULE_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_RULES
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULES','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULES;
GO

CREATE TABLE dbo.BRM_RULES (
    RULE_ID               INT IDENTITY(1,1) NOT NULL,
    GROUP_ID              INT               NULL, 
    PARENT_RULE_ID        INT               NULL,
    RULE_TYPE_ID          INT               NULL,
    RULE_NAME             VARCHAR(200)      NOT NULL,
    RULE_SQL              VARCHAR(MAX)      NULL,
    EFFECTIVE_START_DATE  DATETIME          NULL,
    EFFECTIVE_END_DATE    DATETIME          NULL,
    STATUS                VARCHAR(50)       NOT NULL,
    VERSION               INT               NOT NULL DEFAULT(1),
    CREATED_BY            VARCHAR(100)      NULL,
    [DESCRIPTION]         VARCHAR(1000)     NULL,
    OPERATION_TYPE        VARCHAR(20)       NULL,
    BUSINESS_JUSTIFICATION VARCHAR(1000)    NULL,
    CREATED_TIMESTAMP     DATETIME          NOT NULL DEFAULT(GETDATE()),
    UPDATED_BY            VARCHAR(100)      NULL,
    OWNER_GROUP           VARCHAR(100)      NOT NULL,
    CLUSTER_NAME          VARCHAR(100)      NULL,
    APPROVAL_STATUS       VARCHAR(50)       NULL,
    IS_GLOBAL             BIT               NOT NULL DEFAULT(0),
    CRITICAL_RULE         BIT               NOT NULL DEFAULT(0),
    CRITICAL_SCOPE        VARCHAR(50)       NULL,
    CDC_TYPE              VARCHAR(20)       NULL,
    LIFECYCLE_STATE       VARCHAR(50)       NULL,
    DECISION_TABLE_ID     INT               NULL,
    CONSTRAINT PK_BRM_RULES PRIMARY KEY (RULE_ID)
);
GO

------------------------------------------------------------------------------
-- RULE_CONFLICTS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_CONFLICTS','U') IS NOT NULL
    DROP TABLE dbo.RULE_CONFLICTS;
GO

CREATE TABLE dbo.RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) NOT NULL,
    RULE_ID1    INT               NOT NULL,
    RULE_ID2    INT               NOT NULL,
    PRIORITY    INT               NOT NULL,
    CONSTRAINT PK_RULE_CONFLICTS PRIMARY KEY (CONFLICT_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_RULE_TABLE_DEPENDENCIES
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;
GO

CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID  INT IDENTITY(1,1) NOT NULL,
    RULE_ID        INT               NOT NULL,
    DATABASE_NAME  VARCHAR(100)      NULL,
    TABLE_NAME     VARCHAR(100)      NULL,
    COLUMN_NAME    VARCHAR(100)      NULL,
    COLUMN_OP      VARCHAR(10)       NULL,
    CONSTRAINT PK_BRM_RULE_TABLE_DEPENDENCIES PRIMARY KEY (DEPENDENCY_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_AUDIT_LOG
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_AUDIT_LOG','U') IS NOT NULL
    DROP TABLE dbo.BRM_AUDIT_LOG;
GO

CREATE TABLE dbo.BRM_AUDIT_LOG (
    AUDIT_ID         INT IDENTITY(1,1) NOT NULL,
    [ACTION]         VARCHAR(50)       NOT NULL,
    TABLE_NAME       VARCHAR(100)      NOT NULL,
    RECORD_ID        VARCHAR(50)       NULL,
    ACTION_BY        VARCHAR(100)      NULL,
    OLD_DATA         VARCHAR(MAX)      NULL,
    NEW_DATA         VARCHAR(MAX)      NULL,
    ACTION_TIMESTAMP DATETIME          NOT NULL DEFAULT(GETDATE()),
    CONSTRAINT PK_BRM_AUDIT_LOG PRIMARY KEY (AUDIT_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_RULE_LINEAGE
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_LINEAGE','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_LINEAGE;
GO

CREATE TABLE dbo.BRM_RULE_LINEAGE (
    LINEAGE_ID INT IDENTITY(1,1) NOT NULL,
    RULE_ID    INT               NOT NULL,
    INFO       VARCHAR(500)      NULL,
    CONSTRAINT PK_BRM_RULE_LINEAGE PRIMARY KEY (LINEAGE_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_GROUP_BACKUPS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_GROUP_BACKUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_GROUP_BACKUPS;
GO

CREATE TABLE dbo.BRM_GROUP_BACKUPS (
    BACKUP_ID        INT IDENTITY(1,1) NOT NULL,
    GROUP_NAME       VARCHAR(100)      NOT NULL,
    BACKUP_TIMESTAMP DATETIME          NOT NULL,
    BACKUP_DATA      VARCHAR(MAX)      NULL,
    CONSTRAINT PK_BRM_GROUP_BACKUPS PRIMARY KEY (BACKUP_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_COLUMN_MAPPING
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_COLUMN_MAPPING','U') IS NOT NULL
    DROP TABLE dbo.BRM_COLUMN_MAPPING;
GO

CREATE TABLE dbo.BRM_COLUMN_MAPPING (
    MAPPING_ID     INT IDENTITY(1,1) NOT NULL,
    SOURCE_RULE_ID INT               NULL,
    RULE_ID        INT               NULL,
    COLUMN_NAME    VARCHAR(100)      NULL,
    MAPPING_DESC   VARCHAR(500)      NULL,
    CONSTRAINT PK_BRM_COLUMN_MAPPING PRIMARY KEY (MAPPING_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_CUSTOM_RULE_GROUPS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_RULE_GROUPS;
GO

CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID          INT IDENTITY(1,1) NOT NULL,
    CUSTOM_GROUP_NAME        VARCHAR(200)      NOT NULL,
    OWNER_BUSINESS_GROUP     VARCHAR(100)      NOT NULL,
    CREATED_BY               VARCHAR(100)      NOT NULL,
    CREATED_TIMESTAMP        DATETIME          NOT NULL DEFAULT(GETDATE()),
    CONSTRAINT PK_BRM_CUSTOM_RULE_GROUPS PRIMARY KEY (CUSTOM_GROUP_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_MEMBERS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;
GO

CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID        INT IDENTITY(1,1) NOT NULL,
    CUSTOM_GROUP_ID  INT               NOT NULL,
    RULE_ID          INT               NOT NULL,
    CONSTRAINT PK_BRM_CUSTOM_GROUP_MEMBERS PRIMARY KEY (MEMBER_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_RULE_APPROVALS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_APPROVALS;
GO

CREATE TABLE dbo.BRM_RULE_APPROVALS (
    APPROVAL_ID       INT IDENTITY(1,1) NOT NULL,
    RULE_ID           INT               NOT NULL,
    GROUP_NAME        VARCHAR(100)      NOT NULL,
    USERNAME          VARCHAR(100)      NOT NULL,
    APPROVED_FLAG     INT               NOT NULL DEFAULT(0),   -- 0=Pending,1=Approved,2=Rejected
    APPROVED_TIMESTAMP DATETIME         NULL,
    APPROVAL_STAGE    INT               NOT NULL,
    CONSTRAINT PK_BRM_RULE_APPROVALS PRIMARY KEY (APPROVAL_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_BACKUPS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_BACKUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS;
GO

CREATE TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS (
    BACKUP_ID       INT IDENTITY(1,1) NOT NULL,
    CUSTOM_GROUP_ID INT               NOT NULL,
    BACKUP_TIMESTAMP DATETIME         NOT NULL DEFAULT(GETDATE()),
    BACKUP_VERSION  INT               NOT NULL,
    BACKUP_JSON     VARCHAR(MAX)      NULL,
    CONSTRAINT PK_BRM_CUSTOM_GROUP_BACKUPS PRIMARY KEY (BACKUP_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_GLOBAL_CRITICAL_LINKS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS','U') IS NOT NULL
    DROP TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS;
GO

CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID       INT IDENTITY(1,1) NOT NULL,
    GCR_RULE_ID   INT               NOT NULL,
    TARGET_RULE_ID INT              NOT NULL,
    CONSTRAINT PK_BRM_GLOBAL_CRITICAL_LINKS PRIMARY KEY (LINK_ID)
);
GO

------------------------------------------------------------------------------
-- RULE_SCHEDULES
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_SCHEDULES','U') IS NOT NULL
    DROP TABLE dbo.RULE_SCHEDULES;
GO

CREATE TABLE dbo.RULE_SCHEDULES (
    SCHEDULE_ID    INT IDENTITY(1,1) NOT NULL,
    RULE_ID        INT               NOT NULL,
    SCHEDULE_TIME  DATETIME          NOT NULL,
    STATUS         VARCHAR(50)       NOT NULL,
    CREATED_TIMESTAMP DATETIME       NOT NULL DEFAULT(GETDATE()),
    CONSTRAINT PK_RULE_SCHEDULES PRIMARY KEY (SCHEDULE_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_RULE_COMMENTS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_COMMENTS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_COMMENTS;
GO

CREATE TABLE dbo.BRM_RULE_COMMENTS (
    COMMENT_ID   INT IDENTITY(1,1) NOT NULL,
    RULE_ID      INT               NOT NULL,
    COMMENT_TEXT VARCHAR(MAX)      NOT NULL,
    COMMENTED_BY VARCHAR(100)      NOT NULL,
    COMMENT_DATE DATETIME          NOT NULL DEFAULT(GETDATE()),
    CONSTRAINT PK_BRM_RULE_COMMENTS PRIMARY KEY (COMMENT_ID)
);
GO

------------------------------------------------------------------------------
-- RULE_SNAPSHOTS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_SNAPSHOTS','U') IS NOT NULL
    DROP TABLE dbo.RULE_SNAPSHOTS;
GO

CREATE TABLE dbo.RULE_SNAPSHOTS (
    SNAPSHOT_ID     INT IDENTITY(1,1) NOT NULL,
    SNAPSHOT_NAME   VARCHAR(200)      NOT NULL,
    CREATED_BY      VARCHAR(100)      NOT NULL,
    CREATED_TIMESTAMP DATETIME        NOT NULL DEFAULT(GETDATE()),
    SNAPSHOT_JSON   VARCHAR(MAX)      NULL,
    CONSTRAINT PK_RULE_SNAPSHOTS PRIMARY KEY (SNAPSHOT_ID)
);
GO

------------------------------------------------------------------------------
-- RULE_TAGS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_TAGS','U') IS NOT NULL
    DROP TABLE dbo.RULE_TAGS;
GO

CREATE TABLE dbo.RULE_TAGS (
    TAG_ID    INT IDENTITY(1,1) NOT NULL,
    RULE_ID   INT               NOT NULL,
    TAG_NAME  VARCHAR(100)      NOT NULL,
    CONSTRAINT PK_RULE_TAGS PRIMARY KEY (TAG_ID)
);
GO

------------------------------------------------------------------------------
-- DATA_VALIDATIONS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.DATA_VALIDATIONS','U') IS NOT NULL
    DROP TABLE dbo.DATA_VALIDATIONS;
GO

CREATE TABLE dbo.DATA_VALIDATIONS (
    VALIDATION_ID    INT IDENTITY(1,1) NOT NULL,
    TABLE_NAME       VARCHAR(200)      NOT NULL,
    COLUMN_NAME      VARCHAR(100)      NOT NULL,
    VALIDATION_TYPE  VARCHAR(50)       NOT NULL,
    PARAMS           VARCHAR(500)      NULL,
    CONSTRAINT PK_DATA_VALIDATIONS PRIMARY KEY (VALIDATION_ID)
);
GO

------------------------------------------------------------------------------
-- RULE_EXECUTION_LOGS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS','U') IS NOT NULL
    DROP TABLE dbo.RULE_EXECUTION_LOGS;
GO

CREATE TABLE dbo.RULE_EXECUTION_LOGS (
    LOG_ID            INT IDENTITY(1,1) NOT NULL,
    RULE_ID           INT               NOT NULL,
    EXECUTION_TIMESTAMP DATETIME        NOT NULL DEFAULT(GETDATE()),
    PASS_FLAG         BIT               NOT NULL DEFAULT(0),
    MESSAGE           VARCHAR(MAX)      NULL,
    RECORD_COUNT      INT               NULL,
    EXECUTION_TIME_MS INT               NULL,  -- for performance monitoring
    CONSTRAINT PK_RULE_EXECUTION_LOGS PRIMARY KEY (LOG_ID)
);
GO

------------------------------------------------------------------------------
-- SYSTEM_SECRETS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.SYSTEM_SECRETS','U') IS NOT NULL
    DROP TABLE dbo.SYSTEM_SECRETS;
GO

CREATE TABLE dbo.SYSTEM_SECRETS (
    SECRET_ID       INT NOT NULL,
    ENCRYPTED_VALUE VARCHAR(MAX) NOT NULL,
    CONSTRAINT PK_SYSTEM_SECRETS PRIMARY KEY (SECRET_ID)
);
GO

------------------------------------------------------------------------------
-- BRM_RULE_LOCKS
------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_LOCKS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_LOCKS;
GO

CREATE TABLE dbo.BRM_RULE_LOCKS (
    LOCK_ID   INT IDENTITY(1,1) NOT NULL,
    RULE_ID   INT               NOT NULL,
    LOCKED_BY VARCHAR(100)      NOT NULL,
    LOCKED_AT DATETIME          NOT NULL DEFAULT(GETDATE()),
    CONSTRAINT PK_BRM_RULE_LOCKS PRIMARY KEY (LOCK_ID)
);
GO