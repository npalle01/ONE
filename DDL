--------------------------------------------------------------------------------
-- 1) BRM_RULES
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULES','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULES;
GO

CREATE TABLE dbo.BRM_RULES
(
    RULE_ID               INT IDENTITY(1,1) PRIMARY KEY,
    RULE_NAME             VARCHAR(200)      NOT NULL,
    RULE_SQL              VARCHAR(MAX)      NULL,
    OWNER_GROUP           VARCHAR(100)      NOT NULL,
    CREATED_BY            VARCHAR(100)      NOT NULL,
    STATUS                VARCHAR(50)       NOT NULL DEFAULT('INACTIVE'),
    VERSION               INT               NOT NULL DEFAULT(1),
    LIFECYCLE_STATE       VARCHAR(50)       NOT NULL DEFAULT('DRAFT'),
    OPERATION_TYPE        VARCHAR(50)       NULL,
    APPROVAL_STATUS       VARCHAR(50)       NOT NULL DEFAULT('APPROVAL_IN_PROGRESS'),
    IS_GLOBAL             BIT               NOT NULL DEFAULT(0),
    CRITICAL_RULE         BIT               NOT NULL DEFAULT(0),
    BUSINESS_JUSTIFICATION VARCHAR(MAX)     NULL,
    CREATED_TIMESTAMP     DATETIME          NOT NULL DEFAULT(GETDATE()),
    UPDATED_BY            VARCHAR(100)      NULL,
    LOCK_STATUS           VARCHAR(20)       NULL,
    LOCKED_BY             VARCHAR(100)      NULL,
    LOCKED_AT             DATETIME          NULL,
    PARENT_RULE_ID        INT               NULL,
    CRITICAL_SCOPE        VARCHAR(50)       NULL
);
GO


--------------------------------------------------------------------------------
-- 2) BRM_RULE_APPROVALS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_APPROVALS;
GO

CREATE TABLE dbo.BRM_RULE_APPROVALS
(
    APPROVAL_ID     INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID         INT NOT NULL,
    GROUP_NAME      VARCHAR(100) NOT NULL,
    USERNAME        VARCHAR(100) NOT NULL,
    APPROVED_FLAG   INT NOT NULL DEFAULT(0),  -- 0=pending, 1=approved, 2=rejected
    APPROVAL_STAGE  INT NOT NULL DEFAULT(1),
    APPROVED_TIMESTAMP DATETIME NULL
);
GO


--------------------------------------------------------------------------------
-- 3) BRM_RULE_LOCKS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_LOCKS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_LOCKS;
GO

CREATE TABLE dbo.BRM_RULE_LOCKS
(
    LOCK_ID           INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID           INT NOT NULL,
    LOCKED_BY         VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP    DATETIME NOT NULL DEFAULT(GETDATE()),
    EXPIRY_TIMESTAMP  DATETIME NULL,
    FORCE_LOCK        BIT     NOT NULL DEFAULT(0),
    ACTIVE_LOCK       BIT     NOT NULL DEFAULT(1)
);
GO


--------------------------------------------------------------------------------
-- 4) BRM_AUDIT_LOG
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_AUDIT_LOG','U') IS NOT NULL
    DROP TABLE dbo.BRM_AUDIT_LOG;
GO

CREATE TABLE dbo.BRM_AUDIT_LOG
(
    AUDIT_ID        INT IDENTITY(1,1) PRIMARY KEY,
    ACTION          VARCHAR(50) NOT NULL,
    TABLE_NAME      VARCHAR(100) NOT NULL,
    RECORD_ID       VARCHAR(50) NULL,
    ACTION_BY       VARCHAR(100) NULL,
    OLD_DATA        VARCHAR(MAX) NULL,
    NEW_DATA        VARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME   NOT NULL DEFAULT(GETDATE())
);
GO


--------------------------------------------------------------------------------
-- 5) BRM_DEFECT_LOGS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_DEFECT_LOGS','U') IS NOT NULL
    DROP TABLE dbo.BRM_DEFECT_LOGS;
GO

CREATE TABLE dbo.BRM_DEFECT_LOGS
(
    DEFECT_ID     INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID       INT NULL,
    DESCRIPTION   VARCHAR(MAX) NOT NULL,
    SEVERITY      VARCHAR(20)  NOT NULL,  -- "Low","Medium","High","Critical"
    REPORTER      VARCHAR(100) NOT NULL,
    STATUS        VARCHAR(20)  NOT NULL DEFAULT('Open'),  
    RESOLUTION    VARCHAR(MAX) NULL,
    TIMESTAMP     DATETIME     NOT NULL DEFAULT(GETDATE())
);
GO


--------------------------------------------------------------------------------
-- 6) DATA_VALIDATIONS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.DATA_VALIDATIONS','U') IS NOT NULL
    DROP TABLE dbo.DATA_VALIDATIONS;
GO

CREATE TABLE dbo.DATA_VALIDATIONS
(
    VALIDATION_ID      INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME         VARCHAR(200) NOT NULL,
    COLUMN_NAME        VARCHAR(200) NOT NULL,
    VALIDATION_TYPE    VARCHAR(50)  NOT NULL,   
    PARAMS             VARCHAR(500) NULL,
    CREATED_TIMESTAMP  DATETIME     NOT NULL DEFAULT(GETDATE())
);
GO


--------------------------------------------------------------------------------
-- 7) DATA_VALIDATION_LOGS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.DATA_VALIDATION_LOGS','U') IS NOT NULL
    DROP TABLE dbo.DATA_VALIDATION_LOGS;
GO

CREATE TABLE dbo.DATA_VALIDATION_LOGS
(
    LOG_ID               INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID        INT NOT NULL,
    RESULT_FLAG          VARCHAR(10) NOT NULL, 
    DETAILS              VARCHAR(MAX) NULL,
    VALIDATION_TIMESTAMP DATETIME     NOT NULL DEFAULT(GETDATE()),
    TABLE_NAME           VARCHAR(200) NULL,
    COLUMN_NAME          VARCHAR(200) NULL
);
GO


--------------------------------------------------------------------------------
-- 8) RULE_SCHEDULES
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_SCHEDULES','U') IS NOT NULL
    DROP TABLE dbo.RULE_SCHEDULES;
GO

CREATE TABLE dbo.RULE_SCHEDULES
(
    SCHEDULE_ID     INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID         INT NOT NULL,
    SCHEDULE_TIME   DATETIME NOT NULL,
    STATUS          VARCHAR(20) NOT NULL DEFAULT('Scheduled'),
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    VALIDATION_FLAG BIT         NOT NULL DEFAULT(0)
);
GO


--------------------------------------------------------------------------------
-- 9) RULE_EXECUTION_LOGS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS','U') IS NOT NULL
    DROP TABLE dbo.RULE_EXECUTION_LOGS;
GO

CREATE TABLE dbo.RULE_EXECUTION_LOGS
(
    LOG_ID            INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID           INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    PASS_FLAG         BIT NOT NULL DEFAULT(0),
    MESSAGE           VARCHAR(MAX) NULL,
    RECORD_COUNT      INT NOT NULL DEFAULT(0),
    EXECUTION_TIME_MS INT NOT NULL DEFAULT(0)
);
GO


--------------------------------------------------------------------------------
-- 10) BRM_GLOBAL_CRITICAL_LINKS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS','U') IS NOT NULL
    DROP TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS;
GO

CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS
(
    LINK_ID       INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID   INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);
GO


--------------------------------------------------------------------------------
-- 11) BRM_RULE_TABLE_DEPENDENCIES
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;
GO

CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES
(
    DEPENDENCY_ID  INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID        INT NOT NULL,
    DATABASE_NAME  VARCHAR(100) NOT NULL,
    TABLE_NAME     VARCHAR(200) NOT NULL,
    COLUMN_NAME    VARCHAR(200) NULL,
    COLUMN_OP      VARCHAR(10)  NULL
);
GO


--------------------------------------------------------------------------------
-- 12) BRM_CUSTOM_RULE_GROUPS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_RULE_GROUPS;
GO

CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS
(
    CUSTOM_GROUP_ID       INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME     VARCHAR(200) NOT NULL,
    OWNER_BUSINESS_GROUP  VARCHAR(100) NULL,
    CREATED_BY            VARCHAR(100) NULL,
    CREATED_TIMESTAMP     DATETIME     NOT NULL DEFAULT(GETDATE())
);
GO


--------------------------------------------------------------------------------
-- 13) BRM_CUSTOM_GROUP_MEMBERS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;
GO

CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS
(
    MEMBER_ID       INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID         INT NOT NULL
);
GO


--------------------------------------------------------------------------------
-- 14) BRM_CUSTOM_GROUP_BACKUPS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_BACKUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS;
GO

CREATE TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS
(
    BACKUP_ID         INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID   INT NOT NULL,
    BACKUP_TIMESTAMP  DATETIME NOT NULL DEFAULT(GETDATE()),
    BACKUP_VERSION    INT NOT NULL,
    BACKUP_JSON       VARCHAR(MAX) NOT NULL
);
GO


--------------------------------------------------------------------------------
-- 15) BRM_RULE_GROUPS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_GROUPS;
GO

CREATE TABLE dbo.BRM_RULE_GROUPS
(
    GROUP_ID   INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(200) NOT NULL
);
GO


--------------------------------------------------------------------------------
-- 16) USERS (for Login)
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.USERS','U') IS NOT NULL
    DROP TABLE dbo.USERS;
GO

CREATE TABLE dbo.USERS
(
    USER_ID    INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME   VARCHAR(100) NOT NULL UNIQUE,
    PASSWORD   VARCHAR(200) NOT NULL,   -- The code uses "enc_" + reversed text
    USER_GROUP VARCHAR(100) NOT NULL    -- e.g., 'Admin','BG1','BG2'
);
GO


--------------------------------------------------------------------------------
-- 17) BUSINESS_GROUPS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BUSINESS_GROUPS;
GO

CREATE TABLE dbo.BUSINESS_GROUPS
(
    BUSINESS_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME        VARCHAR(100) NOT NULL UNIQUE,
    DESCRIPTION       VARCHAR(MAX) NULL,
    EMAIL             VARCHAR(200) NULL
);
GO


--------------------------------------------------------------------------------
-- 18) GROUP_PERMISSIONS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.GROUP_PERMISSIONS','U') IS NOT NULL
    DROP TABLE dbo.GROUP_PERMISSIONS;
GO

CREATE TABLE dbo.GROUP_PERMISSIONS
(
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME    VARCHAR(100) NOT NULL,
    TARGET_TABLE  VARCHAR(200) NOT NULL
);
GO


--------------------------------------------------------------------------------
-- 19) DECISION_TABLES
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.DECISION_TABLES','U') IS NOT NULL
    DROP TABLE dbo.DECISION_TABLES;
GO

CREATE TABLE dbo.DECISION_TABLES
(
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME        VARCHAR(200) NOT NULL,
    DESCRIPTION       VARCHAR(MAX) NULL,
    DECISION_QUERY    VARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME     NOT NULL DEFAULT(GETDATE()),
    UPDATED_TIMESTAMP DATETIME     NULL
);
GO


--------------------------------------------------------------------------------
-- 20) DECISION_TABLE_EXEC_LOGS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.DECISION_TABLE_EXEC_LOGS','U') IS NOT NULL
    DROP TABLE dbo.DECISION_TABLE_EXEC_LOGS;
GO

CREATE TABLE dbo.DECISION_TABLE_EXEC_LOGS
(
    EXEC_LOG_ID        INT IDENTITY(1,1) PRIMARY KEY,
    DECISION_TABLE_ID  INT NOT NULL,
    EXEC_TIMESTAMP     DATETIME NOT NULL DEFAULT(GETDATE()),
    PASS_FLAG          BIT NOT NULL DEFAULT(0),
    MESSAGE            VARCHAR(MAX) NULL,
    RECORD_COUNT       INT NOT NULL DEFAULT(0),
    EXECUTION_TIME_MS  INT NOT NULL DEFAULT(0),
    DRY_RUN            BIT NOT NULL DEFAULT(0)
);
GO


--------------------------------------------------------------------------------
-- 21) BRM_ACTIVITY_LOG
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_ACTIVITY_LOG','U') IS NOT NULL
    DROP TABLE dbo.BRM_ACTIVITY_LOG;
GO

CREATE TABLE dbo.BRM_ACTIVITY_LOG
(
    ACTIVITY_ID  INT IDENTITY(1,1) PRIMARY KEY,
    EVENT_TYPE   VARCHAR(50) NOT NULL,
    USERNAME     VARCHAR(100) NOT NULL,
    [TIMESTAMP]  DATETIME    NOT NULL DEFAULT(GETDATE()),
    DETAILS      VARCHAR(MAX) NULL
);
GO


--------------------------------------------------------------------------------
-- 22) RULE_CONFLICTS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_CONFLICTS','U') IS NOT NULL
    DROP TABLE dbo.RULE_CONFLICTS;
GO

CREATE TABLE dbo.RULE_CONFLICTS
(
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1    INT NOT NULL,
    RULE_ID2    INT NOT NULL,
    PRIORITY    INT NOT NULL DEFAULT(0)
);
GO


--------------------------------------------------------------------------------
-- 23) COMPOSITE_RULES
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.COMPOSITE_RULES','U') IS NOT NULL
    DROP TABLE dbo.COMPOSITE_RULES;
GO

CREATE TABLE dbo.COMPOSITE_RULES
(
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME        VARCHAR(200) NOT NULL,
    LOGIC_EXPR        VARCHAR(MAX) NULL,
    ACTION_ON_PASS    VARCHAR(200) NULL,
    CREATED_TIMESTAMP DATETIME     NOT NULL DEFAULT(GETDATE())
);
GO


--------------------------------------------------------------------------------
-- 24) BRM_COLUMN_MAPPING (Optional usage)
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_COLUMN_MAPPING','U') IS NOT NULL
    DROP TABLE dbo.BRM_COLUMN_MAPPING;
GO

CREATE TABLE dbo.BRM_COLUMN_MAPPING
(
    MAPPING_ID     INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID        INT NOT NULL,
    SOURCE_RULE_ID INT NULL,
    MAPPING_INFO   VARCHAR(MAX) NULL
);
GO


--------------------------------------------------------------------------------
-- Insert an initial admin user to log in:
-- The example code "enc_"+pwd[::-1] means if password="admin", stored value = "enc_nimda".
-- So you can log in with username="admin", password="admin".
--------------------------------------------------------------------------------
INSERT INTO dbo.USERS (USERNAME, PASSWORD, USER_GROUP)
VALUES ('admin', 'enc_nimda', 'Admin');
GO

--------------------------------------------------------------------------------
-- You can now run your BRM application and log in as:
--   Username: admin
--   Password: admin
--------------------------------------------------------------------------------