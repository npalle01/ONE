-------------------------------------------------------------------------------
-- 1. USERS
-------------------------------------------------------------------------------
CREATE TABLE USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME NVARCHAR(100) UNIQUE NOT NULL,
    PASSWORD NVARCHAR(100) NOT NULL,
    USER_GROUP NVARCHAR(50) NOT NULL
);

-------------------------------------------------------------------------------
-- 2. BUSINESS_GROUPS
-------------------------------------------------------------------------------
CREATE TABLE BUSINESS_GROUPS (
    GROUP_NAME NVARCHAR(100) PRIMARY KEY,
    DESCRIPTION NVARCHAR(255) NULL,
    EMAIL NVARCHAR(100) NULL
);

-------------------------------------------------------------------------------
-- 3. GROUP_PERMISSIONS
-------------------------------------------------------------------------------
CREATE TABLE GROUP_PERMISSIONS (
    GROUP_NAME NVARCHAR(100) NOT NULL,
    TARGET_TABLE NVARCHAR(100) NOT NULL,
    ALLOWED_FLAG BIT NOT NULL DEFAULT 0,
    CONSTRAINT PK_GROUP_PERMISSIONS PRIMARY KEY (GROUP_NAME, TARGET_TABLE),
    CONSTRAINT FK_GROUP_PERMISSIONS_BG
        FOREIGN KEY (GROUP_NAME)
        REFERENCES BUSINESS_GROUPS (GROUP_NAME)
);

-------------------------------------------------------------------------------
-- 4. BRM_RULE_TYPES
-------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_TYPES (
    RULE_TYPE_ID INT PRIMARY KEY,
    RULE_TYPE_NAME NVARCHAR(50) NOT NULL UNIQUE
);

-------------------------------------------------------------------------------
-- 5. BRM_RULE_GROUPS
-------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME NVARCHAR(100) UNIQUE NOT NULL,
    DESCRIPTION NVARCHAR(255) NULL
);

-------------------------------------------------------------------------------
-- 6. BRM_RULES
-------------------------------------------------------------------------------
CREATE TABLE BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID INT NULL,                  -- references BRM_RULE_GROUPS(GROUP_ID)
    PARENT_RULE_ID INT NULL,            -- references BRM_RULES(RULE_ID)
    RULE_TYPE_ID INT NOT NULL,          -- references BRM_RULE_TYPES(RULE_TYPE_ID)
    RULE_NAME NVARCHAR(255) NOT NULL,
    RULE_SQL NVARCHAR(MAX) NOT NULL,
    EFFECTIVE_START_DATE DATETIME NOT NULL,
    EFFECTIVE_END_DATE DATETIME NULL,
    STATUS NVARCHAR(20) NOT NULL,       -- e.g. 'ACTIVE','INACTIVE'
    VERSION INT NOT NULL DEFAULT 1,
    CREATED_BY NVARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    OPERATION_TYPE NVARCHAR(50) NULL,   -- e.g. SELECT, UPDATE
    BUSINESS_JUSTIFICATION NVARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    UPDATED_BY NVARCHAR(100) NULL,
    OWNER_GROUP NVARCHAR(100) NOT NULL, -- references BUSINESS_GROUPS(GROUP_NAME)
    CLUSTER_NAME NVARCHAR(100) NULL,
    APPROVAL_STATUS NVARCHAR(50) NOT NULL DEFAULT 'DRAFT',
    IS_GLOBAL BIT NOT NULL DEFAULT 0,
    CRITICAL_RULE BIT NOT NULL DEFAULT 0,
    CRITICAL_SCOPE NVARCHAR(20) NOT NULL DEFAULT 'NONE',
    CDC_TYPE NVARCHAR(20) NOT NULL DEFAULT 'NONE',
    PRIORITY INT NOT NULL DEFAULT 999,  -- If you want a priority column
    TAGS NVARCHAR(500) NULL,
    CONSTRAINT UQ_OWNER_RULE UNIQUE (OWNER_GROUP, RULE_NAME)
);

-- Optional FKs:
ALTER TABLE BRM_RULES
    ADD CONSTRAINT FK_BRM_RULES_GROUPS
        FOREIGN KEY (GROUP_ID)
        REFERENCES BRM_RULE_GROUPS (GROUP_ID);

ALTER TABLE BRM_RULES
    ADD CONSTRAINT FK_BRM_RULES_PARENT
        FOREIGN KEY (PARENT_RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

ALTER TABLE BRM_RULES
    ADD CONSTRAINT FK_BRM_RULES_TYPE
        FOREIGN KEY (RULE_TYPE_ID)
        REFERENCES BRM_RULE_TYPES (RULE_TYPE_ID);

ALTER TABLE BRM_RULES
    ADD CONSTRAINT FK_BRM_RULES_OWNER
        FOREIGN KEY (OWNER_GROUP)
        REFERENCES BUSINESS_GROUPS (GROUP_NAME);

-------------------------------------------------------------------------------
-- 7. BRM_RULE_TABLE_DEPENDENCIES
-------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATABASE_NAME NVARCHAR(100) NOT NULL,
    TABLE_NAME NVARCHAR(100) NOT NULL,
    COLUMN_NAME NVARCHAR(100) NOT NULL
);

ALTER TABLE BRM_RULE_TABLE_DEPENDENCIES
    ADD CONSTRAINT FK_DEPENDS_RULE
        FOREIGN KEY (RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

-------------------------------------------------------------------------------
-- 8. BRM_AUDIT_LOG
-------------------------------------------------------------------------------
CREATE TABLE BRM_AUDIT_LOG (
    AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ACTION NVARCHAR(50) NOT NULL,
    TABLE_NAME NVARCHAR(100) NOT NULL,
    RECORD_ID NVARCHAR(50) NOT NULL,
    ACTION_BY NVARCHAR(100) NOT NULL,
    OLD_DATA NVARCHAR(MAX) NULL,
    NEW_DATA NVARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
-- Typically no direct FKs here because we store historical references.

-------------------------------------------------------------------------------
-- 9. BRM_RULE_LINEAGE
-------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_LINEAGE (
    LINEAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SOURCE_INFO NVARCHAR(MAX) NULL,
    TARGET_INFO NVARCHAR(MAX) NULL,
    TRANSFORMATION_DETAILS NVARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

ALTER TABLE BRM_RULE_LINEAGE
    ADD CONSTRAINT FK_LINEAGE_RULE
        FOREIGN KEY (RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

-------------------------------------------------------------------------------
-- 10. BRM_GROUP_BACKUPS
-------------------------------------------------------------------------------
CREATE TABLE BRM_GROUP_BACKUPS (
    BACKUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME NVARCHAR(100) NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    BACKUP_VERSION INT NOT NULL,
    BACKUP_JSON NVARCHAR(MAX) NOT NULL
);

ALTER TABLE BRM_GROUP_BACKUPS
    ADD CONSTRAINT FK_GROUP_BACKUP_BG
        FOREIGN KEY (GROUP_NAME)
        REFERENCES BUSINESS_GROUPS (GROUP_NAME);

-------------------------------------------------------------------------------
-- 11. BRM_COLUMN_MAPPING
-------------------------------------------------------------------------------
CREATE TABLE BRM_COLUMN_MAPPING (
    MAPPING_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SOURCE_RULE_ID INT NOT NULL,
    SOURCE_COLUMN_NAME NVARCHAR(100) NOT NULL,
    TARGET_COLUMN_NAME NVARCHAR(100) NOT NULL
);

ALTER TABLE BRM_COLUMN_MAPPING
    ADD CONSTRAINT FK_COLMAP_RULE
        FOREIGN KEY (RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

-- Optionally:
ALTER TABLE BRM_COLUMN_MAPPING
    ADD CONSTRAINT FK_COLMAP_SOURCE_RULE
        FOREIGN KEY (SOURCE_RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

-------------------------------------------------------------------------------
-- 12. BRM_CUSTOM_RULE_GROUPS
-------------------------------------------------------------------------------
CREATE TABLE BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME NVARCHAR(100) NOT NULL UNIQUE,
    OWNER_BUSINESS_GROUP NVARCHAR(100) NOT NULL,
    CREATED_BY NVARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

ALTER TABLE BRM_CUSTOM_RULE_GROUPS
    ADD CONSTRAINT FK_CUSTOM_RULE_GROUP_OWNER
        FOREIGN KEY (OWNER_BUSINESS_GROUP)
        REFERENCES BUSINESS_GROUPS (GROUP_NAME);

-------------------------------------------------------------------------------
-- 13. BRM_CUSTOM_GROUP_MEMBERS
-------------------------------------------------------------------------------
CREATE TABLE BRM_CUSTOM_GROUP_MEMBERS (
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID INT NOT NULL,
    CONSTRAINT PK_CUSTOM_GROUP_MEMBERS PRIMARY KEY (CUSTOM_GROUP_ID, RULE_ID)
);

ALTER TABLE BRM_CUSTOM_GROUP_MEMBERS
    ADD CONSTRAINT FK_CUST_MEM_GROUP
        FOREIGN KEY (CUSTOM_GROUP_ID)
        REFERENCES BRM_CUSTOM_RULE_GROUPS (CUSTOM_GROUP_ID);

ALTER TABLE BRM_CUSTOM_GROUP_MEMBERS
    ADD CONSTRAINT FK_CUST_MEM_RULE
        FOREIGN KEY (RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

-------------------------------------------------------------------------------
-- 14. BUSINESS_GROUP_APPROVERS
-------------------------------------------------------------------------------
CREATE TABLE BUSINESS_GROUP_APPROVERS (
    APPROVER_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME NVARCHAR(100) NOT NULL,
    USERNAME NVARCHAR(100) NOT NULL
);

ALTER TABLE BUSINESS_GROUP_APPROVERS
    ADD CONSTRAINT FK_BGA_GROUP
        FOREIGN KEY (GROUP_NAME)
        REFERENCES BUSINESS_GROUPS (GROUP_NAME);

-- Potentially also references USERS(USERNAME) if unique.

-------------------------------------------------------------------------------
-- 15. BRM_RULE_APPROVALS
-------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_APPROVALS (
    RULE_ID INT NOT NULL,
    GROUP_NAME NVARCHAR(100) NOT NULL,
    USERNAME NVARCHAR(100) NOT NULL,
    APPROVED_FLAG INT NOT NULL DEFAULT 0,    -- 0=Pending,1=Approved,2=Rejected
    APPROVED_TIMESTAMP DATETIME NULL,
    APPROVAL_STAGE INT NOT NULL DEFAULT 1,
    TIME_LIMIT_HOURS INT NOT NULL DEFAULT 0, -- for escalations
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    CONSTRAINT PK_RULE_APPROVALS PRIMARY KEY (RULE_ID, GROUP_NAME, USERNAME)
);

ALTER TABLE BRM_RULE_APPROVALS
    ADD CONSTRAINT FK_RULE_APPROVAL_RULE
        FOREIGN KEY (RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

ALTER TABLE BRM_RULE_APPROVALS
    ADD CONSTRAINT FK_RULE_APPROVAL_BG
        FOREIGN KEY (GROUP_NAME)
        REFERENCES BUSINESS_GROUPS (GROUP_NAME);

-- Possibly reference USERS(USERNAME).

-------------------------------------------------------------------------------
-- 16. BRM_CUSTOM_GROUP_BACKUPS
-------------------------------------------------------------------------------
CREATE TABLE BRM_CUSTOM_GROUP_BACKUPS (
    BACKUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    BACKUP_VERSION INT NOT NULL,
    BACKUP_JSON NVARCHAR(MAX) NOT NULL
);

ALTER TABLE BRM_CUSTOM_GROUP_BACKUPS
    ADD CONSTRAINT FK_CUST_GRP_BACK_CG
        FOREIGN KEY (CUSTOM_GROUP_ID)
        REFERENCES BRM_CUSTOM_RULE_GROUPS (CUSTOM_GROUP_ID);

-------------------------------------------------------------------------------
-- 17. BRM_GLOBAL_CRITICAL_LINKS
-------------------------------------------------------------------------------
CREATE TABLE BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NULL,
    TARGET_GROUP_ID INT NULL
);

ALTER TABLE BRM_GLOBAL_CRITICAL_LINKS
    ADD CONSTRAINT FK_GCR_LINK_GCR
        FOREIGN KEY (GCR_RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

ALTER TABLE BRM_GLOBAL_CRITICAL_LINKS
    ADD CONSTRAINT FK_GCR_LINK_TARGET_RULE
        FOREIGN KEY (TARGET_RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

ALTER TABLE BRM_GLOBAL_CRITICAL_LINKS
    ADD CONSTRAINT FK_GCR_LINK_TARGET_GROUP
        FOREIGN KEY (TARGET_GROUP_ID)
        REFERENCES BRM_RULE_GROUPS (GROUP_ID);

-------------------------------------------------------------------------------
-- 18. RULE_SCHEDULES
-------------------------------------------------------------------------------
CREATE TABLE RULE_SCHEDULES (
    SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SCHEDULE_TIME DATETIME NOT NULL,
    STATUS NVARCHAR(50) NOT NULL,  -- e.g., 'Scheduled', 'Executed'
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

ALTER TABLE RULE_SCHEDULES
    ADD CONSTRAINT FK_RULE_SCH_RULE
        FOREIGN KEY (RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

-------------------------------------------------------------------------------
-- 19. BRM_DECISION_TABLES (for advanced feature #1)
-------------------------------------------------------------------------------
CREATE TABLE BRM_DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME NVARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(500) NULL,
    CREATED_BY NVARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-------------------------------------------------------------------------------
-- 20. BRM_DECISION_TABLE_ROWS
-------------------------------------------------------------------------------
CREATE TABLE BRM_DECISION_TABLE_ROWS (
    ROW_ID INT IDENTITY(1,1) PRIMARY KEY,
    DECISION_TABLE_ID INT NOT NULL,
    CONDITION_EXPR NVARCHAR(1000) NOT NULL,
    OUTCOME_EXPR NVARCHAR(1000) NULL,
    SEQ_NO INT NOT NULL DEFAULT 1
);

ALTER TABLE BRM_DECISION_TABLE_ROWS
    ADD CONSTRAINT FK_DTR_DT
        FOREIGN KEY (DECISION_TABLE_ID)
        REFERENCES BRM_DECISION_TABLES (DECISION_TABLE_ID);

-------------------------------------------------------------------------------
-- 21. BRM_RULE_CONFLICTS (for #2)
-------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID_1 INT NOT NULL,
    RULE_ID_2 INT NOT NULL,
    DESCRIPTION NVARCHAR(500) NULL,
    DETECTED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

ALTER TABLE BRM_RULE_CONFLICTS
    ADD CONSTRAINT FK_CONFLICT_R1
        FOREIGN KEY (RULE_ID_1)
        REFERENCES BRM_RULES (RULE_ID);

ALTER TABLE BRM_RULE_CONFLICTS
    ADD CONSTRAINT FK_CONFLICT_R2
        FOREIGN KEY (RULE_ID_2)
        REFERENCES BRM_RULES (RULE_ID);

-------------------------------------------------------------------------------
-- 22. BRM_COMPOSITE_RULES (for #4)
-------------------------------------------------------------------------------
CREATE TABLE BRM_COMPOSITE_RULES (
    COMP_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    PARENT_RULE_ID INT NOT NULL,
    CHILD_RULE_ID INT NOT NULL,
    LOGIC_OPERATOR NVARCHAR(10) NOT NULL
);

ALTER TABLE BRM_COMPOSITE_RULES
    ADD CONSTRAINT FK_COMP_PARENT
        FOREIGN KEY (PARENT_RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

ALTER TABLE BRM_COMPOSITE_RULES
    ADD CONSTRAINT FK_COMP_CHILD
        FOREIGN KEY (CHILD_RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

-------------------------------------------------------------------------------
-- 23. BRM_RULE_ACTIONS (for #7)
-------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_ACTIONS (
    ACTION_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    ACTION_TYPE NVARCHAR(50) NOT NULL,
    ACTION_DATA NVARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

ALTER TABLE BRM_RULE_ACTIONS
    ADD CONSTRAINT FK_ACTION_RULE
        FOREIGN KEY (RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

-------------------------------------------------------------------------------
-- 24. BRM_RULE_SNAPSHOTS (for #9)
-------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_SNAPSHOTS (
    SNAPSHOT_ID INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME NVARCHAR(100) NOT NULL,
    CREATED_BY NVARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-------------------------------------------------------------------------------
-- 25. BRM_RULE_SNAPSHOT_CONTENTS
-------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_SNAPSHOT_CONTENTS (
    SNAPSHOT_ID INT NOT NULL,
    RULE_ID INT NOT NULL,
    RULE_JSON NVARCHAR(MAX) NOT NULL,
    CONSTRAINT PK_SNAP_CONTENT PRIMARY KEY (SNAPSHOT_ID, RULE_ID)
);

ALTER TABLE BRM_RULE_SNAPSHOT_CONTENTS
    ADD CONSTRAINT FK_SNAP_CONTENT_SHOT
        FOREIGN KEY (SNAPSHOT_ID)
        REFERENCES BRM_RULE_SNAPSHOTS (SNAPSHOT_ID);

ALTER TABLE BRM_RULE_SNAPSHOT_CONTENTS
    ADD CONSTRAINT FK_SNAP_CONTENT_RULE
        FOREIGN KEY (RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

-------------------------------------------------------------------------------
-- 26. BRM_DATA_VALIDATIONS (for #12)
-------------------------------------------------------------------------------
CREATE TABLE BRM_DATA_VALIDATIONS (
    VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    COLUMN_NAME NVARCHAR(100) NOT NULL,
    REGEX NVARCHAR(1000) NOT NULL,
    DESCRIPTION NVARCHAR(500) NULL
);

ALTER TABLE BRM_DATA_VALIDATIONS
    ADD CONSTRAINT FK_DATA_VAL_RULE
        FOREIGN KEY (RULE_ID)
        REFERENCES BRM_RULES (RULE_ID);

-------------------------------------------------------------------------------
-- End of sample T-SQL DDL with foreign keys
-------------------------------------------------------------------------------