----------------------------------------
-- 1) USERS
----------------------------------------
IF OBJECT_ID('dbo.USERS','U') IS NOT NULL
    DROP TABLE dbo.USERS;
GO
CREATE TABLE dbo.USERS
(
    USER_ID     INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME    VARCHAR(100) NOT NULL,
    [PASSWORD]  VARCHAR(100) NOT NULL,
    USER_GROUP  VARCHAR(100) NOT NULL
);
GO

----------------------------------------
-- 2) BUSINESS_GROUPS
----------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BUSINESS_GROUPS;
GO
CREATE TABLE dbo.BUSINESS_GROUPS
(
    GROUP_NAME   VARCHAR(100) NOT NULL PRIMARY KEY,
    DESCRIPTION  VARCHAR(500),
    EMAIL        VARCHAR(200)
);
GO

----------------------------------------
-- 3) GROUP_PERMISSIONS
----------------------------------------
IF OBJECT_ID('dbo.GROUP_PERMISSIONS','U') IS NOT NULL
    DROP TABLE dbo.GROUP_PERMISSIONS;
GO
CREATE TABLE dbo.GROUP_PERMISSIONS
(
    PERMISSION_ID  INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME     VARCHAR(100) NOT NULL,
    TARGET_TABLE   VARCHAR(200) NOT NULL
);
GO

----------------------------------------
-- 4) BRM_RULE_TYPES
----------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TYPES','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_TYPES;
GO
CREATE TABLE dbo.BRM_RULE_TYPES
(
    RULE_TYPE_ID   INT IDENTITY(1,1) PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100) NOT NULL
);
GO

----------------------------------------
-- 5) BRM_RULE_GROUPS
----------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_GROUPS;
GO
CREATE TABLE dbo.BRM_RULE_GROUPS
(
    GROUP_ID   INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL
);
GO

----------------------------------------
-- 6) BRM_RULES
----------------------------------------
IF OBJECT_ID('dbo.BRM_RULES','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULES;
GO
CREATE TABLE dbo.BRM_RULES
(
    RULE_ID                INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID               INT NULL,
    PARENT_RULE_ID         INT NULL,
    RULE_TYPE_ID           INT NULL,
    RULE_NAME              VARCHAR(200) NOT NULL,
    RULE_SQL               TEXT NULL,
    EFFECTIVE_START_DATE   DATETIME NULL,
    EFFECTIVE_END_DATE     DATETIME NULL,
    STATUS                 VARCHAR(50) NOT NULL DEFAULT('INACTIVE'),
    VERSION                INT NOT NULL DEFAULT(1),
    CREATED_BY             VARCHAR(100) NULL,
    DESCRIPTION            TEXT NULL,
    OPERATION_TYPE         VARCHAR(50) NULL,
    BUSINESS_JUSTIFICATION TEXT NULL,
    CREATED_TIMESTAMP      DATETIME NOT NULL DEFAULT(GETDATE()),
    UPDATED_BY             VARCHAR(100) NULL,
    OWNER_GROUP            VARCHAR(100) NULL,
    APPROVAL_STATUS        VARCHAR(50) NULL,
    IS_GLOBAL              BIT NOT NULL DEFAULT(0),
    CRITICAL_RULE          BIT NOT NULL DEFAULT(0),
    CRITICAL_SCOPE         VARCHAR(50) NOT NULL DEFAULT('NONE'),
    CDC_TYPE               VARCHAR(50) NOT NULL DEFAULT('NONE'),
    LIFECYCLE_STATE        VARCHAR(50) NULL,
    RULE_LOCKED            BIT NOT NULL DEFAULT(0),
    RULE_LOCKED_BY         VARCHAR(100) NULL,
    RULE_LOCKED_TIMESTAMP  DATETIME NULL
);
GO

----------------------------------------
-- 7) BRM_RULE_TABLE_DEPENDENCIES
----------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;
GO
CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES
(
    DEPENDENCY_ID     INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID           INT NOT NULL,
    DATABASE_NAME     VARCHAR(100) NULL,
    TABLE_NAME        VARCHAR(200) NOT NULL,
    COLUMN_NAME       VARCHAR(100) NULL,
    COLUMN_OP         VARCHAR(50) NULL,  -- e.g. READ or WRITE
    COLUMN_DATA_TYPE  VARCHAR(100) NULL
);
GO

----------------------------------------
-- 8) RULE_CONFLICTS
----------------------------------------
IF OBJECT_ID('dbo.RULE_CONFLICTS','U') IS NOT NULL
    DROP TABLE dbo.RULE_CONFLICTS;
GO
CREATE TABLE dbo.RULE_CONFLICTS
(
    CONFLICT_ID  INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1     INT NOT NULL,
    RULE_ID2     INT NOT NULL,
    PRIORITY     INT NOT NULL DEFAULT(0)
);
GO

----------------------------------------
-- 9) COMPOSITE_RULES
----------------------------------------
IF OBJECT_ID('dbo.COMPOSITE_RULES','U') IS NOT NULL
    DROP TABLE dbo.COMPOSITE_RULES;
GO
CREATE TABLE dbo.COMPOSITE_RULES
(
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME        VARCHAR(200) NOT NULL,
    LOGIC_EXPR        TEXT NULL,
    ACTION_ON_PASS    VARCHAR(200) NULL
);
GO

----------------------------------------
-- 10) BRM_GLOBAL_CRITICAL_LINKS
----------------------------------------
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS','U') IS NOT NULL
    DROP TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS;
GO
CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS
(
    GCR_LINK_ID    INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID    INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);
GO

----------------------------------------
-- 11) RULE_EXECUTION_LOGS
----------------------------------------
IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS','U') IS NOT NULL
    DROP TABLE dbo.RULE_EXECUTION_LOGS;
GO
CREATE TABLE dbo.RULE_EXECUTION_LOGS
(
    LOG_ID             INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID            INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    PASS_FLAG          BIT NOT NULL DEFAULT(0),
    MESSAGE            TEXT NULL,
    RECORD_COUNT       INT NOT NULL DEFAULT(0),
    EXECUTION_TIME_MS  FLOAT NULL
);
GO

----------------------------------------
-- 12) BRM_COLUMN_MAPPING
----------------------------------------
IF OBJECT_ID('dbo.BRM_COLUMN_MAPPING','U') IS NOT NULL
    DROP TABLE dbo.BRM_COLUMN_MAPPING;
GO
CREATE TABLE dbo.BRM_COLUMN_MAPPING
(
    COLUMN_MAPPING_ID INT IDENTITY(1,1) PRIMARY KEY,
    SOURCE_RULE_ID    INT NOT NULL,
    RULE_ID           INT NOT NULL,
    COMMENTS          TEXT NULL
);
GO

----------------------------------------
-- 13) RULE_BACKUPS
----------------------------------------
IF OBJECT_ID('dbo.RULE_BACKUPS','U') IS NOT NULL
    DROP TABLE dbo.RULE_BACKUPS;
GO
CREATE TABLE dbo.RULE_BACKUPS
(
    BACKUP_ID         INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID           INT NOT NULL,
    BACKUP_TIMESTAMP  DATETIME NOT NULL DEFAULT(GETDATE()),
    BACKUP_JSON       TEXT NOT NULL,
    CREATED_BY        VARCHAR(100) NULL
);
GO

----------------------------------------
-- 14) RULE_SCHEDULES
----------------------------------------
IF OBJECT_ID('dbo.RULE_SCHEDULES','U') IS NOT NULL
    DROP TABLE dbo.RULE_SCHEDULES;
GO
CREATE TABLE dbo.RULE_SCHEDULES
(
    SCHEDULE_ID     INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID         INT NOT NULL,
    SCHEDULE_TIME   DATETIME NOT NULL,
    STATUS          VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

----------------------------------------
-- 15) BRM_AUDIT_LOG
----------------------------------------
IF OBJECT_ID('dbo.BRM_AUDIT_LOG','U') IS NOT NULL
    DROP TABLE dbo.BRM_AUDIT_LOG;
GO
CREATE TABLE dbo.BRM_AUDIT_LOG
(
    AUDIT_ID       INT IDENTITY(1,1) PRIMARY KEY,
    ACTION         VARCHAR(50) NOT NULL,
    TABLE_NAME     VARCHAR(100) NOT NULL,
    RECORD_ID      VARCHAR(50) NULL,
    ACTION_BY      VARCHAR(100) NULL,
    OLD_DATA       TEXT NULL,
    NEW_DATA       TEXT NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

----------------------------------------
-- 16) DATA_VALIDATIONS
----------------------------------------
IF OBJECT_ID('dbo.DATA_VALIDATIONS','U') IS NOT NULL
    DROP TABLE dbo.DATA_VALIDATIONS;
GO
CREATE TABLE dbo.DATA_VALIDATIONS
(
    VALIDATION_ID    INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME       VARCHAR(200) NOT NULL,
    COLUMN_NAME      VARCHAR(200) NOT NULL,
    VALIDATION_TYPE  VARCHAR(50) NOT NULL,    -- e.g. NOT NULL / RANGE
    PARAMS           VARCHAR(200) NULL
);
GO

----------------------------------------
-- 17) DECISION_TABLES
----------------------------------------
IF OBJECT_ID('dbo.DECISION_TABLES','U') IS NOT NULL
    DROP TABLE dbo.DECISION_TABLES;
GO
CREATE TABLE dbo.DECISION_TABLES
(
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME        VARCHAR(200) NOT NULL,
    DESCRIPTION       TEXT NULL
);
GO

----------------------------------------
-- 18) BUSINESS_GROUP_APPROVERS
----------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUP_APPROVERS','U') IS NOT NULL
    DROP TABLE dbo.BUSINESS_GROUP_APPROVERS;
GO
CREATE TABLE dbo.BUSINESS_GROUP_APPROVERS
(
    APPROVER_ID  INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME   VARCHAR(100) NOT NULL,
    USERNAME     VARCHAR(100) NOT NULL
);
GO

----------------------------------------
-- 19) BRM_CUSTOM_RULE_GROUPS
----------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_RULE_GROUPS;
GO
CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS
(
    CUSTOM_GROUP_ID       INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME     VARCHAR(200) NOT NULL,
    OWNER_BUSINESS_GROUP  VARCHAR(100) NULL,
    CREATED_BY            VARCHAR(100) NULL,
    CREATED_TIMESTAMP     DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

----------------------------------------
-- 20) BRM_CUSTOM_GROUP_MEMBERS
----------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;
GO
CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS
(
    CUSTOM_GROUP_MEMBERSHIP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID            INT NOT NULL,
    RULE_ID                    INT NOT NULL
);
GO

----------------------------------------
-- 21) BRM_CUSTOM_GROUP_BACKUPS
----------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_BACKUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS;
GO
CREATE TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS
(
    BACKUP_ID        INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID  INT NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    BACKUP_VERSION   INT NOT NULL,
    BACKUP_JSON      TEXT NOT NULL
);
GO

----------------------------------------
-- 22) BUSINESS_DICTIONARY
----------------------------------------
IF OBJECT_ID('dbo.BUSINESS_DICTIONARY','U') IS NOT NULL
    DROP TABLE dbo.BUSINESS_DICTIONARY;
GO
CREATE TABLE dbo.BUSINESS_DICTIONARY
(
    DICT_ID        INT IDENTITY(1,1) PRIMARY KEY,
    DB_NAME        VARCHAR(100) NOT NULL,
    TABLE_NAME     VARCHAR(100) NOT NULL,
    COLUMN_NAME    VARCHAR(100) NOT NULL,
    BUSINESS_NAME  VARCHAR(200) NULL,
    DESCRIPTION    TEXT NULL,
    UPDATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO

----------------------------------------
-- 23) RULE_TAGS (optional if you handle tags)
----------------------------------------
IF OBJECT_ID('dbo.RULE_TAGS','U') IS NOT NULL
    DROP TABLE dbo.RULE_TAGS;
GO
CREATE TABLE dbo.RULE_TAGS
(
    TAG_ID   INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID  INT NOT NULL,
    TAG_NAME VARCHAR(100) NOT NULL
);
GO

----------------------------------------
-- 24) BRM_RULE_APPROVALS (for multi-step approvals)
----------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_APPROVALS;
GO
CREATE TABLE dbo.BRM_RULE_APPROVALS
(
    APPROVAL_ID        INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID            INT NOT NULL,
    GROUP_NAME         VARCHAR(100) NOT NULL,
    USERNAME           VARCHAR(100) NOT NULL,
    APPROVED_FLAG      INT NOT NULL DEFAULT(0), -- 0=Pending, 1=Approved, 2=Rejected
    APPROVED_TIMESTAMP DATETIME NULL,
    APPROVAL_STAGE     INT NOT NULL
);
GO