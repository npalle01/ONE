------------------------------------------------------------
-- DROP EXISTING TABLES (if they exist)
------------------------------------------------------------
IF OBJECT_ID('dbo.USERS', 'U') IS NOT NULL DROP TABLE dbo.USERS;
IF OBJECT_ID('dbo.BUSINESS_GROUPS', 'U') IS NOT NULL DROP TABLE dbo.BUSINESS_GROUPS;
IF OBJECT_ID('dbo.GROUP_PERMISSIONS', 'U') IS NOT NULL DROP TABLE dbo.GROUP_PERMISSIONS;
IF OBJECT_ID('dbo.BRM_RULE_TYPES', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_TYPES;
IF OBJECT_ID('dbo.BRM_RULE_GROUPS', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_GROUPS;
IF OBJECT_ID('dbo.BRM_RULES', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULES;
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;
IF OBJECT_ID('dbo.BRM_AUDIT_LOG', 'U') IS NOT NULL DROP TABLE dbo.BRM_AUDIT_LOG;
IF OBJECT_ID('dbo.BRM_RULE_LOCKS', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_LOCKS;
IF OBJECT_ID('dbo.COLLABORATION_LOGS', 'U') IS NOT NULL DROP TABLE dbo.COLLABORATION_LOGS;
IF OBJECT_ID('dbo.BRM_RULE_LINEAGE', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_LINEAGE;
IF OBJECT_ID('dbo.BRM_COLUMN_MAPPING', 'U') IS NOT NULL DROP TABLE dbo.BRM_COLUMN_MAPPING;
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS', 'U') IS NOT NULL DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS', 'U') IS NOT NULL DROP TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS;
IF OBJECT_ID('dbo.RULE_SCHEDULES', 'U') IS NOT NULL DROP TABLE dbo.RULE_SCHEDULES;
IF OBJECT_ID('dbo.BRM_RULE_COMMENTS', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_COMMENTS;
IF OBJECT_ID('dbo.DECISION_TABLES', 'U') IS NOT NULL DROP TABLE dbo.DECISION_TABLES;
IF OBJECT_ID('dbo.RULE_CONFLICTS', 'U') IS NOT NULL DROP TABLE dbo.RULE_CONFLICTS;
IF OBJECT_ID('dbo.COMPOSITE_RULES', 'U') IS NOT NULL DROP TABLE dbo.COMPOSITE_RULES;
IF OBJECT_ID('dbo.RULE_SNAPSHOTS', 'U') IS NOT NULL DROP TABLE dbo.RULE_SNAPSHOTS;
IF OBJECT_ID('dbo.RULE_TAGS', 'U') IS NOT NULL DROP TABLE dbo.RULE_TAGS;
IF OBJECT_ID('dbo.DATA_VALIDATIONS', 'U') IS NOT NULL DROP TABLE dbo.DATA_VALIDATIONS;
IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS', 'U') IS NOT NULL DROP TABLE dbo.RULE_EXECUTION_LOGS;
IF OBJECT_ID('dbo.RULE_PERF_STATS', 'U') IS NOT NULL DROP TABLE dbo.RULE_PERF_STATS;
IF OBJECT_ID('dbo.BRM_DEFECT_LOGS', 'U') IS NOT NULL DROP TABLE dbo.BRM_DEFECT_LOGS;
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_BACKUPS', 'U') IS NOT NULL DROP TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS;
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS', 'U') IS NOT NULL DROP TABLE dbo.BRM_RULE_APPROVALS;
IF OBJECT_ID('dbo.HELP_CONTENT', 'U') IS NOT NULL DROP TABLE dbo.HELP_CONTENT;

------------------------------------------------------------
-- CREATE TABLES
------------------------------------------------------------

-- 1. USERS
CREATE TABLE dbo.USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME VARCHAR(100) NOT NULL UNIQUE,
    PASSWORD VARCHAR(100) NOT NULL,
    USER_GROUP VARCHAR(50) NOT NULL
);

-- 2. BUSINESS_GROUPS
CREATE TABLE dbo.BUSINESS_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL UNIQUE,
    DESCRIPTION VARCHAR(255) NULL,
    EMAIL VARCHAR(100) NULL
);

-- 3. GROUP_PERMISSIONS
CREATE TABLE dbo.GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    TARGET_TABLE VARCHAR(100) NOT NULL
);

-- 4. BRM_RULE_TYPES
CREATE TABLE dbo.BRM_RULE_TYPES (
    RULE_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100) NOT NULL
);

-- 5. BRM_RULE_GROUPS
CREATE TABLE dbo.BRM_RULE_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL UNIQUE,
    DESCRIPTION VARCHAR(255) NULL
);

-- 6. BRM_RULES
CREATE TABLE dbo.BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID INT NOT NULL,
    PARENT_RULE_ID INT NULL,
    RULE_TYPE_ID INT NOT NULL,
    RULE_NAME VARCHAR(255) NOT NULL,
    RULE_SQL NVARCHAR(MAX) NULL,
    EFFECTIVE_START_DATE DATETIME NOT NULL,
    EFFECTIVE_END_DATE DATETIME NULL,
    STATUS VARCHAR(50) NOT NULL,
    VERSION INT NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    OPERATION_TYPE VARCHAR(50) NOT NULL,
    BUSINESS_JUSTIFICATION NVARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL,
    UPDATED_BY VARCHAR(100) NULL,
    OWNER_GROUP VARCHAR(100) NOT NULL,
    CLUSTER_NAME VARCHAR(100) NULL,
    APPROVAL_STATUS VARCHAR(50) NOT NULL,
    IS_GLOBAL BIT NOT NULL DEFAULT 0,
    CRITICAL_RULE BIT NOT NULL DEFAULT 0,
    CRITICAL_SCOPE VARCHAR(50) NOT NULL DEFAULT 'NONE',
    CDC_TYPE VARCHAR(50) NOT NULL DEFAULT 'NONE',
    LIFECYCLE_STATE VARCHAR(50) NOT NULL,
    DECISION_TABLE_ID INT NULL
);

-- 7. BRM_RULE_TABLE_DEPENDENCIES
CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATABASE_NAME VARCHAR(100) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NOT NULL,
    COLUMN_OP VARCHAR(50) NOT NULL
);

-- 8. BRM_AUDIT_LOG
CREATE TABLE dbo.BRM_AUDIT_LOG (
    AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ACTION VARCHAR(50) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    RECORD_ID VARCHAR(50) NULL,
    ACTION_BY VARCHAR(100) NOT NULL,
    OLD_DATA NVARCHAR(MAX) NULL,
    NEW_DATA NVARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL
);

-- 9. BRM_RULE_LOCKS
CREATE TABLE dbo.BRM_RULE_LOCKS (
    LOCK_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    LOCKED_BY VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP DATETIME NOT NULL,
    EXPIRY_TIMESTAMP DATETIME NOT NULL,
    FORCE_LOCK BIT NOT NULL DEFAULT 0,
    ACTIVE_LOCK BIT NOT NULL DEFAULT 1
);

-- 10. COLLABORATION_LOGS
CREATE TABLE dbo.COLLABORATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    MESSAGE VARCHAR(MAX) NOT NULL,
    SENDER VARCHAR(100) NOT NULL,
    TIMESTAMP DATETIME NOT NULL
);

-- 11. BRM_RULE_LINEAGE
CREATE TABLE dbo.BRM_RULE_LINEAGE (
    LINEAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    PARENT_ID INT NULL
);

-- 12. BRM_COLUMN_MAPPING
CREATE TABLE dbo.BRM_COLUMN_MAPPING (
    MAPPING_ID INT IDENTITY(1,1) PRIMARY KEY,
    SOURCE_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL,
    MAPPING_DETAILS NVARCHAR(MAX) NULL
);

-- 13. BRM_CUSTOM_GROUP_MEMBERS
CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID INT NOT NULL
);

-- 14. BRM_GLOBAL_CRITICAL_LINKS
CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);

-- 15. RULE_SCHEDULES
CREATE TABLE dbo.RULE_SCHEDULES (
    SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SCHEDULE_TIME DATETIME NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL,
    RUN_DATA_VALIDATIONS BIT NOT NULL DEFAULT 0
);

-- 16. BRM_RULE_COMMENTS
CREATE TABLE dbo.BRM_RULE_COMMENTS (
    COMMENT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    COMMENT_TEXT NVARCHAR(MAX) NOT NULL,
    COMMENTED_BY VARCHAR(100) NOT NULL,
    COMMENT_TIMESTAMP DATETIME NOT NULL
);

-- 17. DECISION_TABLES
CREATE TABLE dbo.DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(255) NULL,
    DECISION_QUERY NVARCHAR(MAX) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL,
    UPDATED_TIMESTAMP DATETIME NULL
);

-- 18. RULE_CONFLICTS
CREATE TABLE dbo.RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1 INT NOT NULL,
    RULE_ID2 INT NOT NULL,
    PRIORITY INT NOT NULL
);

-- 19. COMPOSITE_RULES
CREATE TABLE dbo.COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME VARCHAR(255) NOT NULL,
    LOGIC_EXPR VARCHAR(MAX) NOT NULL,
    ACTION_ON_PASS VARCHAR(100) NULL
);

-- 20. RULE_SNAPSHOTS
CREATE TABLE dbo.RULE_SNAPSHOTS (
    SNAPSHOT_ID INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME VARCHAR(255) NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL,
    SNAPSHOT_JSON NVARCHAR(MAX) NOT NULL
);

-- 21. RULE_TAGS
CREATE TABLE dbo.RULE_TAGS (
    TAG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    TAG_NAME VARCHAR(100) NOT NULL
);

-- 22. DATA_VALIDATIONS
CREATE TABLE dbo.DATA_VALIDATIONS (
    VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NOT NULL,
    VALIDATION_TYPE VARCHAR(50) NOT NULL,
    PARAMS VARCHAR(255) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL
);

-- 23. RULE_EXECUTION_LOGS
CREATE TABLE dbo.RULE_EXECUTION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL,
    PASS_FLAG BIT NOT NULL,
    MESSAGE VARCHAR(MAX) NOT NULL,
    RECORD_COUNT INT NOT NULL,
    EXECUTION_TIME_MS INT NOT NULL,
    CPU_USAGE INT NOT NULL,
    MEM_USAGE INT NOT NULL
);

-- 24. RULE_PERF_STATS
CREATE TABLE dbo.RULE_PERF_STATS (
    STAT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATE_KEY VARCHAR(8) NOT NULL,  -- Format: YYYYMMDD
    EXEC_TIME_MS FLOAT NOT NULL,
    MEM_USAGE FLOAT NOT NULL,       -- in KB
    USAGE_COUNT INT NOT NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL
);

-- 25. BRM_DEFECT_LOGS
CREATE TABLE dbo.BRM_DEFECT_LOGS (
    DEFECT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NOT NULL,
    SEVERITY VARCHAR(50) NOT NULL,
    REPORTER VARCHAR(100) NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    TIMESTAMP DATETIME NOT NULL
);

-- 26. BRM_CUSTOM_GROUP_BACKUPS
CREATE TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS (
    BACKUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL,
    BACKUP_VERSION INT NOT NULL,
    BACKUP_JSON NVARCHAR(MAX) NOT NULL
);

-- 27. BRM_RULE_APPROVALS
CREATE TABLE dbo.BRM_RULE_APPROVALS (
    APPROVAL_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    GROUP_NAME VARCHAR(100) NOT NULL,
    USERNAME VARCHAR(100) NOT NULL,
    APPROVED_FLAG INT NOT NULL,  -- 0: pending, 1: approved, 2: rejected
    APPROVED_TIMESTAMP DATETIME NULL,
    APPROVAL_STAGE INT NOT NULL
);

-- 28. HELP_CONTENT
CREATE TABLE dbo.HELP_CONTENT (
    HELP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CATEGORY VARCHAR(50) NOT NULL,  -- e.g., FAQ, GUIDE
    TITLE VARCHAR(255) NOT NULL,
    CONTENT NVARCHAR(MAX) NOT NULL,
    LAST_UPDATED DATETIME NOT NULL
);

------------------------------------------------------------
-- End of DDL file
------------------------------------------------------------