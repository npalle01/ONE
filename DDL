--------------------------------------------------------------------------------
-- USERS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.USERS','U') IS NOT NULL
    DROP TABLE dbo.USERS;
GO

CREATE TABLE dbo.USERS
(
    USER_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    USERNAME VARCHAR(50) NOT NULL,
    PASSWORD VARCHAR(50) NOT NULL,
    USER_GROUP VARCHAR(50) NOT NULL
);
GO


--------------------------------------------------------------------------------
-- BUSINESS_GROUPS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BUSINESS_GROUPS;
GO

CREATE TABLE dbo.BUSINESS_GROUPS
(
    GROUP_NAME  VARCHAR(50) NOT NULL PRIMARY KEY,
    DESCRIPTION VARCHAR(200) NULL,
    EMAIL       VARCHAR(100) NULL
);
GO


--------------------------------------------------------------------------------
-- GROUP_PERMISSIONS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.GROUP_PERMISSIONS','U') IS NOT NULL
    DROP TABLE dbo.GROUP_PERMISSIONS;
GO

CREATE TABLE dbo.GROUP_PERMISSIONS
(
    GROUP_NAME   VARCHAR(50) NOT NULL,
    TARGET_TABLE VARCHAR(128) NOT NULL,
    CONSTRAINT PK_GROUP_PERMISSIONS 
        PRIMARY KEY (GROUP_NAME, TARGET_TABLE),
    CONSTRAINT FK_GROUP_PERMISSIONS_GROUP 
        FOREIGN KEY (GROUP_NAME) REFERENCES dbo.BUSINESS_GROUPS(GROUP_NAME)
        ON DELETE CASCADE
);
GO


--------------------------------------------------------------------------------
-- BRM_RULE_TYPES
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TYPES','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_TYPES;
GO

CREATE TABLE dbo.BRM_RULE_TYPES
(
    RULE_TYPE_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100) NOT NULL
);
GO


--------------------------------------------------------------------------------
-- BRM_RULE_GROUPS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_GROUPS;
GO

CREATE TABLE dbo.BRM_RULE_GROUPS
(
    GROUP_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL
);
GO


--------------------------------------------------------------------------------
-- BRM_RULES
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULES','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULES;
GO

CREATE TABLE dbo.BRM_RULES
(
    RULE_ID                INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_ID              INT NULL,  -- references BRM_RULE_GROUPS
    PARENT_RULE_ID        INT NULL,
    RULE_TYPE_ID          INT NOT NULL,  -- references BRM_RULE_TYPES
    RULE_NAME             VARCHAR(200) NOT NULL,
    RULE_SQL              VARCHAR(MAX) NOT NULL,
    EFFECTIVE_START_DATE  DATETIME NULL,
    EFFECTIVE_END_DATE    DATETIME NULL,
    STATUS                VARCHAR(50) NOT NULL DEFAULT('INACTIVE'),
    VERSION               INT NOT NULL DEFAULT(1),
    CREATED_BY            VARCHAR(50) NOT NULL,
    DESCRIPTION           VARCHAR(MAX) NULL,
    OPERATION_TYPE        VARCHAR(20) NOT NULL,
    BUSINESS_JUSTIFICATION VARCHAR(MAX) NULL,
    CREATED_TIMESTAMP     DATETIME NOT NULL DEFAULT(GETDATE()),
    UPDATED_BY            VARCHAR(50) NULL,
    OWNER_GROUP           VARCHAR(50) NOT NULL,
    CLUSTER_NAME          VARCHAR(100) NULL,
    APPROVAL_STATUS       VARCHAR(50) NOT NULL DEFAULT('APPROVAL_IN_PROGRESS'),
    IS_GLOBAL             BIT NOT NULL DEFAULT(0),
    CRITICAL_RULE         BIT NOT NULL DEFAULT(0),
    CRITICAL_SCOPE        VARCHAR(50) NOT NULL DEFAULT('NONE'),
    CDC_TYPE              VARCHAR(50) NOT NULL DEFAULT('NONE')
);

-- Some optional foreign keys:
-- ALTER TABLE dbo.BRM_RULES
--     ADD CONSTRAINT FK_BRM_RULES_GROUP_ID 
--         FOREIGN KEY (GROUP_ID) REFERENCES dbo.BRM_RULE_GROUPS(GROUP_ID);

-- ALTER TABLE dbo.BRM_RULES
--     ADD CONSTRAINT FK_BRM_RULES_RULE_TYPE 
--         FOREIGN KEY (RULE_TYPE_ID) REFERENCES dbo.BRM_RULE_TYPES(RULE_TYPE_ID);

GO


--------------------------------------------------------------------------------
-- BRM_RULE_TABLE_DEPENDENCIES
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;
GO

CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES
(
    DEPENDENCY_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID       INT NOT NULL,
    DATABASE_NAME VARCHAR(50) NULL,
    TABLE_NAME    VARCHAR(200) NOT NULL,
    COLUMN_NAME   VARCHAR(200) NOT NULL,
    COLUMN_OP     VARCHAR(10) NOT NULL  -- e.g. READ/WRITE
);

-- optional foreign key:
-- ALTER TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES 
--     ADD CONSTRAINT FK_RULE_DEPEND_RULE_ID 
--         FOREIGN KEY(RULE_ID) REFERENCES dbo.BRM_RULES(RULE_ID);

GO


--------------------------------------------------------------------------------
-- BRM_AUDIT_LOG
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_AUDIT_LOG','U') IS NOT NULL
    DROP TABLE dbo.BRM_AUDIT_LOG;
GO

CREATE TABLE dbo.BRM_AUDIT_LOG
(
    AUDIT_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    ACTION         VARCHAR(50) NOT NULL,
    TABLE_NAME     VARCHAR(128) NOT NULL,
    RECORD_ID      VARCHAR(50) NOT NULL,
    ACTION_BY      VARCHAR(50) NOT NULL,
    OLD_DATA       VARCHAR(MAX) NULL,
    NEW_DATA       VARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
GO


--------------------------------------------------------------------------------
-- BRM_GROUP_BACKUPS
--------------------------------------------------------------------------------
-- If used for group-level backups (not heavily in code, but referenced).
IF OBJECT_ID('dbo.BRM_GROUP_BACKUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_GROUP_BACKUPS;
GO

CREATE TABLE dbo.BRM_GROUP_BACKUPS
(
    BACKUP_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_ID    INT NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    BACKUP_JSON VARCHAR(MAX) NOT NULL,
    BACKUP_VERSION INT NOT NULL
);

-- Optional foreign key to BRM_RULE_GROUPS:
-- ALTER TABLE dbo.BRM_GROUP_BACKUPS
--     ADD CONSTRAINT FK_BRM_GROUP_BACKUPS_GRP 
--         FOREIGN KEY(GROUP_ID) REFERENCES dbo.BRM_RULE_GROUPS(GROUP_ID);

GO


--------------------------------------------------------------------------------
-- BRM_COLUMN_MAPPING
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_COLUMN_MAPPING','U') IS NOT NULL
    DROP TABLE dbo.BRM_COLUMN_MAPPING;
GO

CREATE TABLE dbo.BRM_COLUMN_MAPPING
(
    MAPPING_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    SOURCE_RULE_ID   INT NOT NULL,
    RULE_ID          INT NOT NULL,
    COLUMN_NAME      VARCHAR(200) NOT NULL,
    COLUMN_EXPRESSION VARCHAR(MAX) NULL
);
GO


--------------------------------------------------------------------------------
-- BRM_CUSTOM_RULE_GROUPS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_RULE_GROUPS;
GO

CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS
(
    CUSTOM_GROUP_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CUSTOM_GROUP_NAME    VARCHAR(200) NOT NULL,
    OWNER_BUSINESS_GROUP VARCHAR(50) NOT NULL, 
    CREATED_BY           VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP    DATETIME NOT NULL DEFAULT(GETDATE())
);
GO


--------------------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_MEMBERS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;
GO

CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS
(
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID         INT NOT NULL,
    CONSTRAINT PK_BRM_CUSTOM_GROUP_MEMBERS
        PRIMARY KEY (CUSTOM_GROUP_ID, RULE_ID)
);

-- optionally:
-- ALTER TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS
--   ADD CONSTRAINT FK_CUST_GRP_MEM_GROUP 
--       FOREIGN KEY (CUSTOM_GROUP_ID) REFERENCES dbo.BRM_CUSTOM_RULE_GROUPS(CUSTOM_GROUP_ID);

-- ALTER TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS
--   ADD CONSTRAINT FK_CUST_GRP_MEM_RULE 
--       FOREIGN KEY (RULE_ID) REFERENCES dbo.BRM_RULES(RULE_ID);

GO


--------------------------------------------------------------------------------
-- BUSINESS_GROUP_APPROVERS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUP_APPROVERS','U') IS NOT NULL
    DROP TABLE dbo.BUSINESS_GROUP_APPROVERS;
GO

CREATE TABLE dbo.BUSINESS_GROUP_APPROVERS
(
    APPROVER_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME  VARCHAR(50) NOT NULL,
    USERNAME    VARCHAR(50) NOT NULL
);

-- optional:
-- ALTER TABLE dbo.BUSINESS_GROUP_APPROVERS
--   ADD CONSTRAINT FK_BGA_BIZ_GROUP 
--       FOREIGN KEY (GROUP_NAME) REFERENCES dbo.BUSINESS_GROUPS(GROUP_NAME);

GO


--------------------------------------------------------------------------------
-- BRM_RULE_APPROVALS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_APPROVALS;
GO

CREATE TABLE dbo.BRM_RULE_APPROVALS
(
    APPROVAL_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID          INT NOT NULL,
    GROUP_NAME       VARCHAR(50) NOT NULL,
    USERNAME         VARCHAR(50) NOT NULL,
    APPROVED_FLAG    INT NOT NULL DEFAULT(0),   -- 0=not approved,1=approved,2=rejected
    APPROVED_TIMESTAMP DATETIME NULL,
    APPROVAL_STAGE   INT NOT NULL
);

-- optional:
-- ALTER TABLE dbo.BRM_RULE_APPROVALS
--   ADD CONSTRAINT FK_RULE_APPROVALS_RULE_ID 
--       FOREIGN KEY(RULE_ID) REFERENCES dbo.BRM_RULES(RULE_ID);

GO


--------------------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_BACKUPS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_BACKUPS','U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS;
GO

CREATE TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS
(
    BACKUP_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    BACKUP_VERSION  INT NOT NULL,
    BACKUP_JSON     VARCHAR(MAX) NOT NULL
);

-- optional:
-- ALTER TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS
--   ADD CONSTRAINT FK_CGB_CGID
--       FOREIGN KEY (CUSTOM_GROUP_ID) REFERENCES dbo.BRM_CUSTOM_RULE_GROUPS(CUSTOM_GROUP_ID);

GO


--------------------------------------------------------------------------------
-- BRM_GLOBAL_CRITICAL_LINKS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS','U') IS NOT NULL
    DROP TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS;
GO

CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS
(
    GCR_LINK_ID  INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GCR_RULE_ID  INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);

-- optional:
-- ALTER TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS
--   ADD CONSTRAINT FK_GCR_PARENT 
--       FOREIGN KEY (GCR_RULE_ID) REFERENCES dbo.BRM_RULES(RULE_ID);
-- ALTER TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS
--   ADD CONSTRAINT FK_GCR_CHILD
--       FOREIGN KEY (TARGET_RULE_ID) REFERENCES dbo.BRM_RULES(RULE_ID);

GO


--------------------------------------------------------------------------------
-- RULE_SCHEDULES
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_SCHEDULES','U') IS NOT NULL
    DROP TABLE dbo.RULE_SCHEDULES;
GO

CREATE TABLE dbo.RULE_SCHEDULES
(
    SCHEDULE_ID     INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID         INT NOT NULL,
    SCHEDULE_TIME   DATETIME NOT NULL,
    STATUS          VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);

-- optional:
-- ALTER TABLE dbo.RULE_SCHEDULES
--   ADD CONSTRAINT FK_SCHEDULES_RULE 
--       FOREIGN KEY (RULE_ID) REFERENCES dbo.BRM_RULES(RULE_ID);

GO


--------------------------------------------------------------------------------
-- BRM_RULE_COMMENTS (if needed)
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_COMMENTS','U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_COMMENTS;
GO

CREATE TABLE dbo.BRM_RULE_COMMENTS
(
    COMMENT_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID      INT NOT NULL,
    COMMENT_TEXT VARCHAR(MAX) NOT NULL,
    CREATED_BY   VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);

-- optional foreign key:
-- ALTER TABLE dbo.BRM_RULE_COMMENTS
--   ADD CONSTRAINT FK_RULE_COMMENTS_RULE
--       FOREIGN KEY (RULE_ID) REFERENCES dbo.BRM_RULES(RULE_ID);

GO


--------------------------------------------------------------------------------
-- DECISION_TABLES
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.DECISION_TABLES','U') IS NOT NULL
    DROP TABLE dbo.DECISION_TABLES;
GO

CREATE TABLE dbo.DECISION_TABLES
(
    DECISION_TABLE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    TABLE_NAME        VARCHAR(200) NOT NULL,
    DESCRIPTION       VARCHAR(MAX) NULL
);
GO


--------------------------------------------------------------------------------
-- RULE_CONFLICTS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_CONFLICTS','U') IS NOT NULL
    DROP TABLE dbo.RULE_CONFLICTS;
GO

CREATE TABLE dbo.RULE_CONFLICTS
(
    CONFLICT_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID1    INT NOT NULL,
    RULE_ID2    INT NOT NULL,
    PRIORITY    INT NOT NULL
);

-- optional:
-- ALTER TABLE dbo.RULE_CONFLICTS
--     ADD CONSTRAINT FK_CONFLICT_R1 
--         FOREIGN KEY (RULE_ID1) REFERENCES dbo.BRM_RULES(RULE_ID);
-- ALTER TABLE dbo.RULE_CONFLICTS
--     ADD CONSTRAINT FK_CONFLICT_R2
--         FOREIGN KEY (RULE_ID2) REFERENCES dbo.BRM_RULES(RULE_ID);

GO


--------------------------------------------------------------------------------
-- COMPOSITE_RULES
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.COMPOSITE_RULES','U') IS NOT NULL
    DROP TABLE dbo.COMPOSITE_RULES;
GO

CREATE TABLE dbo.COMPOSITE_RULES
(
    COMPOSITE_RULE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CRULE_NAME        VARCHAR(200) NOT NULL,
    LOGIC_EXPR        VARCHAR(MAX) NULL,
    ACTION_ON_PASS    VARCHAR(MAX) NULL
);
GO


--------------------------------------------------------------------------------
-- RULE_SNAPSHOTS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_SNAPSHOTS','U') IS NOT NULL
    DROP TABLE dbo.RULE_SNAPSHOTS;
GO

CREATE TABLE dbo.RULE_SNAPSHOTS
(
    SNAPSHOT_ID     INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    SNAPSHOT_NAME   VARCHAR(200) NOT NULL,
    CREATED_BY      VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    SNAPSHOT_JSON   VARCHAR(MAX) NOT NULL
);
GO


--------------------------------------------------------------------------------
-- RULE_TAGS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_TAGS','U') IS NOT NULL
    DROP TABLE dbo.RULE_TAGS;
GO

CREATE TABLE dbo.RULE_TAGS
(
    TAG_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID  INT NOT NULL,
    TAG_NAME VARCHAR(100) NOT NULL
);

-- optional:
-- ALTER TABLE dbo.RULE_TAGS
--   ADD CONSTRAINT FK_TAGS_RULE
--       FOREIGN KEY (RULE_ID) REFERENCES dbo.BRM_RULES(RULE_ID);

GO


--------------------------------------------------------------------------------
-- DATA_VALIDATIONS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.DATA_VALIDATIONS','U') IS NOT NULL
    DROP TABLE dbo.DATA_VALIDATIONS;
GO

CREATE TABLE dbo.DATA_VALIDATIONS
(
    VALIDATION_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    TABLE_NAME      VARCHAR(200) NOT NULL,
    COLUMN_NAME     VARCHAR(200) NOT NULL,
    VALIDATION_TYPE VARCHAR(50) NOT NULL,
    PARAMS          VARCHAR(MAX) NULL
);
GO


--------------------------------------------------------------------------------
-- RULE_EXECUTION_LOGS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS','U') IS NOT NULL
    DROP TABLE dbo.RULE_EXECUTION_LOGS;
GO

CREATE TABLE dbo.RULE_EXECUTION_LOGS
(
    EXEC_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID       INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    PASS_FLAG     BIT NOT NULL DEFAULT(0),
    MESSAGE       VARCHAR(MAX) NULL,
    RECORD_COUNT  INT NOT NULL DEFAULT(0)
);

-- optional:
-- ALTER TABLE dbo.RULE_EXECUTION_LOGS
--   ADD CONSTRAINT FK_EXEC_LOGS_RULE 
--       FOREIGN KEY(RULE_ID) REFERENCES dbo.BRM_RULES(RULE_ID);

GO


--------------------------------------------------------------------------------
-- RULE_LOCKS
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_LOCKS','U') IS NOT NULL
    DROP TABLE dbo.RULE_LOCKS;
GO

CREATE TABLE dbo.RULE_LOCKS
(
    RULE_ID       INT NOT NULL PRIMARY KEY,
    LOCKED_BY     VARCHAR(50) NOT NULL,
    LOCK_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);

-- optional:
-- ALTER TABLE dbo.RULE_LOCKS
--   ADD CONSTRAINT FK_RULE_LOCK_RULE
--       FOREIGN KEY(RULE_ID) REFERENCES dbo.BRM_RULES(RULE_ID);

GO

--------------------------------------------------------------------------------
-- END OF DDLs
--------------------------------------------------------------------------------