-- Table: BRM_AUDIT_LOG
CREATE TABLE BRM_AUDIT_LOG (
    AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ACTION VARCHAR(50) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    RECORD_ID VARCHAR(50) NULL,
    ACTION_BY VARCHAR(100) NOT NULL,
    OLD_DATA NVARCHAR(MAX) NULL,
    NEW_DATA NVARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-- Table: BRM_RULES
CREATE TABLE BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID INT NOT NULL,
    PARENT_RULE_ID INT NULL,
    RULE_TYPE_ID INT NOT NULL,
    RULE_NAME VARCHAR(255) NOT NULL,
    RULE_SQL NVARCHAR(MAX) NULL,
    EFFECTIVE_START_DATE DATETIME NULL,
    EFFECTIVE_END_DATE DATETIME NULL,
    STATUS VARCHAR(20) NOT NULL,
    VERSION INT NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    UPDATED_BY VARCHAR(100) NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    OPERATION_TYPE VARCHAR(50) NOT NULL,
    BUSINESS_JUSTIFICATION NVARCHAR(MAX) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    APPROVAL_STATUS VARCHAR(50) NOT NULL,
    IS_GLOBAL BIT NOT NULL DEFAULT 0,
    CRITICAL_RULE BIT NOT NULL DEFAULT 0,
    CRITICAL_SCOPE VARCHAR(50) NULL,
    CDC_TYPE VARCHAR(50) NOT NULL DEFAULT 'NONE',
    LIFECYCLE_STATE VARCHAR(50) NOT NULL,
    DECISION_TABLE_ID INT NULL,
    ENCRYPTED_FLAG BIT NOT NULL DEFAULT 0,
    OWNER_GROUP VARCHAR(100) NOT NULL,
    CLUSTER_NAME VARCHAR(100) NULL,
    LOCKED_BY VARCHAR(100) NULL
);

-- Table: BRM_RULE_TABLE_DEPENDENCIES
CREATE TABLE BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATABASE_NAME VARCHAR(100) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NULL,
    COLUMN_OP VARCHAR(50) NULL
);

-- Table: DATA_VALIDATIONS
CREATE TABLE DATA_VALIDATIONS (
    VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NOT NULL,
    VALIDATION_TYPE VARCHAR(50) NOT NULL,
    PARAMS VARCHAR(255) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-- Table: DATA_VALIDATION_LOGS
CREATE TABLE DATA_VALIDATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID INT NOT NULL,
    RESULT_FLAG VARCHAR(10) NOT NULL,
    DETAILS NVARCHAR(MAX) NOT NULL,
    VALIDATION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-- Table: RULE_EXECUTION_LOGS
CREATE TABLE RULE_EXECUTION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    RECORD_COUNT INT NOT NULL,
    EXECUTION_TIME_MS INT NOT NULL,
    CPU_USAGE INT NOT NULL,
    MEM_USAGE INT NOT NULL
);

-- Table: DECISION_TABLES
CREATE TABLE DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    DECISION_QUERY NVARCHAR(MAX) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-- Table: DECISION_TABLE_EXEC_LOGS
CREATE TABLE DECISION_TABLE_EXEC_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    DECISION_TABLE_ID INT NOT NULL,
    EXEC_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    RECORD_COUNT INT NOT NULL
);

-- Table: RULE_SCHEDULES
CREATE TABLE RULE_SCHEDULES (
    SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SCHEDULE_TIME DATETIME NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    RUN_DATA_VALIDATIONS BIT NOT NULL DEFAULT 0
);

-- Table: RULE_SNAPSHOTS
CREATE TABLE RULE_SNAPSHOTS (
    SNAPSHOT_ID INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME VARCHAR(255) NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    SNAPSHOT_JSON NVARCHAR(MAX) NOT NULL
);

-- Table: RULE_TAGS
CREATE TABLE RULE_TAGS (
    TAG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    TAG_NAME VARCHAR(100) NOT NULL
);

-- Table: USERS
CREATE TABLE USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME VARCHAR(100) NOT NULL UNIQUE,
    PASSWORD VARCHAR(100) NOT NULL,
    USER_GROUP VARCHAR(50) NOT NULL
);

-- Table: COLLABORATION_LOGS
CREATE TABLE COLLABORATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    SENDER VARCHAR(100) NOT NULL,
    TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-- Table: RULE_CONFLICTS
CREATE TABLE RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1 INT NOT NULL,
    RULE_ID2 INT NOT NULL,
    PRIORITY INT NOT NULL
);

-- Table: BRM_GLOBAL_CRITICAL_LINKS
CREATE TABLE BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);

-- Table: COMPOSITE_RULES
CREATE TABLE COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME VARCHAR(255) NOT NULL,
    LOGIC_EXPR NVARCHAR(MAX) NOT NULL,
    ACTION_ON_PASS VARCHAR(100) NULL
);

-- Table: BRM_RULE_APPROVALS
CREATE TABLE BRM_RULE_APPROVALS (
    APPROVAL_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    GROUP_NAME VARCHAR(100) NOT NULL,
    USERNAME VARCHAR(100) NOT NULL,
    APPROVED_FLAG INT NOT NULL,  -- 0=pending, 1=approved, 2=rejected
    APPROVAL_STAGE INT NOT NULL,
    APPROVED_TIMESTAMP DATETIME NULL
);

-- Table: BRM_RULE_GROUPS
CREATE TABLE BRM_RULE_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL
);

-- Table: BRM_RULE_TYPES
CREATE TABLE BRM_RULE_TYPES (
    RULE_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100) NOT NULL
);

-- Table: BRM_CUSTOM_RULE_GROUPS
CREATE TABLE BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME VARCHAR(100) NOT NULL
);

-- Table: BRM_CUSTOM_GROUP_MEMBERS
CREATE TABLE BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID INT NOT NULL
);

-- Table: BRM_RULE_LOCKS
CREATE TABLE BRM_RULE_LOCKS (
    LOCK_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    LOCKED_BY VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP DATETIME NOT NULL,
    EXPIRY_TIMESTAMP DATETIME NOT NULL,
    FORCE_LOCK BIT NOT NULL,
    ACTIVE_LOCK BIT NOT NULL
);
