/*****************************************************
   DROP AND CREATE ALL TABLES FOR THE BRM TOOL
   (No encryption columns â€“ fully compatible with SQL Server)
*****************************************************/

/* 1. BRM_AUDIT_LOG */
IF OBJECT_ID('dbo.BRM_AUDIT_LOG', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_AUDIT_LOG;
GO
CREATE TABLE dbo.BRM_AUDIT_LOG (
    AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ACTION NVARCHAR(50) NOT NULL,
    TABLE_NAME NVARCHAR(100) NOT NULL,
    RECORD_ID NVARCHAR(50) NULL,
    ACTION_BY NVARCHAR(100) NOT NULL,
    OLD_DATA NVARCHAR(MAX) NULL,
    NEW_DATA NVARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

/* 2. USERS */
IF OBJECT_ID('dbo.USERS', 'U') IS NOT NULL
    DROP TABLE dbo.USERS;
GO
CREATE TABLE dbo.USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME NVARCHAR(100) NOT NULL,
    PASSWORD NVARCHAR(100) NOT NULL,
    USER_GROUP NVARCHAR(100) NOT NULL
);
GO

/* 3. BRM_RULES */
IF OBJECT_ID('dbo.BRM_RULES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULES;
GO
CREATE TABLE dbo.BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID INT NOT NULL,
    PARENT_RULE_ID INT NULL,
    RULE_TYPE_ID INT NOT NULL,
    RULE_NAME NVARCHAR(255) NOT NULL,
    RULE_SQL NVARCHAR(MAX) NULL,
    EFFECTIVE_START_DATE DATETIME NULL,
    EFFECTIVE_END_DATE DATETIME NULL,
    STATUS NVARCHAR(50) NOT NULL,
    VERSION INT NOT NULL,
    CREATED_BY NVARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    OPERATION_TYPE NVARCHAR(50) NULL,
    BUSINESS_JUSTIFICATION NVARCHAR(MAX) NULL,
    OWNER_GROUP NVARCHAR(100) NOT NULL,
    APPROVAL_STATUS NVARCHAR(50) NULL,
    IS_GLOBAL BIT NOT NULL DEFAULT 0,
    CRITICAL_RULE BIT NOT NULL DEFAULT 0,
    CRITICAL_SCOPE NVARCHAR(50) NULL,
    CDC_TYPE NVARCHAR(50) NULL,
    LIFECYCLE_STATE NVARCHAR(50) NULL,
    DECISION_TABLE_ID INT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    UPDATED_BY NVARCHAR(100) NULL
);
GO

/* 4. BRM_RULE_APPROVALS */
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_APPROVALS;
GO
CREATE TABLE dbo.BRM_RULE_APPROVALS (
    APPROVAL_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    GROUP_NAME NVARCHAR(100) NOT NULL,
    USERNAME NVARCHAR(100) NOT NULL,
    APPROVED_FLAG INT NOT NULL,  -- e.g., 0=pending, 1=approved, 2=rejected
    APPROVAL_STAGE INT NOT NULL,
    APPROVED_TIMESTAMP DATETIME NULL
);
GO

/* 5. BRM_RULE_LOCKS */
IF OBJECT_ID('dbo.BRM_RULE_LOCKS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_LOCKS;
GO
CREATE TABLE dbo.BRM_RULE_LOCKS (
    LOCK_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    LOCKED_BY NVARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP DATETIME NOT NULL,
    EXPIRY_TIMESTAMP DATETIME NOT NULL,
    FORCE_LOCK BIT NOT NULL DEFAULT 0,
    ACTIVE_LOCK BIT NOT NULL DEFAULT 1
);
GO

/* 6. DATA_VALIDATIONS */
IF OBJECT_ID('dbo.DATA_VALIDATIONS', 'U') IS NOT NULL
    DROP TABLE dbo.DATA_VALIDATIONS;
GO
CREATE TABLE dbo.DATA_VALIDATIONS (
    VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME NVARCHAR(255) NOT NULL,
    COLUMN_NAME NVARCHAR(255) NOT NULL,
    VALIDATION_TYPE NVARCHAR(50) NOT NULL,
    PARAMS NVARCHAR(255) NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

/* 7. DATA_VALIDATION_LOGS */
IF OBJECT_ID('dbo.DATA_VALIDATION_LOGS', 'U') IS NOT NULL
    DROP TABLE dbo.DATA_VALIDATION_LOGS;
GO
CREATE TABLE dbo.DATA_VALIDATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID INT NOT NULL,
    RESULT_FLAG NVARCHAR(10) NOT NULL,  -- e.g., 'PASS' or 'FAIL'
    DETAILS NVARCHAR(MAX) NULL,
    VALIDATION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

/* 8. BRM_RULE_TABLE_DEPENDENCIES */
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;
GO
CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATABASE_NAME NVARCHAR(100) NOT NULL,
    TABLE_NAME NVARCHAR(255) NOT NULL,
    COLUMN_NAME NVARCHAR(255) NULL,
    COLUMN_OP NVARCHAR(50) NULL
);
GO

/* 9. BRM_RULE_LINEAGE */
IF OBJECT_ID('dbo.BRM_RULE_LINEAGE', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_LINEAGE;
GO
CREATE TABLE dbo.BRM_RULE_LINEAGE (
    LINEAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    PARENT_RULE_ID INT NOT NULL
);
GO

/* 10. BRM_GLOBAL_CRITICAL_LINKS */
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS;
GO
CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);
GO

/* 11. RULE_CONFLICTS */
IF OBJECT_ID('dbo.RULE_CONFLICTS', 'U') IS NOT NULL
    DROP TABLE dbo.RULE_CONFLICTS;
GO
CREATE TABLE dbo.RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1 INT NOT NULL,
    RULE_ID2 INT NOT NULL,
    PRIORITY INT NOT NULL
);
GO

/* 12. COMPOSITE_RULES */
IF OBJECT_ID('dbo.COMPOSITE_RULES', 'U') IS NOT NULL
    DROP TABLE dbo.COMPOSITE_RULES;
GO
CREATE TABLE dbo.COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME NVARCHAR(255) NOT NULL,
    LOGIC_EXPR NVARCHAR(MAX) NOT NULL,
    ACTION_ON_PASS NVARCHAR(255) NULL
);
GO

/* 13. BRM_CUSTOM_RULE_GROUPS */
IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_RULE_GROUPS;
GO
CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME NVARCHAR(255) NOT NULL,
    OWNER_BUSINESS_GROUP NVARCHAR(100) NOT NULL,
    CREATED_BY NVARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

/* 14. BRM_CUSTOM_GROUP_MEMBERS */
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;
GO
CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID INT NOT NULL
);
GO

/* 15. RULE_SCHEDULES */
IF OBJECT_ID('dbo.RULE_SCHEDULES', 'U') IS NOT NULL
    DROP TABLE dbo.RULE_SCHEDULES;
GO
CREATE TABLE dbo.RULE_SCHEDULES (
    SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SCHEDULE_TIME DATETIME NOT NULL,
    STATUS NVARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    RUN_DATA_VALIDATIONS BIT NOT NULL DEFAULT 0
);
GO

/* 16. BRM_DEFECT_LOGS */
IF OBJECT_ID('dbo.BRM_DEFECT_LOGS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_DEFECT_LOGS;
GO
CREATE TABLE dbo.BRM_DEFECT_LOGS (
    DEFECT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NOT NULL,
    SEVERITY NVARCHAR(50) NOT NULL,
    REPORTER NVARCHAR(100) NOT NULL,
    STATUS NVARCHAR(50) NOT NULL,
    TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

/* 17. COLLABORATION_LOGS */
IF OBJECT_ID('dbo.COLLABORATION_LOGS', 'U') IS NOT NULL
    DROP TABLE dbo.COLLABORATION_LOGS;
GO
CREATE TABLE dbo.COLLABORATION_LOGS (
    MESSAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    SENDER NVARCHAR(100) NOT NULL,
    TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

/* 18. BRM_RULE_PERF_STATS */
IF OBJECT_ID('dbo.BRM_RULE_PERF_STATS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_PERF_STATS;
GO
CREATE TABLE dbo.BRM_RULE_PERF_STATS (
    STAT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATE_KEY CHAR(8) NOT NULL,
    EXEC_TIME_MS FLOAT NOT NULL,
    MEM_USAGE FLOAT NOT NULL,
    USAGE_COUNT INT NOT NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL
);
GO

/* 19. DECISION_TABLES */
IF OBJECT_ID('dbo.DECISION_TABLES', 'U') IS NOT NULL
    DROP TABLE dbo.DECISION_TABLES;
GO
CREATE TABLE dbo.DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME NVARCHAR(255) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    DECISION_QUERY NVARCHAR(MAX) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);
GO

/* 20. DECISION_TABLE_EXEC_LOGS */
IF OBJECT_ID('dbo.DECISION_TABLE_EXEC_LOGS', 'U') IS NOT NULL
    DROP TABLE dbo.DECISION_TABLE_EXEC_LOGS;
GO
CREATE TABLE dbo.DECISION_TABLE_EXEC_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    DECISION_TABLE_ID INT NOT NULL,
    EXEC_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    RECORD_COUNT INT NOT NULL
);
GO

/* 21. RULE_SNAPSHOTS */
IF OBJECT_ID('dbo.RULE_SNAPSHOTS', 'U') IS NOT NULL
    DROP TABLE dbo.RULE_SNAPSHOTS;
GO
CREATE TABLE dbo.RULE_SNAPSHOTS (
    SNAPSHOT_ID INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME NVARCHAR(255) NOT NULL,
    CREATED_BY NVARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    SNAPSHOT_JSON NVARCHAR(MAX) NOT NULL
);
GO

/* 22. RULE_TAGS */
IF OBJECT_ID('dbo.RULE_TAGS', 'U') IS NOT NULL
    DROP TABLE dbo.RULE_TAGS;
GO
CREATE TABLE dbo.RULE_TAGS (
    TAG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    TAG_NAME NVARCHAR(100) NOT NULL
);
GO

/* 23. BRM_RULE_GROUPS */
IF OBJECT_ID('dbo.BRM_RULE_GROUPS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_GROUPS;
GO
CREATE TABLE dbo.BRM_RULE_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME NVARCHAR(255) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    EMAIL NVARCHAR(100) NULL
);
GO

/* 24. BRM_RULE_TYPES */
IF OBJECT_ID('dbo.BRM_RULE_TYPES', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_RULE_TYPES;
GO
CREATE TABLE dbo.BRM_RULE_TYPES (
    RULE_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_TYPE_NAME NVARCHAR(100) NOT NULL
);
GO

/* 25. BUSINESS_GROUPS */
IF OBJECT_ID('dbo.BUSINESS_GROUPS', 'U') IS NOT NULL
    DROP TABLE dbo.BUSINESS_GROUPS;
GO
CREATE TABLE dbo.BUSINESS_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME NVARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    EMAIL NVARCHAR(100) NULL
);
GO

/* 26. GROUP_PERMISSIONS */
IF OBJECT_ID('dbo.GROUP_PERMISSIONS', 'U') IS NOT NULL
    DROP TABLE dbo.GROUP_PERMISSIONS;
GO
CREATE TABLE dbo.GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME NVARCHAR(100) NOT NULL,
    TARGET_TABLE NVARCHAR(255) NOT NULL
);
GO

/* 27. HELP_CONTENT */
IF OBJECT_ID('dbo.HELP_CONTENT', 'U') IS NOT NULL
    DROP TABLE dbo.HELP_CONTENT;
GO
CREATE TABLE dbo.HELP_CONTENT (
    HELP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CATEGORY NVARCHAR(50) NOT NULL,
    TITLE NVARCHAR(255) NOT NULL,
    CONTENT NVARCHAR(MAX) NOT NULL,
    LAST_UPDATED DATETIME NOT NULL DEFAULT GETDATE()
);
GO

/* 28. BRM_CUSTOM_GROUP_BACKUPS */
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_BACKUPS', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS;
GO
CREATE TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS (
    BACKUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
    BACKUP_VERSION INT NOT NULL,
    BACKUP_JSON NVARCHAR(MAX) NOT NULL
);
GO

/* 29. BRM_COLUMN_MAPPING */
IF OBJECT_ID('dbo.BRM_COLUMN_MAPPING', 'U') IS NOT NULL
    DROP TABLE dbo.BRM_COLUMN_MAPPING;
GO
CREATE TABLE dbo.BRM_COLUMN_MAPPING (
    MAPPING_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SOURCE_COLUMN NVARCHAR(255) NOT NULL,
    TARGET_COLUMN NVARCHAR(255) NOT NULL
);
GO

/*****************************************************
   End of DDL Script
*****************************************************/