-------------------------------------------
-- 1) USERS
-------------------------------------------
IF OBJECT_ID('dbo.USERS','U') IS NOT NULL DROP TABLE dbo.USERS;
CREATE TABLE dbo.USERS (
    USER_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    USERNAME     VARCHAR(100) NOT NULL,
    [PASSWORD]   VARCHAR(200) NOT NULL,  -- Stored in encrypted form
    USER_GROUP   VARCHAR(100) NOT NULL
);
-------------------------------------------
-- 2) BRM_AUDIT_LOG
-------------------------------------------
IF OBJECT_ID('dbo.BRM_AUDIT_LOG','U') IS NOT NULL DROP TABLE dbo.BRM_AUDIT_LOG;
CREATE TABLE dbo.BRM_AUDIT_LOG (
    AUDIT_ID        INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    ACTION          VARCHAR(50) NOT NULL,
    TABLE_NAME      VARCHAR(100) NOT NULL,
    RECORD_ID       VARCHAR(50) NULL,
    ACTION_BY       VARCHAR(100) NOT NULL,
    OLD_DATA        VARCHAR(MAX) NULL,
    NEW_DATA        VARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
-------------------------------------------
-- 3) BUSINESS_GROUPS
-------------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUPS','U') IS NOT NULL DROP TABLE dbo.BUSINESS_GROUPS;
CREATE TABLE dbo.BUSINESS_GROUPS (
    GROUP_NAME   VARCHAR(100) NOT NULL PRIMARY KEY,  -- example choice
    DESCRIPTION  VARCHAR(500) NULL,
    EMAIL        VARCHAR(200) NULL
);
-------------------------------------------
-- 4) BRM_RULE_GROUPS
-------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_GROUPS','U') IS NOT NULL DROP TABLE dbo.BRM_RULE_GROUPS;
CREATE TABLE dbo.BRM_RULE_GROUPS (
    GROUP_ID    INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME  VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(500) NULL
);
-------------------------------------------
-- 5) BRM_RULE_TYPES
-------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TYPES','U') IS NOT NULL DROP TABLE dbo.BRM_RULE_TYPES;
CREATE TABLE dbo.BRM_RULE_TYPES (
    RULE_TYPE_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_TYPE_NAME VARCHAR(100) NOT NULL
);
-------------------------------------------
-- 6) GROUP_PERMISSIONS
-------------------------------------------
IF OBJECT_ID('dbo.GROUP_PERMISSIONS','U') IS NOT NULL DROP TABLE dbo.GROUP_PERMISSIONS;
CREATE TABLE dbo.GROUP_PERMISSIONS (
    PERM_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME   VARCHAR(100) NOT NULL,     -- references BUSINESS_GROUPS or some group
    TARGET_TABLE VARCHAR(200) NOT NULL
    -- Optionally FOREIGN KEY (GROUP_NAME) REFERENCES BUSINESS_GROUPS(GROUP_NAME)
);
-------------------------------------------
-- 7) BUSINESS_GROUP_APPROVERS
-------------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUP_APPROVERS','U') IS NOT NULL DROP TABLE dbo.BUSINESS_GROUP_APPROVERS;
CREATE TABLE dbo.BUSINESS_GROUP_APPROVERS (
    APPROVER_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME  VARCHAR(100) NOT NULL,  -- references BUSINESS_GROUPS(GROUP_NAME)
    USERNAME    VARCHAR(100) NOT NULL
);
-------------------------------------------
-- 8) BRM_RULES
-------------------------------------------
IF OBJECT_ID('dbo.BRM_RULES','U') IS NOT NULL DROP TABLE dbo.BRM_RULES;
CREATE TABLE dbo.BRM_RULES (
    RULE_ID                INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_ID               INT NULL,    -- references BRM_RULE_GROUPS(GROUP_ID)
    PARENT_RULE_ID         INT NULL,    -- self-reference
    RULE_TYPE_ID           INT NULL,    -- references BRM_RULE_TYPES
    RULE_NAME              VARCHAR(200) NOT NULL,
    RULE_SQL               VARCHAR(MAX) NULL,
    EFFECTIVE_START_DATE   DATETIME NULL,
    EFFECTIVE_END_DATE     DATETIME NULL,
    STATUS                 VARCHAR(50) NOT NULL DEFAULT('INACTIVE'),
    VERSION                INT NOT NULL DEFAULT(1),
    CREATED_BY             VARCHAR(100) NULL,
    DESCRIPTION            VARCHAR(MAX) NULL,
    OPERATION_TYPE         VARCHAR(50) NULL,
    BUSINESS_JUSTIFICATION VARCHAR(MAX) NULL,
    CREATED_TIMESTAMP      DATETIME NOT NULL DEFAULT(GETDATE()),
    UPDATED_BY             VARCHAR(100) NULL,
    OWNER_GROUP            VARCHAR(100) NULL,  -- e.g. 'BG1'
    APPROVAL_STATUS        VARCHAR(50) NULL,   -- e.g. 'APPROVAL_IN_PROGRESS','APPROVED','REJECTED'
    IS_GLOBAL              BIT NOT NULL DEFAULT(0),
    CRITICAL_RULE          BIT NOT NULL DEFAULT(0),
    CRITICAL_SCOPE         VARCHAR(50) NOT NULL DEFAULT('NONE'),
    CDC_TYPE               VARCHAR(50) NOT NULL DEFAULT('NONE'),
    LIFECYCLE_STATE        VARCHAR(50) NOT NULL DEFAULT('DRAFT'),
    DECISION_TABLE_ID      INT NULL,  -- references DECISION_TABLES if used
    IS_ENCRYPTED           BIT NOT NULL DEFAULT(0),
    CLUSTER_NAME           VARCHAR(100) NULL
    -- Optionally add FOREIGN KEY constraints if desired
    -- FOREIGN KEY (GROUP_ID) REFERENCES BRM_RULE_GROUPS(GROUP_ID)
    -- FOREIGN KEY (RULE_TYPE_ID) REFERENCES BRM_RULE_TYPES(RULE_TYPE_ID)
);
-------------------------------------------
-- 9) BRM_RULE_TABLE_DEPENDENCIES
-------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES','U') IS NOT NULL DROP TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES;
CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID       INT NOT NULL,   -- references BRM_RULES(RULE_ID)
    DATABASE_NAME VARCHAR(100) NULL,
    TABLE_NAME    VARCHAR(200) NOT NULL,
    COLUMN_NAME   VARCHAR(200) NULL,
    COLUMN_OP     VARCHAR(10)  NULL  -- e.g. 'READ','WRITE'
);
-------------------------------------------
-- 10) BRM_RULE_APPROVALS
-------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS','U') IS NOT NULL DROP TABLE dbo.BRM_RULE_APPROVALS;
CREATE TABLE dbo.BRM_RULE_APPROVALS (
    APPROVAL_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID           INT NOT NULL,  -- references BRM_RULES
    GROUP_NAME        VARCHAR(100) NOT NULL, -- e.g. 'BG1','FINAL'
    USERNAME          VARCHAR(100) NOT NULL, -- from USERS or free text
    APPROVED_FLAG     INT NOT NULL DEFAULT(0), 
    APPROVED_TIMESTAMP DATETIME NULL,
    APPROVAL_STAGE    INT NOT NULL
);
-------------------------------------------
-- 11) BRM_GLOBAL_CRITICAL_LINKS
-------------------------------------------
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS','U') IS NOT NULL DROP TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS;
CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS (
    GCR_RULE_ID    INT NOT NULL, -- references a "global/critical" rule
    TARGET_RULE_ID INT NOT NULL  -- references the dependent rule
    -- Could add a composite PK or unique index if desired
);
-------------------------------------------
-- 12) RULE_CONFLICTS
-------------------------------------------
IF OBJECT_ID('dbo.RULE_CONFLICTS','U') IS NOT NULL DROP TABLE dbo.RULE_CONFLICTS;
CREATE TABLE dbo.RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID1    INT NOT NULL, -- references BRM_RULES
    RULE_ID2    INT NOT NULL, -- references BRM_RULES
    PRIORITY    INT NOT NULL
);
-------------------------------------------
-- 13) COMPOSITE_RULES
-------------------------------------------
IF OBJECT_ID('dbo.COMPOSITE_RULES','U') IS NOT NULL DROP TABLE dbo.COMPOSITE_RULES;
CREATE TABLE dbo.COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CRULE_NAME        VARCHAR(200) NOT NULL,
    LOGIC_EXPR        VARCHAR(MAX) NULL,
    ACTION_ON_PASS    VARCHAR(200) NULL
);
-------------------------------------------
-- 14) RULE_EXECUTION_LOGS
-------------------------------------------
IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS','U') IS NOT NULL DROP TABLE dbo.RULE_EXECUTION_LOGS;
CREATE TABLE dbo.RULE_EXECUTION_LOGS (
    LOG_ID                INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID               INT NOT NULL,   -- references BRM_RULES
    EXECUTION_TIMESTAMP   DATETIME NOT NULL DEFAULT(GETDATE()),
    PASS_FLAG             INT NOT NULL,   -- 1=pass,0=fail, or store as BIT
    MESSAGE               VARCHAR(2000) NULL,
    RECORD_COUNT          INT NULL,
    EXECUTION_TIME_MS     FLOAT NULL      -- or DECIMAL(12,2), etc.
);
-------------------------------------------
-- 15) RULE_SCHEDULES
-------------------------------------------
IF OBJECT_ID('dbo.RULE_SCHEDULES','U') IS NOT NULL DROP TABLE dbo.RULE_SCHEDULES;
CREATE TABLE dbo.RULE_SCHEDULES (
    SCHEDULE_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID          INT NOT NULL,
    SCHEDULE_TIME    DATETIME NOT NULL,
    STATUS           VARCHAR(50) NOT NULL DEFAULT('Scheduled'),
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
-------------------------------------------
-- 16) DECISION_TABLES
-------------------------------------------
IF OBJECT_ID('dbo.DECISION_TABLES','U') IS NOT NULL DROP TABLE dbo.DECISION_TABLES;
CREATE TABLE dbo.DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    TABLE_NAME        VARCHAR(200) NOT NULL,
    DESCRIPTION       VARCHAR(MAX) NULL
);
-------------------------------------------
-- 17) DATA_VALIDATIONS
-------------------------------------------
IF OBJECT_ID('dbo.DATA_VALIDATIONS','U') IS NOT NULL DROP TABLE dbo.DATA_VALIDATIONS;
CREATE TABLE dbo.DATA_VALIDATIONS (
    VALIDATION_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    TABLE_NAME      VARCHAR(200) NOT NULL,
    COLUMN_NAME     VARCHAR(200) NOT NULL,
    VALIDATION_TYPE VARCHAR(50)  NOT NULL,  -- e.g. 'NOT NULL','RANGE'
    PARAMS          VARCHAR(500) NULL
);
-------------------------------------------
-- 18) RULE_TAGS
-------------------------------------------
IF OBJECT_ID('dbo.RULE_TAGS','U') IS NOT NULL DROP TABLE dbo.RULE_TAGS;
CREATE TABLE dbo.RULE_TAGS (
    TAG_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID  INT NOT NULL,      -- references BRM_RULES
    TAG_NAME VARCHAR(100) NOT NULL
);
-------------------------------------------
-- 19) RULE_SNAPSHOTS
-------------------------------------------
IF OBJECT_ID('dbo.RULE_SNAPSHOTS','U') IS NOT NULL DROP TABLE dbo.RULE_SNAPSHOTS;
CREATE TABLE dbo.RULE_SNAPSHOTS (
    SNAPSHOT_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    SNAPSHOT_NAME    VARCHAR(200) NOT NULL,
    CREATED_BY       VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    SNAPSHOT_JSON    VARCHAR(MAX) NOT NULL
);
-------------------------------------------
-- 20) BRM_CUSTOM_RULE_GROUPS
-------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS','U') IS NOT NULL DROP TABLE dbo.BRM_CUSTOM_RULE_GROUPS;
CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CUSTOM_GROUP_NAME     VARCHAR(200) NOT NULL,
    OWNER_BUSINESS_GROUP  VARCHAR(100) NULL,
    CREATED_BY            VARCHAR(100) NULL,
    CREATED_TIMESTAMP     DATETIME NOT NULL DEFAULT(GETDATE())
);
-------------------------------------------
-- 21) BRM_CUSTOM_GROUP_MEMBERS
-------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS','U') IS NOT NULL DROP TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS;
CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS (
    CUST_GROUP_MEMBER_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CUSTOM_GROUP_ID      INT NOT NULL,   -- references BRM_CUSTOM_RULE_GROUPS
    RULE_ID              INT NOT NULL    -- references BRM_RULES
);
-------------------------------------------
-- 22) BRM_CUSTOM_GROUP_BACKUPS
-------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_BACKUPS','U') IS NOT NULL DROP TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS;
CREATE TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS (
    CG_BACKUP_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,   -- references BRM_CUSTOM_RULE_GROUPS
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    BACKUP_VERSION   INT NOT NULL,
    BACKUP_JSON      VARCHAR(MAX) NOT NULL
);
-------------------------------------------
-- 23) SECURE_FILES
-------------------------------------------
IF OBJECT_ID('dbo.SECURE_FILES','U') IS NOT NULL DROP TABLE dbo.SECURE_FILES;
CREATE TABLE dbo.SECURE_FILES (
    SEC_ID        INT NOT NULL PRIMARY KEY,
    SEC_CONTENT   VARCHAR(MAX) NOT NULL,
    SAVED_BY      VARCHAR(100) NOT NULL,
    SAVED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
-------------------------------------------
-- 24) BRM_COLUMN_MAPPING (lightly used)
-------------------------------------------
IF OBJECT_ID('dbo.BRM_COLUMN_MAPPING','U') IS NOT NULL DROP TABLE dbo.BRM_COLUMN_MAPPING;
CREATE TABLE dbo.BRM_COLUMN_MAPPING (
    COLUMN_MAPPING_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    SOURCE_RULE_ID    INT NOT NULL,  -- references BRM_RULES
    RULE_ID           INT NOT NULL   -- references BRM_RULES
    -- Add any additional columns as needed
);
-------------------------------------------
-- 25) BRM_RULE_LINEAGE (lightly used)
-------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_LINEAGE','U') IS NOT NULL DROP TABLE dbo.BRM_RULE_LINEAGE;
CREATE TABLE dbo.BRM_RULE_LINEAGE (
    LINEAGE_ID     INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID        INT NOT NULL, -- references BRM_RULES
    PARENT_RULE_ID INT NULL
);
-------------------------------------------
-- 26) BRM_GROUP_BACKUPS (lightly used)
-------------------------------------------
IF OBJECT_ID('dbo.BRM_GROUP_BACKUPS','U') IS NOT NULL DROP TABLE dbo.BRM_GROUP_BACKUPS;
CREATE TABLE dbo.BRM_GROUP_BACKUPS (
    GB_ID           INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME      VARCHAR(100) NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    BACKUP_JSON     VARCHAR(MAX) NOT NULL
);

