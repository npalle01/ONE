-- brm_tool_tables.sql
-- All table creation statements for the BRM Tool, no direct REFERENCES constraints.

-------------------------------------
-- 1) USERS
-------------------------------------
IF OBJECT_ID('USERS','U') IS NOT NULL
  DROP TABLE USERS;
GO
CREATE TABLE USERS (
  USER_ID INT IDENTITY(1,1) PRIMARY KEY,
  USERNAME VARCHAR(50) NOT NULL,
  PASSWORD VARCHAR(100) NOT NULL,
  USER_GROUP VARCHAR(50) NOT NULL
);

-------------------------------------
-- 2) BUSINESS_GROUPS
-------------------------------------
IF OBJECT_ID('BUSINESS_GROUPS','U') IS NOT NULL
  DROP TABLE BUSINESS_GROUPS;
GO
CREATE TABLE BUSINESS_GROUPS (
  GROUP_NAME VARCHAR(100) PRIMARY KEY,  -- or separate GROUP_ID int identity
  DESCRIPTION VARCHAR(200),
  EMAIL VARCHAR(100),
  IS_OWNER_GROUP BIT DEFAULT 0
);

-------------------------------------
-- 3) GROUP_PERMISSIONS
-------------------------------------
IF OBJECT_ID('GROUP_PERMISSIONS','U') IS NOT NULL
  DROP TABLE GROUP_PERMISSIONS;
GO
CREATE TABLE GROUP_PERMISSIONS (
  PERM_ID INT IDENTITY(1,1) PRIMARY KEY,
  GROUP_NAME VARCHAR(100) NOT NULL,
  TARGET_TABLE VARCHAR(100) NOT NULL
  -- no foreign key reference to BUSINESS_GROUPS
);

-------------------------------------
-- 4) BUSINESS_GROUP_APPROVERS
-------------------------------------
IF OBJECT_ID('BUSINESS_GROUP_APPROVERS','U') IS NOT NULL
  DROP TABLE BUSINESS_GROUP_APPROVERS;
GO
CREATE TABLE BUSINESS_GROUP_APPROVERS (
  APPROVER_ID INT IDENTITY(1,1) PRIMARY KEY,
  GROUP_NAME VARCHAR(100) NOT NULL,
  USERNAME VARCHAR(50) NOT NULL
);

-------------------------------------
-- 5) BRM_RULE_GROUPS
-------------------------------------
IF OBJECT_ID('BRM_RULE_GROUPS','U') IS NOT NULL
  DROP TABLE BRM_RULE_GROUPS;
GO
CREATE TABLE BRM_RULE_GROUPS (
  GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
  GROUP_NAME VARCHAR(100) NOT NULL,
  DESCRIPTION VARCHAR(200),
  EMAIL VARCHAR(100)
);

-------------------------------------
-- 6) BRM_RULES
-------------------------------------
IF OBJECT_ID('BRM_RULES','U') IS NOT NULL
  DROP TABLE BRM_RULES;
GO
CREATE TABLE BRM_RULES (
  RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
  GROUP_ID INT NULL,                -- references BRM_RULE_GROUPS(GROUP_ID) if wanted
  PARENT_RULE_ID INT NULL,          -- references BRM_RULES(RULE_ID) if wanted
  RULE_TYPE_ID INT NULL,            -- references BRM_RULE_TYPES
  RULE_NAME VARCHAR(150) NOT NULL,
  RULE_SQL VARCHAR(MAX) NULL,
  EFFECTIVE_START_DATE DATETIME NULL,
  EFFECTIVE_END_DATE DATETIME NULL,
  STATUS VARCHAR(50) NOT NULL DEFAULT 'INACTIVE',
  VERSION INT NOT NULL DEFAULT 1,
  CREATED_BY VARCHAR(50) NULL,
  DESCRIPTION VARCHAR(500) NULL,
  OPERATION_TYPE VARCHAR(20) NULL,   -- e.g. SELECT,INSERT,UPDATE,DELETE,DECISION_TABLE
  BUSINESS_JUSTIFICATION VARCHAR(500) NULL,
  CREATED_TIMESTAMP DATETIME NULL,
  UPDATED_BY VARCHAR(50) NULL,
  OWNER_GROUP VARCHAR(100) NOT NULL DEFAULT 'BG1',
  CLUSTER_NAME VARCHAR(100) NULL,
  APPROVAL_STATUS VARCHAR(50) NULL,
  IS_GLOBAL BIT NOT NULL DEFAULT 0,
  CRITICAL_RULE BIT NOT NULL DEFAULT 0,
  CRITICAL_SCOPE VARCHAR(20) NOT NULL DEFAULT 'NONE',   -- NONE, GROUP, CLUSTER, GLOBAL
  CDC_TYPE VARCHAR(20) NOT NULL DEFAULT 'NONE',         -- FULL_LOAD, UPSERT, ...
  LIFECYCLE_STATE VARCHAR(50) NOT NULL DEFAULT 'DRAFT',
  ENCRYPTED_FILE_PATH VARCHAR(300) NULL,
  LOCK_STATUS VARCHAR(20) NULL,      -- 'LOCKED' or 'UNLOCKED' (optional)
  PERF_MS_AVG FLOAT NULL,            -- for quick display in dashboards
  EXECUTION_STATE VARCHAR(20) NULL   -- 'PASS','FAIL','IN_PROGRESS', etc.
);

-------------------------------------
-- 7) BRM_RULE_TABLE_DEPENDENCIES
-------------------------------------
IF OBJECT_ID('BRM_RULE_TABLE_DEPENDENCIES','U') IS NOT NULL
  DROP TABLE BRM_RULE_TABLE_DEPENDENCIES;
GO
CREATE TABLE BRM_RULE_TABLE_DEPENDENCIES (
  DEPENDENCY_ID INT IDENTITY(1,1) PRIMARY KEY,
  RULE_ID INT NOT NULL,
  DATABASE_NAME VARCHAR(100),
  TABLE_NAME VARCHAR(100),
  COLUMN_NAME VARCHAR(100),
  COLUMN_OP VARCHAR(10) -- READ or WRITE
);

-------------------------------------
-- 8) BRM_RULE_APPROVALS
-------------------------------------
IF OBJECT_ID('BRM_RULE_APPROVALS','U') IS NOT NULL
  DROP TABLE BRM_RULE_APPROVALS;
GO
CREATE TABLE BRM_RULE_APPROVALS (
  APPROVAL_ID INT IDENTITY(1,1) PRIMARY KEY,
  RULE_ID INT NOT NULL,
  GROUP_NAME VARCHAR(100),
  USERNAME VARCHAR(50),
  APPROVED_FLAG INT NOT NULL DEFAULT 0,  -- 0=>pending,1=>approved,2=>rejected
  APPROVED_TIMESTAMP DATETIME NULL,
  APPROVAL_STAGE INT NOT NULL DEFAULT 1
);

-------------------------------------
-- 9) BRM_RULE_LOCKS
-------------------------------------
IF OBJECT_ID('BRM_RULE_LOCKS','U') IS NOT NULL
  DROP TABLE BRM_RULE_LOCKS;
GO
CREATE TABLE BRM_RULE_LOCKS (
  LOCK_ID INT IDENTITY(1,1) PRIMARY KEY,
  RULE_ID INT NOT NULL,
  LOCKED_BY VARCHAR(50) NULL,
  LOCK_TIMESTAMP DATETIME NULL,
  EXPIRY_TIMESTAMP DATETIME NULL,
  FORCE_LOCK BIT NOT NULL DEFAULT 0,
  ACTIVE_LOCK BIT NOT NULL DEFAULT 1
);

-------------------------------------
-- 10) RULE_SCHEDULES
-------------------------------------
IF OBJECT_ID('RULE_SCHEDULES','U') IS NOT NULL
  DROP TABLE RULE_SCHEDULES;
GO
CREATE TABLE RULE_SCHEDULES (
  SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
  RULE_ID INT NOT NULL,
  SCHEDULE_TIME DATETIME NOT NULL,
  STATUS VARCHAR(50) NOT NULL DEFAULT 'Scheduled',
  CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
  VALIDATION_FLAG BIT NOT NULL DEFAULT 0
);

-------------------------------------
-- 11) BRM_AUDIT_LOG
-------------------------------------
IF OBJECT_ID('BRM_AUDIT_LOG','U') IS NOT NULL
  DROP TABLE BRM_AUDIT_LOG;
GO
CREATE TABLE BRM_AUDIT_LOG (
  AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
  ACTION VARCHAR(50),
  TABLE_NAME VARCHAR(100),
  RECORD_ID VARCHAR(50),
  ACTION_BY VARCHAR(50),
  OLD_DATA VARCHAR(MAX),
  NEW_DATA VARCHAR(MAX),
  ACTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-------------------------------------
-- 12) RULE_EXECUTION_LOGS
-------------------------------------
IF OBJECT_ID('RULE_EXECUTION_LOGS','U') IS NOT NULL
  DROP TABLE RULE_EXECUTION_LOGS;
GO
CREATE TABLE RULE_EXECUTION_LOGS (
  LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
  RULE_ID INT NOT NULL,
  EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
  PASS_FLAG BIT NOT NULL DEFAULT 0,
  MESSAGE VARCHAR(500) NULL,
  RECORD_COUNT INT NOT NULL DEFAULT 0,
  EXECUTION_TIME_MS INT NULL
);

-------------------------------------
-- 13) DECISION_TABLES
-------------------------------------
IF OBJECT_ID('DECISION_TABLES','U') IS NOT NULL
  DROP TABLE DECISION_TABLES;
GO
CREATE TABLE DECISION_TABLES (
  DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
  TABLE_NAME VARCHAR(150) NOT NULL,
  DESCRIPTION VARCHAR(500) NULL,
  DECISION_QUERY VARCHAR(MAX) NULL
);

-------------------------------------
-- 14) RULE_CONFLICTS
-------------------------------------
IF OBJECT_ID('RULE_CONFLICTS','U') IS NOT NULL
  DROP TABLE RULE_CONFLICTS;
GO
CREATE TABLE RULE_CONFLICTS (
  CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
  RULE_ID1 INT NOT NULL,
  RULE_ID2 INT NOT NULL,
  PRIORITY INT NOT NULL DEFAULT 100
);

-------------------------------------
-- 15) COMPOSITE_RULES
-------------------------------------
IF OBJECT_ID('COMPOSITE_RULES','U') IS NOT NULL
  DROP TABLE COMPOSITE_RULES;
GO
CREATE TABLE COMPOSITE_RULES (
  COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
  CRULE_NAME VARCHAR(150) NOT NULL,
  LOGIC_EXPR VARCHAR(MAX),
  ACTION_ON_PASS VARCHAR(200)
);

-------------------------------------
-- 16) RULE_SNAPSHOTS
-------------------------------------
IF OBJECT_ID('RULE_SNAPSHOTS','U') IS NOT NULL
  DROP TABLE RULE_SNAPSHOTS;
GO
CREATE TABLE RULE_SNAPSHOTS (
  SNAPSHOT_ID INT IDENTITY(1,1) PRIMARY KEY,
  SNAPSHOT_NAME VARCHAR(150),
  CREATED_BY VARCHAR(50),
  CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
  SNAPSHOT_JSON VARCHAR(MAX)
);

-------------------------------------
-- 17) RULE_TAGS
-------------------------------------
IF OBJECT_ID('RULE_TAGS','U') IS NOT NULL
  DROP TABLE RULE_TAGS;
GO
CREATE TABLE RULE_TAGS (
  TAG_ID INT IDENTITY(1,1) PRIMARY KEY,
  RULE_ID INT NOT NULL,
  TAG_NAME VARCHAR(100) NOT NULL
);

-------------------------------------
-- 18) DATA_VALIDATIONS
-------------------------------------
IF OBJECT_ID('DATA_VALIDATIONS','U') IS NOT NULL
  DROP TABLE DATA_VALIDATIONS;
GO
CREATE TABLE DATA_VALIDATIONS (
  VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
  TABLE_NAME VARCHAR(150) NOT NULL,
  COLUMN_NAME VARCHAR(150) NOT NULL,
  VALIDATION_TYPE VARCHAR(50) NOT NULL,  -- e.g. NOT NULL, RANGE, REGEX
  PARAMS VARCHAR(300) NULL
);

-------------------------------------
-- 19) DATA_VALIDATION_LOGS
-------------------------------------
IF OBJECT_ID('DATA_VALIDATION_LOGS','U') IS NOT NULL
  DROP TABLE DATA_VALIDATION_LOGS;
GO
CREATE TABLE DATA_VALIDATION_LOGS (
  VALIDATION_LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
  DATA_VALIDATION_ID INT NOT NULL,
  TABLE_NAME VARCHAR(150),
  COLUMN_NAME VARCHAR(150),
  VALIDATION_TYPE VARCHAR(50),
  PARAMS VARCHAR(300),
  RESULT_FLAG VARCHAR(10),  -- PASS, FAIL
  DETAILS VARCHAR(500),
  VALIDATION_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-------------------------------------
-- 20) SIMULATION_LOGS
-------------------------------------
IF OBJECT_ID('SIMULATION_LOGS','U') IS NOT NULL
  DROP TABLE SIMULATION_LOGS;
GO
CREATE TABLE SIMULATION_LOGS (
  SIMULATION_ID INT IDENTITY(1,1) PRIMARY KEY,
  RULE_ID INT NOT NULL,
  EXEC_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
  SUCCESS_FLAG BIT NOT NULL DEFAULT 0,
  MESSAGE VARCHAR(500) NULL,
  RECORD_COUNT INT NOT NULL DEFAULT 0
);

-------------------------------------
-- 21) BRM_CUSTOM_RULE_GROUPS
-------------------------------------
IF OBJECT_ID('BRM_CUSTOM_RULE_GROUPS','U') IS NOT NULL
  DROP TABLE BRM_CUSTOM_RULE_GROUPS;
GO
CREATE TABLE BRM_CUSTOM_RULE_GROUPS (
  CUSTOM_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
  CUSTOM_GROUP_NAME VARCHAR(150) NOT NULL,
  OWNER_BUSINESS_GROUP VARCHAR(100) NOT NULL DEFAULT 'BG1',
  CREATED_BY VARCHAR(50) NULL,
  CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-------------------------------------
-- 22) BRM_CUSTOM_GROUP_MEMBERS
-------------------------------------
IF OBJECT_ID('BRM_CUSTOM_GROUP_MEMBERS','U') IS NOT NULL
  DROP TABLE BRM_CUSTOM_GROUP_MEMBERS;
GO
CREATE TABLE BRM_CUSTOM_GROUP_MEMBERS (
  MEMBER_ID INT IDENTITY(1,1) PRIMARY KEY,
  CUSTOM_GROUP_ID INT NOT NULL,
  RULE_ID INT NOT NULL
);

-------------------------------------
-- 23) BRM_CUSTOM_GROUP_BACKUPS
-------------------------------------
IF OBJECT_ID('BRM_CUSTOM_GROUP_BACKUPS','U') IS NOT NULL
  DROP TABLE BRM_CUSTOM_GROUP_BACKUPS;
GO
CREATE TABLE BRM_CUSTOM_GROUP_BACKUPS (
  BACKUP_ID INT IDENTITY(1,1) PRIMARY KEY,
  CUSTOM_GROUP_ID INT NOT NULL,
  BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
  BACKUP_VERSION INT NOT NULL,
  BACKUP_JSON VARCHAR(MAX)
);

-------------------------------------
-- 24) BRM_GLOBAL_CRITICAL_LINKS
-------------------------------------
IF OBJECT_ID('BRM_GLOBAL_CRITICAL_LINKS','U') IS NOT NULL
  DROP TABLE BRM_GLOBAL_CRITICAL_LINKS;
GO
CREATE TABLE BRM_GLOBAL_CRITICAL_LINKS (
  LINK_ID INT IDENTITY(1,1) PRIMARY KEY,
  GCR_RULE_ID INT NOT NULL,
  TARGET_RULE_ID INT NOT NULL
);

-------------------------------------
-- 25) RULE_PERF_STATS
-------------------------------------
IF OBJECT_ID('RULE_PERF_STATS','U') IS NOT NULL
  DROP TABLE RULE_PERF_STATS;
GO
CREATE TABLE RULE_PERF_STATS (
  STATS_ID INT IDENTITY(1,1) PRIMARY KEY,
  RULE_ID INT NOT NULL,
  DATE_KEY CHAR(8) NOT NULL,  -- e.g. YYYYMMDD
  AVG_TIME_MS FLOAT NOT NULL DEFAULT 0,
  MAX_TIME_MS FLOAT NOT NULL DEFAULT 0,
  RUN_COUNT INT NOT NULL DEFAULT 0
);

-------------------------------------
-- 26) BRM_DEFECT_LOGS
-------------------------------------
IF OBJECT_ID('BRM_DEFECT_LOGS','U') IS NOT NULL
  DROP TABLE BRM_DEFECT_LOGS;
GO
CREATE TABLE BRM_DEFECT_LOGS (
  DEFECT_ID INT IDENTITY(1,1) PRIMARY KEY,
  RULE_ID INT NULL,
  DESCRIPTION VARCHAR(500) NOT NULL,
  SEVERITY VARCHAR(20) NOT NULL DEFAULT 'Low',
  REPORTER VARCHAR(50) NOT NULL,
  STATUS VARCHAR(20) NOT NULL DEFAULT 'Open',
  RESOLUTION VARCHAR(500) NULL,
  TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-------------------------------------
-- 27) BRM_PIPELINES
-------------------------------------
IF OBJECT_ID('BRM_PIPELINES','U') IS NOT NULL
  DROP TABLE BRM_PIPELINES;
GO
CREATE TABLE BRM_PIPELINES (
  PIPELINE_ID INT IDENTITY(1,1) PRIMARY KEY,
  NAME VARCHAR(150) NOT NULL,
  DESCRIPTION VARCHAR(500) NULL,
  CREATED_BY VARCHAR(50) NULL,
  CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE(),
  STATUS VARCHAR(50) NOT NULL DEFAULT 'Draft'
);

-------------------------------------
-- 28) BRM_PIPELINE_TASKS
-------------------------------------
IF OBJECT_ID('BRM_PIPELINE_TASKS','U') IS NOT NULL
  DROP TABLE BRM_PIPELINE_TASKS;
GO
CREATE TABLE BRM_PIPELINE_TASKS (
  TASK_ID INT IDENTITY(1,1) PRIMARY KEY,
  PIPELINE_ID INT NOT NULL,
  TASK_NAME VARCHAR(150) NOT NULL,
  TASK_TYPE VARCHAR(50) NOT NULL,   -- RULE_BFS, VALIDATION, EXTERNAL, WAIT
  PARAMS VARCHAR(MAX) NULL,         -- JSON
  DEPENDS_ON VARCHAR(200) NULL,     -- e.g. "1,2"
  STATUS VARCHAR(50) NOT NULL DEFAULT 'Draft',
  CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-------------------------------------
-- 29) BRM_PIPELINE_TASK_RUNS
-------------------------------------
IF OBJECT_ID('BRM_PIPELINE_TASK_RUNS','U') IS NOT NULL
  DROP TABLE BRM_PIPELINE_TASK_RUNS;
GO
CREATE TABLE BRM_PIPELINE_TASK_RUNS (
  TASK_RUN_ID INT IDENTITY(1,1) PRIMARY KEY,
  TASK_ID INT NOT NULL,
  SUCCESS_FLAG BIT NOT NULL DEFAULT 0,
  MESSAGE VARCHAR(500) NULL,
  RUN_TIMESTAMP DATETIME NOT NULL DEFAULT GETDATE()
);

-- End of brm_tool_tables.sql