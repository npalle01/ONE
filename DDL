-- ======================================================
-- BRM TOOL DATABASE SCHEMA CREATION SCRIPT
-- ======================================================

-- 1. BRM_RULES
CREATE TABLE BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_ID INT,
    PARENT_RULE_ID INT NULL,
    RULE_TYPE_ID INT,
    RULE_NAME VARCHAR(255) NOT NULL,
    RULE_SQL TEXT,
    EFFECTIVE_START_DATE DATETIME,
    EFFECTIVE_END_DATE DATETIME,
    STATUS VARCHAR(50),
    VERSION INT DEFAULT 1,
    CREATED_BY VARCHAR(100),
    DESCRIPTION VARCHAR(1000),
    OPERATION_TYPE VARCHAR(50),
    BUSINESS_JUSTIFICATION VARCHAR(500),
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE(),
    UPDATED_BY VARCHAR(100) NULL,
    OWNER_GROUP VARCHAR(100),
    CLUSTER_NAME VARCHAR(100),
    APPROVAL_STATUS VARCHAR(50),
    IS_GLOBAL BIT DEFAULT 0,
    CRITICAL_RULE BIT DEFAULT 0,
    CRITICAL_SCOPE VARCHAR(50) DEFAULT 'NONE',
    CDC_TYPE VARCHAR(50) DEFAULT 'NONE',
    LIFECYCLE_STATE VARCHAR(50),
    LOCK_STATUS VARCHAR(50) DEFAULT 'UNLOCKED',
    LOCKED_BY VARCHAR(100) NULL,
    LOCKED_AT DATETIME NULL
);

-- 2. BRM_RULE_LOCKS
CREATE TABLE BRM_RULE_LOCKS (
    LOCK_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    LOCKED_BY VARCHAR(100),
    LOCK_TIMESTAMP DATETIME DEFAULT GETDATE(),
    EXPIRY_TIMESTAMP DATETIME,
    FORCE_LOCK BIT DEFAULT 0,
    ACTIVE_LOCK BIT DEFAULT 1
);

-- 3. BRM_AUDIT_LOG
CREATE TABLE BRM_AUDIT_LOG (
    AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ACTION VARCHAR(50),
    TABLE_NAME VARCHAR(255),
    RECORD_ID VARCHAR(50) NULL,
    ACTION_BY VARCHAR(100),
    OLD_DATA TEXT NULL,
    NEW_DATA TEXT NULL,
    ACTION_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- 4. BRM_RULE_APPROVALS
CREATE TABLE BRM_RULE_APPROVALS (
    APPROVAL_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    GROUP_NAME VARCHAR(100),
    USERNAME VARCHAR(100),
    APPROVED_FLAG INT DEFAULT 0, -- 0: pending, 1: approved, 2: rejected
    APPROVED_TIMESTAMP DATETIME NULL,
    APPROVAL_STAGE INT
);

-- 5. BRM_RULE_TABLE_DEPENDENCIES
CREATE TABLE BRM_RULE_TABLE_DEPENDENCIES (
    DEP_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    DATABASE_NAME VARCHAR(100),
    TABLE_NAME VARCHAR(100),
    COLUMN_NAME VARCHAR(100),
    COLUMN_OP VARCHAR(50)
);

-- 6. BRM_GLOBAL_CRITICAL_LINKS
CREATE TABLE BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);

-- 7. RULE_CONFLICTS
CREATE TABLE RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1 INT NOT NULL,
    RULE_ID2 INT NOT NULL,
    PRIORITY INT
);

-- 8. COMPOSITE_RULES
CREATE TABLE COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    LOGIC_EXPR TEXT
);

-- 9. BRM_RULE_EXECUTION_LOGS
CREATE TABLE BRM_RULE_EXECUTION_LOGS (
    EXEC_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME DEFAULT GETDATE(),
    PASS_FLAG BIT,
    MESSAGE VARCHAR(500),
    RECORD_COUNT INT,
    EXECUTION_TIME_MS INT
);

-- 10. DATA_VALIDATIONS
CREATE TABLE DATA_VALIDATIONS (
    VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NOT NULL,
    VALIDATION_TYPE VARCHAR(50) NOT NULL,
    PARAMS VARCHAR(100) NULL,
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- 11. DATA_VALIDATION_LOGS
CREATE TABLE DATA_VALIDATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID INT NOT NULL,
    RESULT_FLAG VARCHAR(10),
    DETAILS VARCHAR(500),
    VALIDATION_TIMESTAMP DATETIME DEFAULT GETDATE(),
    TABLE_NAME VARCHAR(100),
    COLUMN_NAME VARCHAR(100)
);

-- 12. BRM_CUSTOM_RULE_GROUPS
CREATE TABLE BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_NAME VARCHAR(255) NOT NULL,
    OWNER_BUSINESS_GROUP VARCHAR(100),
    CREATED_BY VARCHAR(100),
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- 13. BRM_CUSTOM_GROUP_MEMBERS
CREATE TABLE BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID INT NOT NULL
);

-- 14. BRM_CUSTOM_GROUP_BACKUPS
CREATE TABLE BRM_CUSTOM_GROUP_BACKUPS (
    BACKUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    BACKUP_TIMESTAMP DATETIME DEFAULT GETDATE(),
    BACKUP_VERSION INT,
    BACKUP_JSON TEXT
);

-- 15. BUSINESS_GROUP_APPROVERS
CREATE TABLE BUSINESS_GROUP_APPROVERS (
    APPROVER_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    USERNAME VARCHAR(100) NOT NULL
);

-- 16. GROUP_PERMISSIONS
CREATE TABLE GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    TARGET_TABLE VARCHAR(100) NOT NULL
);

-- 17. RULE_SCHEDULES
CREATE TABLE RULE_SCHEDULES (
    SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SCHEDULE_TIME DATETIME NOT NULL,
    STATUS VARCHAR(50),
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE(),
    VALIDATION_FLAG BIT DEFAULT 0
);

-- 18. DECISION_TABLES
CREATE TABLE DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(500) NULL,
    DECISION_QUERY TEXT,
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE(),
    UPDATED_TIMESTAMP DATETIME NULL
);

-- 19. DECISION_TABLE_EXEC_LOGS
CREATE TABLE DECISION_TABLE_EXEC_LOGS (
    EXEC_ID INT IDENTITY(1,1) PRIMARY KEY,
    DECISION_TABLE_ID INT NOT NULL,
    EXEC_TIMESTAMP DATETIME DEFAULT GETDATE(),
    PASS_FLAG BIT,
    MESSAGE VARCHAR(500),
    RECORD_COUNT INT,
    EXECUTION_TIME_MS INT,
    DRY_RUN BIT DEFAULT 1
);

-- 20. BRM_ACTIVITY_LOG
CREATE TABLE BRM_ACTIVITY_LOG (
    ACTIVITY_ID INT IDENTITY(1,1) PRIMARY KEY,
    EVENT_TYPE VARCHAR(50),
    USERNAME VARCHAR(100),
    TIMESTAMP DATETIME DEFAULT GETDATE(),
    DETAILS VARCHAR(MAX),
    RULE_ID INT NULL
);

-- 21. BRM_DEFECT_LOGS
CREATE TABLE BRM_DEFECT_LOGS (
    DEFECT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NULL,
    DESCRIPTION TEXT NOT NULL,
    SEVERITY VARCHAR(50),
    REPORTER VARCHAR(100),
    STATUS VARCHAR(50),
    RESOLUTION TEXT NULL,
    TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- 22. USERS
CREATE TABLE USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME VARCHAR(100) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    USER_GROUP VARCHAR(100) NOT NULL
);

-- 23. BUSINESS_GROUPS
CREATE TABLE BUSINESS_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL UNIQUE,
    DESCRIPTION VARCHAR(500) NULL,
    EMAIL VARCHAR(100) NULL
);

-- 24. BRM_RULE_TYPES
CREATE TABLE BRM_RULE_TYPES (
    RULE_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TYPE_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(500) NULL
);

-- 25. BRM_RULE_GROUPS
CREATE TABLE BRM_RULE_GROUPS (
    RULE_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(500) NULL
);

-- 26. BRM_COLUMN_MAPPING
CREATE TABLE BRM_COLUMN_MAPPING (
    MAPPING_ID INT IDENTITY(1,1) PRIMARY KEY,
    SOURCE_RULE_ID INT,
    RULE_ID INT,
    MAPPED_COLUMN VARCHAR(100)
);

-- 27. BRM_PIPELINES
CREATE TABLE BRM_PIPELINES (
    PIPELINE_ID INT IDENTITY(1,1) PRIMARY KEY,
    PIPELINE_NAME VARCHAR(255) NOT NULL,
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- 28. BRM_PIPELINE_NODES
CREATE TABLE BRM_PIPELINE_NODES (
    NODE_ID INT IDENTITY(1,1) PRIMARY KEY,
    PIPELINE_ID INT NOT NULL,
    NODE_TYPE VARCHAR(50),
    NODE_LABEL VARCHAR(255),
    POS_X FLOAT,
    POS_Y FLOAT
);

-- 29. BRM_PIPELINE_EDGES
CREATE TABLE BRM_PIPELINE_EDGES (
    EDGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    PIPELINE_ID INT NOT NULL,
    SOURCE_NODE_ID INT NOT NULL,
    TARGET_NODE_ID INT NOT NULL,
    CONDITION_LABEL VARCHAR(100) NULL
);

-- 30. BRM_RULE_FORKS
CREATE TABLE BRM_RULE_FORKS (
    FORK_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    FORK_LABEL VARCHAR(100) NOT NULL,
    FORK_STATUS VARCHAR(50) NULL,
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- ======================================================
-- DROP STATEMENTS
-- ======================================================
-- (Drop tables in reverse dependency order if necessary)

DROP TABLE IF EXISTS BRM_RULE_FORKS;
DROP TABLE IF EXISTS BRM_PIPELINE_EDGES;
DROP TABLE IF EXISTS BRM_PIPELINE_NODES;
DROP TABLE IF EXISTS BRM_PIPELINES;
DROP TABLE IF EXISTS BRM_COLUMN_MAPPING;
DROP TABLE IF EXISTS BRM_RULE_GROUPS;
DROP TABLE IF EXISTS BRM_RULE_TYPES;
DROP TABLE IF EXISTS BUSINESS_GROUPS;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS BRM_DEFECT_LOGS;
DROP TABLE IF EXISTS BRM_ACTIVITY_LOG;
DROP TABLE IF EXISTS DECISION_TABLE_EXEC_LOGS;
DROP TABLE IF EXISTS DECISION_TABLES;
DROP TABLE IF EXISTS RULE_SCHEDULES;
DROP TABLE IF EXISTS GROUP_PERMISSIONS;
DROP TABLE IF EXISTS BUSINESS_GROUP_APPROVERS;
DROP TABLE IF EXISTS BRM_CUSTOM_GROUP_BACKUPS;
DROP TABLE IF EXISTS BRM_CUSTOM_GROUP_MEMBERS;
DROP TABLE IF EXISTS BRM_CUSTOM_RULE_GROUPS;
DROP TABLE IF EXISTS DATA_VALIDATION_LOGS;
DROP TABLE IF EXISTS DATA_VALIDATIONS;
DROP TABLE IF EXISTS BRM_RULE_EXECUTION_LOGS;
DROP TABLE IF EXISTS COMPOSITE_RULES;
DROP TABLE IF EXISTS RULE_CONFLICTS;
DROP TABLE IF EXISTS BRM_GLOBAL_CRITICAL_LINKS;
DROP TABLE IF EXISTS BRM_RULE_TABLE_DEPENDENCIES;
DROP TABLE IF EXISTS BRM_RULE_APPROVALS;
DROP TABLE IF EXISTS BRM_AUDIT_LOG;
DROP TABLE IF EXISTS BRM_RULE_LOCKS;
DROP TABLE IF EXISTS BRM_RULES;