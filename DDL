--------------------------------------------------------------------------------
-- 1) Rule Locking
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_LOCKS (
    RULE_ID        INT          NOT NULL,
    LOCKED_BY      VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP DATETIME     NOT NULL,
    CONSTRAINT PK_BRM_RULE_LOCKS PRIMARY KEY (RULE_ID)
);
GO

--------------------------------------------------------------------------------
-- 2) Users
--------------------------------------------------------------------------------
CREATE TABLE dbo.USERS (
    USER_ID    INT           IDENTITY(1,1) NOT NULL,
    USERNAME   VARCHAR(100)  NOT NULL,
    [PASSWORD] VARCHAR(100)  NOT NULL,
    USER_GROUP VARCHAR(50)   NOT NULL,
    CONSTRAINT PK_USERS PRIMARY KEY CLUSTERED (USER_ID)
);
GO

--------------------------------------------------------------------------------
-- 3) Business Groups
--------------------------------------------------------------------------------
CREATE TABLE dbo.BUSINESS_GROUPS (
    GROUP_NAME  VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(200) NULL,
    EMAIL       VARCHAR(200) NULL,
    CONSTRAINT PK_BUSINESS_GROUPS PRIMARY KEY (GROUP_NAME)
);
GO

--------------------------------------------------------------------------------
-- 4) Group Permissions
--------------------------------------------------------------------------------
CREATE TABLE dbo.GROUP_PERMISSIONS (
    GROUP_NAME   VARCHAR(100) NOT NULL,
    TARGET_TABLE VARCHAR(200) NOT NULL,
    CONSTRAINT PK_GROUP_PERMISSIONS 
        PRIMARY KEY (GROUP_NAME, TARGET_TABLE)
);
GO

--------------------------------------------------------------------------------
-- 5) Rule Types
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_TYPES (
    RULE_TYPE_ID   INT           IDENTITY(1,1) NOT NULL,
    RULE_TYPE_NAME VARCHAR(100)  NOT NULL,
    CONSTRAINT PK_BRM_RULE_TYPES PRIMARY KEY CLUSTERED (RULE_TYPE_ID)
);
GO

--------------------------------------------------------------------------------
-- 6) BRM Rule Groups
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_GROUPS (
    GROUP_ID   INT            IDENTITY(1,1) NOT NULL,
    GROUP_NAME VARCHAR(100)   NOT NULL,
    DESCRIPTION VARCHAR(200)  NULL,
    CONSTRAINT PK_BRM_RULE_GROUPS PRIMARY KEY CLUSTERED (GROUP_ID)
);
GO

--------------------------------------------------------------------------------
-- 7) BRM Rules
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULES (
    RULE_ID                INT            IDENTITY(1,1) NOT NULL,
    GROUP_ID               INT            NULL,
    PARENT_RULE_ID         INT            NULL,
    RULE_TYPE_ID           INT            NULL,
    RULE_NAME              VARCHAR(200)   NOT NULL,
    RULE_SQL               VARCHAR(MAX)   NULL,
    EFFECTIVE_START_DATE   DATETIME       NULL,
    EFFECTIVE_END_DATE     DATETIME       NULL,
    STATUS                 VARCHAR(20)    NOT NULL DEFAULT('INACTIVE'),
    VERSION                INT            NOT NULL DEFAULT(1),
    CREATED_BY             VARCHAR(100)   NULL,
    UPDATED_BY             VARCHAR(100)   NULL,
    DESCRIPTION            VARCHAR(1000)  NULL,
    OPERATION_TYPE         VARCHAR(20)    NULL,
    BUSINESS_JUSTIFICATION VARCHAR(1000)  NULL,
    CREATED_TIMESTAMP      DATETIME       NOT NULL DEFAULT(GETDATE()),
    OWNER_GROUP            VARCHAR(100)   NULL,
    CLUSTER_NAME           VARCHAR(100)   NULL,
    APPROVAL_STATUS        VARCHAR(50)    NULL,
    IS_GLOBAL              BIT            NOT NULL DEFAULT(0),
    CRITICAL_RULE          BIT            NOT NULL DEFAULT(0),
    CRITICAL_SCOPE         VARCHAR(20)    NOT NULL DEFAULT('NONE'),
    CDC_TYPE               VARCHAR(20)    NOT NULL DEFAULT('NONE'),
    LIFECYCLE_STATE        VARCHAR(20)    NOT NULL DEFAULT('DRAFT'),
    DECISION_TABLE_ID      INT            NULL,
    CONSTRAINT PK_BRM_RULES PRIMARY KEY CLUSTERED (RULE_ID)
);
GO

--------------------------------------------------------------------------------
-- 8) BRM Rule Table Dependencies
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID  INT            IDENTITY(1,1) NOT NULL,
    RULE_ID        INT            NOT NULL,
    DATABASE_NAME  VARCHAR(100)   NULL,
    TABLE_NAME     VARCHAR(200)   NULL,
    COLUMN_NAME    VARCHAR(200)   NULL,
    COLUMN_OP      VARCHAR(10)    NULL,
    TABLE_STATUS   VARCHAR(20)    NULL,  -- e.g. 'OK' or 'NOT_FOUND'
    CONSTRAINT PK_BRM_RULE_TABLE_DEPENDENCIES PRIMARY KEY CLUSTERED (DEPENDENCY_ID)
);
GO

--------------------------------------------------------------------------------
-- 9) BRM Audit Log
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_AUDIT_LOG (
    AUDIT_ID         INT           IDENTITY(1,1) NOT NULL,
    ACTION           VARCHAR(50)   NOT NULL,
    TABLE_NAME       VARCHAR(100)  NOT NULL,
    RECORD_ID        VARCHAR(50)   NULL,
    ACTION_BY        VARCHAR(100)  NULL,
    OLD_DATA         VARCHAR(MAX)  NULL,
    NEW_DATA         VARCHAR(MAX)  NULL,
    ACTION_TIMESTAMP DATETIME      NOT NULL DEFAULT(GETDATE()),
    CONSTRAINT PK_BRM_AUDIT_LOG PRIMARY KEY CLUSTERED (AUDIT_ID)
);
GO

--------------------------------------------------------------------------------
-- 10) BRM Rule Lineage
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_LINEAGE (
    LINEAGE_ID INT IDENTITY(1,1) NOT NULL,
    SOURCE_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL,
    RELATION_TYPE  VARCHAR(50) NULL,
    CONSTRAINT PK_BRM_RULE_LINEAGE PRIMARY KEY CLUSTERED (LINEAGE_ID)
);
GO

--------------------------------------------------------------------------------
-- 11) BRM Group Backups
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_GROUP_BACKUPS (
    BACKUP_ID    INT IDENTITY(1,1) NOT NULL,
    GROUP_NAME   VARCHAR(100)  NOT NULL,
    BACKUP_DATA  VARCHAR(MAX)  NULL,
    BACKUP_TS    DATETIME      NOT NULL DEFAULT(GETDATE()),
    CONSTRAINT PK_BRM_GROUP_BACKUPS PRIMARY KEY CLUSTERED (BACKUP_ID)
);
GO

--------------------------------------------------------------------------------
-- 12) BRM Column Mapping
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_COLUMN_MAPPING (
    MAPPING_ID       INT IDENTITY(1,1) NOT NULL,
    SOURCE_RULE_ID   INT NOT NULL,
    RULE_ID          INT NOT NULL,
    COLUMN_NAME      VARCHAR(100) NOT NULL,
    MAPPING_DETAILS  VARCHAR(1000) NULL,
    CONSTRAINT PK_BRM_COLUMN_MAPPING PRIMARY KEY CLUSTERED (MAPPING_ID)
);
GO

--------------------------------------------------------------------------------
-- 13) BRM Custom Rule Groups
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID        INT           IDENTITY(1,1) NOT NULL,
    CUSTOM_GROUP_NAME      VARCHAR(200)  NOT NULL,
    OWNER_BUSINESS_GROUP   VARCHAR(100)  NULL,
    CREATED_BY             VARCHAR(100)  NULL,
    CREATED_TIMESTAMP      DATETIME      NOT NULL DEFAULT(GETDATE()),
    CONSTRAINT PK_BRM_CUSTOM_RULE_GROUPS PRIMARY KEY CLUSTERED (CUSTOM_GROUP_ID)
);
GO

--------------------------------------------------------------------------------
-- 14) BRM Custom Group Members
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS (
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID         INT NOT NULL,
    CONSTRAINT PK_BRM_CUSTOM_GROUP_MEMBERS
        PRIMARY KEY (CUSTOM_GROUP_ID, RULE_ID)
);
GO

--------------------------------------------------------------------------------
-- 15) Business Group Approvers
--------------------------------------------------------------------------------
CREATE TABLE dbo.BUSINESS_GROUP_APPROVERS (
    APPROVER_ID INT IDENTITY(1,1) NOT NULL,
    GROUP_NAME  VARCHAR(100)  NOT NULL,
    USERNAME    VARCHAR(100)  NOT NULL,
    CONSTRAINT PK_BRM_BUSINESS_GROUP_APPROVERS PRIMARY KEY CLUSTERED (APPROVER_ID)
);
GO

--------------------------------------------------------------------------------
-- 16) BRM Rule Approvals
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_APPROVALS (
    APPROVAL_ID         INT IDENTITY(1,1) NOT NULL,
    RULE_ID             INT NOT NULL,
    GROUP_NAME          VARCHAR(100) NOT NULL,
    USERNAME            VARCHAR(100) NOT NULL,
    APPROVED_FLAG       INT NOT NULL DEFAULT(0),
    APPROVED_TIMESTAMP  DATETIME     NULL,
    APPROVAL_STAGE      INT NOT NULL DEFAULT(1),
    CONSTRAINT PK_BRM_RULE_APPROVALS PRIMARY KEY CLUSTERED (APPROVAL_ID)
);
GO

--------------------------------------------------------------------------------
-- 17) BRM Custom Group Backups
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS (
    BACKUP_ID        INT IDENTITY(1,1) NOT NULL,
    CUSTOM_GROUP_ID  INT           NOT NULL,
    BACKUP_TIMESTAMP DATETIME      NOT NULL DEFAULT(GETDATE()),
    BACKUP_VERSION   INT           NOT NULL,
    BACKUP_JSON      VARCHAR(MAX)  NOT NULL,
    CONSTRAINT PK_BRM_CUSTOM_GROUP_BACKUPS PRIMARY KEY CLUSTERED (BACKUP_ID)
);
GO

--------------------------------------------------------------------------------
-- 18) BRM Global Critical Links
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS (
    GCR_RULE_ID   INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL,
    CONSTRAINT PK_BRM_GLOBAL_CRITICAL_LINKS 
        PRIMARY KEY (GCR_RULE_ID, TARGET_RULE_ID)
);
GO

--------------------------------------------------------------------------------
-- 19) Rule Schedules
--------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_SCHEDULES (
    SCHEDULE_ID     INT IDENTITY(1,1) NOT NULL,
    RULE_ID         INT          NOT NULL,
    SCHEDULE_TIME   DATETIME     NOT NULL,
    STATUS          VARCHAR(20)  NOT NULL DEFAULT('Scheduled'),
    CREATED_TIMESTAMP DATETIME   NOT NULL DEFAULT(GETDATE()),
    CONSTRAINT PK_RULE_SCHEDULES PRIMARY KEY CLUSTERED (SCHEDULE_ID)
);
GO

--------------------------------------------------------------------------------
-- 20) BRM Rule Comments
--------------------------------------------------------------------------------
CREATE TABLE dbo.BRM_RULE_COMMENTS (
    COMMENT_ID   INT IDENTITY(1,1) NOT NULL,
    RULE_ID      INT          NOT NULL,
    COMMENT_TEXT VARCHAR(1000) NULL,
    CREATED_TS   DATETIME     NOT NULL DEFAULT(GETDATE()),
    CONSTRAINT PK_BRM_RULE_COMMENTS PRIMARY KEY CLUSTERED (COMMENT_ID)
);
GO

--------------------------------------------------------------------------------
-- 21) Decision Tables
--------------------------------------------------------------------------------
CREATE TABLE dbo.DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) NOT NULL,
    TABLE_NAME        VARCHAR(200)  NOT NULL,
    DESCRIPTION       VARCHAR(1000) NULL,
    CONSTRAINT PK_DECISION_TABLES PRIMARY KEY CLUSTERED (DECISION_TABLE_ID)
);
GO

--------------------------------------------------------------------------------
-- 22) Rule Conflicts
--------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) NOT NULL,
    RULE_ID1    INT NOT NULL,
    RULE_ID2    INT NOT NULL,
    PRIORITY    INT NOT NULL DEFAULT(0),
    CONSTRAINT PK_BRM_RULE_CONFLICTS PRIMARY KEY CLUSTERED (CONFLICT_ID)
);
GO

--------------------------------------------------------------------------------
-- 23) Composite Rules
--------------------------------------------------------------------------------
CREATE TABLE dbo.COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) NOT NULL,
    CRULE_NAME        VARCHAR(200)  NOT NULL,
    LOGIC_EXPR        VARCHAR(MAX)  NULL,
    ACTION_ON_PASS    VARCHAR(1000) NULL,
    CONSTRAINT PK_COMPOSITE_RULES PRIMARY KEY CLUSTERED (COMPOSITE_RULE_ID)
);
GO

--------------------------------------------------------------------------------
-- 24) Rule Snapshots
--------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_SNAPSHOTS (
    SNAPSHOT_ID    INT IDENTITY(1,1) NOT NULL,
    SNAPSHOT_NAME  VARCHAR(200)  NOT NULL,
    CREATED_BY     VARCHAR(100)  NOT NULL,
    CREATED_TIMESTAMP DATETIME   NOT NULL DEFAULT(GETDATE()),
    SNAPSHOT_JSON  VARCHAR(MAX)  NOT NULL,
    CONSTRAINT PK_RULE_SNAPSHOTS PRIMARY KEY CLUSTERED (SNAPSHOT_ID)
);
GO

--------------------------------------------------------------------------------
-- 25) Rule Tags
--------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_TAGS (
    TAG_ID   INT IDENTITY(1,1) NOT NULL,
    RULE_ID  INT NOT NULL,
    TAG_NAME VARCHAR(100) NOT NULL,
    CONSTRAINT PK_RULE_TAGS PRIMARY KEY CLUSTERED (TAG_ID)
);
GO

--------------------------------------------------------------------------------
-- 26) Data Validations
--------------------------------------------------------------------------------
CREATE TABLE dbo.DATA_VALIDATIONS (
    VALIDATION_ID    INT IDENTITY(1,1) NOT NULL,
    TABLE_NAME       VARCHAR(200) NOT NULL,
    COLUMN_NAME      VARCHAR(200) NOT NULL,
    VALIDATION_TYPE  VARCHAR(50)  NOT NULL,
    PARAMS           VARCHAR(1000) NULL,
    CONSTRAINT PK_DATA_VALIDATIONS PRIMARY KEY CLUSTERED (VALIDATION_ID)
);
GO

--------------------------------------------------------------------------------
-- 27) Rule Execution Logs
--------------------------------------------------------------------------------
CREATE TABLE dbo.RULE_EXECUTION_LOGS (
    LOG_ID           INT IDENTITY(1,1) NOT NULL,
    RULE_ID          INT        NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    PASS_FLAG        BIT        NOT NULL DEFAULT(0),
    MESSAGE          VARCHAR(1000) NULL,
    RECORD_COUNT     INT        NULL,
    CONSTRAINT PK_RULE_EXECUTION_LOGS PRIMARY KEY CLUSTERED (LOG_ID)
);
GO