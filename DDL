----------------------------------------------------------------------
-- USERS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.USERS','U') IS NULL
BEGIN
    CREATE TABLE dbo.USERS (
        USER_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        USERNAME NVARCHAR(100),
        [PASSWORD] NVARCHAR(200),
        USER_GROUP NVARCHAR(50)
    );
END;
GO

----------------------------------------------------------------------
-- BUSINESS_GROUPS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUPS','U') IS NULL
BEGIN
    CREATE TABLE dbo.BUSINESS_GROUPS (
        GROUP_NAME NVARCHAR(100) NOT NULL PRIMARY KEY,
        DESCRIPTION NVARCHAR(200),
        EMAIL NVARCHAR(200)
    );
END;
GO

----------------------------------------------------------------------
-- GROUP_PERMISSIONS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.GROUP_PERMISSIONS','U') IS NULL
BEGIN
    CREATE TABLE dbo.GROUP_PERMISSIONS (
        PERM_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        GROUP_NAME NVARCHAR(100),
        TARGET_TABLE NVARCHAR(200)
    );
END;
GO

----------------------------------------------------------------------
-- BUSINESS_GROUP_APPROVERS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BUSINESS_GROUP_APPROVERS','U') IS NULL
BEGIN
    CREATE TABLE dbo.BUSINESS_GROUP_APPROVERS (
        APPROVER_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        GROUP_NAME NVARCHAR(100),
        USERNAME NVARCHAR(100)
    );
END;
GO

----------------------------------------------------------------------
-- BRM_RULE_TYPES
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TYPES','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_RULE_TYPES (
        RULE_TYPE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        RULE_TYPE_NAME NVARCHAR(100)
    );
END;
GO

----------------------------------------------------------------------
-- BRM_RULE_GROUPS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_GROUPS','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_RULE_GROUPS (
        GROUP_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        GROUP_NAME NVARCHAR(100)
    );
END;
GO

----------------------------------------------------------------------
-- BRM_RULES
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULES','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_RULES (
        RULE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        GROUP_ID INT,
        PARENT_RULE_ID INT,
        RULE_TYPE_ID INT,
        RULE_NAME NVARCHAR(200),
        RULE_SQL NVARCHAR(MAX),
        EFFECTIVE_START_DATE DATETIME,
        EFFECTIVE_END_DATE DATETIME,
        STATUS NVARCHAR(50),
        VERSION INT,
        CREATED_BY NVARCHAR(100),
        DESCRIPTION NVARCHAR(MAX),
        OPERATION_TYPE NVARCHAR(50),
        BUSINESS_JUSTIFICATION NVARCHAR(MAX),
        CREATED_TIMESTAMP DATETIME,
        UPDATED_BY NVARCHAR(100),
        OWNER_GROUP NVARCHAR(100),
        CLUSTER_NAME NVARCHAR(100),
        APPROVAL_STATUS NVARCHAR(50),
        IS_GLOBAL BIT,
        CRITICAL_RULE BIT,
        CRITICAL_SCOPE NVARCHAR(50),
        CDC_TYPE NVARCHAR(50),
        LIFECYCLE_STATE NVARCHAR(50),
        DECISION_TABLE_ID INT,
        IS_ENCRYPTED BIT
    );
END;
GO

----------------------------------------------------------------------
-- BRM_RULE_TABLE_DEPENDENCIES
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_TABLE_DEPENDENCIES','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_RULE_TABLE_DEPENDENCIES (
        DEPENDENCY_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        RULE_ID INT,
        DATABASE_NAME NVARCHAR(100),
        TABLE_NAME NVARCHAR(200),
        COLUMN_NAME NVARCHAR(100),
        COLUMN_OP NVARCHAR(10)
    );
END;
GO

----------------------------------------------------------------------
-- BRM_AUDIT_LOG
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_AUDIT_LOG','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_AUDIT_LOG (
        AUDIT_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        ACTION NVARCHAR(100),
        TABLE_NAME NVARCHAR(100),
        RECORD_ID NVARCHAR(50),
        ACTION_BY NVARCHAR(100),
        OLD_DATA NVARCHAR(MAX),
        NEW_DATA NVARCHAR(MAX),
        ACTION_TIMESTAMP DATETIME
    );
END;
GO

----------------------------------------------------------------------
-- BRM_RULE_LINEAGE (Optional; if your code references it)
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_LINEAGE','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_RULE_LINEAGE (
        LINEAGE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        RULE_ID INT,
        PARENT_RULE_ID INT
    );
END;
GO

----------------------------------------------------------------------
-- BRM_GROUP_BACKUPS (Optional)
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_GROUP_BACKUPS','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_GROUP_BACKUPS (
        BACKUP_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        GROUP_NAME NVARCHAR(100),
        BACKUP_DATA NVARCHAR(MAX),
        BACKUP_TIMESTAMP DATETIME
    );
END;
GO

----------------------------------------------------------------------
-- BRM_COLUMN_MAPPING (Optional)
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_COLUMN_MAPPING','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_COLUMN_MAPPING (
        MAPPING_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        SOURCE_RULE_ID INT,
        RULE_ID INT,
        COLUMN_NAME NVARCHAR(100)
    );
END;
GO

----------------------------------------------------------------------
-- BRM_CUSTOM_RULE_GROUPS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_RULE_GROUPS','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_CUSTOM_RULE_GROUPS (
        CUSTOM_GROUP_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        CUSTOM_GROUP_NAME NVARCHAR(200),
        OWNER_BUSINESS_GROUP NVARCHAR(100),
        CREATED_BY NVARCHAR(100),
        CREATED_TIMESTAMP DATETIME
    );
END;
GO

----------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_MEMBERS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_MEMBERS','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_CUSTOM_GROUP_MEMBERS (
        ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        CUSTOM_GROUP_ID INT,
        RULE_ID INT
    );
END;
GO

----------------------------------------------------------------------
-- RULE_SCHEDULES
----------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_SCHEDULES','U') IS NULL
BEGIN
    CREATE TABLE dbo.RULE_SCHEDULES (
        SCHEDULE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        RULE_ID INT,
        SCHEDULE_TIME DATETIME,
        STATUS NVARCHAR(50),
        CREATED_TIMESTAMP DATETIME
    );
END;
GO

----------------------------------------------------------------------
-- BRM_RULE_COMMENTS (Optional)
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_COMMENTS','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_RULE_COMMENTS (
        COMMENT_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        RULE_ID INT,
        COMMENT_TEXT NVARCHAR(MAX),
        CREATED_BY NVARCHAR(100),
        CREATED_TIMESTAMP DATETIME
    );
END;
GO

----------------------------------------------------------------------
-- DECISION_TABLES
----------------------------------------------------------------------
IF OBJECT_ID('dbo.DECISION_TABLES','U') IS NULL
BEGIN
    CREATE TABLE dbo.DECISION_TABLES (
        DECISION_TABLE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        TABLE_NAME NVARCHAR(200),
        DESCRIPTION NVARCHAR(MAX)
    );
END;
GO

----------------------------------------------------------------------
-- RULE_CONFLICTS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_CONFLICTS','U') IS NULL
BEGIN
    CREATE TABLE dbo.RULE_CONFLICTS (
        CONFLICT_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        RULE_ID1 INT,
        RULE_ID2 INT,
        PRIORITY INT
    );
END;
GO

----------------------------------------------------------------------
-- COMPOSITE_RULES
----------------------------------------------------------------------
IF OBJECT_ID('dbo.COMPOSITE_RULES','U') IS NULL
BEGIN
    CREATE TABLE dbo.COMPOSITE_RULES (
        COMPOSITE_RULE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        CRULE_NAME NVARCHAR(200),
        LOGIC_EXPR NVARCHAR(MAX),
        ACTION_ON_PASS NVARCHAR(200)
    );
END;
GO

----------------------------------------------------------------------
-- RULE_SNAPSHOTS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_SNAPSHOTS','U') IS NULL
BEGIN
    CREATE TABLE dbo.RULE_SNAPSHOTS (
        SNAPSHOT_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        SNAPSHOT_NAME NVARCHAR(200),
        CREATED_BY NVARCHAR(100),
        CREATED_TIMESTAMP DATETIME,
        SNAPSHOT_JSON NVARCHAR(MAX)
    );
END;
GO

----------------------------------------------------------------------
-- RULE_TAGS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_TAGS','U') IS NULL
BEGIN
    CREATE TABLE dbo.RULE_TAGS (
        TAG_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        RULE_ID INT,
        TAG_NAME NVARCHAR(100)
    );
END;
GO

----------------------------------------------------------------------
-- DATA_VALIDATIONS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.DATA_VALIDATIONS','U') IS NULL
BEGIN
    CREATE TABLE dbo.DATA_VALIDATIONS (
        VALIDATION_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        TABLE_NAME NVARCHAR(200),
        COLUMN_NAME NVARCHAR(200),
        VALIDATION_TYPE NVARCHAR(50),
        PARAMS NVARCHAR(200)
    );
END;
GO

----------------------------------------------------------------------
-- RULE_EXECUTION_LOGS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.RULE_EXECUTION_LOGS','U') IS NULL
BEGIN
    CREATE TABLE dbo.RULE_EXECUTION_LOGS (
        LOG_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        RULE_ID INT,
        EXECUTION_TIMESTAMP DATETIME,
        PASS_FLAG BIT,
        MESSAGE NVARCHAR(MAX),
        RECORD_COUNT INT,
        EXECUTION_TIME_MS DECIMAL(12,3)
    );
END;
GO

----------------------------------------------------------------------
-- BRM_GLOBAL_CRITICAL_LINKS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_GLOBAL_CRITICAL_LINKS','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_GLOBAL_CRITICAL_LINKS (
        LINK_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        GCR_RULE_ID INT,
        TARGET_RULE_ID INT
    );
END;
GO

----------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_BACKUPS
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_CUSTOM_GROUP_BACKUPS','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_CUSTOM_GROUP_BACKUPS (
        BACKUP_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        CUSTOM_GROUP_ID INT,
        BACKUP_TIMESTAMP DATETIME,
        BACKUP_VERSION INT,
        BACKUP_JSON NVARCHAR(MAX)
    );
END;
GO

----------------------------------------------------------------------
-- SECURE_FILES (Part 8 example for encrypted data)
----------------------------------------------------------------------
IF OBJECT_ID('dbo.SECURE_FILES','U') IS NULL
BEGIN
    CREATE TABLE dbo.SECURE_FILES (
        SEC_ID INT NOT NULL PRIMARY KEY,
        SEC_CONTENT NVARCHAR(MAX),
        SAVED_BY NVARCHAR(100),
        SAVED_TIMESTAMP DATETIME
    );
END;
GO

----------------------------------------------------------------------
-- BRM_RULE_APPROVALS (for multi-step approvals)
----------------------------------------------------------------------
IF OBJECT_ID('dbo.BRM_RULE_APPROVALS','U') IS NULL
BEGIN
    CREATE TABLE dbo.BRM_RULE_APPROVALS (
        APPROVAL_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
        RULE_ID INT,
        GROUP_NAME NVARCHAR(100),
        USERNAME NVARCHAR(100),
        APPROVED_FLAG INT,
        APPROVED_TIMESTAMP DATETIME,
        APPROVAL_STAGE INT
    );
END;
GO

----------------------------------------------------------------------
-- All tables are created with minimal constraints
-- No foreign keys or references used, so it can run
-- with limited permissions.
----------------------------------------------------------------------