--------------------------------------------------------------------------------
-- USERS
--------------------------------------------------------------------------------
CREATE TABLE USERS (
    USER_ID        INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    USERNAME       NVARCHAR(100) NOT NULL,
    [PASSWORD]     NVARCHAR(100) NOT NULL,
    USER_GROUP     NVARCHAR(50)  NOT NULL
);

--------------------------------------------------------------------------------
-- BUSINESS_GROUPS
--------------------------------------------------------------------------------
CREATE TABLE BUSINESS_GROUPS (
    GROUP_NAME     NVARCHAR(50)  NOT NULL PRIMARY KEY,
    [DESCRIPTION]  NVARCHAR(255) NULL,
    EMAIL          NVARCHAR(255) NULL
);

--------------------------------------------------------------------------------
-- GROUP_PERMISSIONS
--------------------------------------------------------------------------------
CREATE TABLE GROUP_PERMISSIONS (
    PERM_ID        INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME     NVARCHAR(50)  NOT NULL,
    TARGET_TABLE   NVARCHAR(200) NOT NULL
);
CREATE INDEX IX_GROUP_PERMISSIONS_GROUP_NAME ON GROUP_PERMISSIONS (GROUP_NAME);

--------------------------------------------------------------------------------
-- BRM_RULE_TYPES
--------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_TYPES (
    RULE_TYPE_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_TYPE_NAME NVARCHAR(100) NOT NULL
);

--------------------------------------------------------------------------------
-- BRM_RULE_GROUPS
--------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_GROUPS (
    GROUP_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME     NVARCHAR(100) NOT NULL
);

--------------------------------------------------------------------------------
-- BRM_RULES
--------------------------------------------------------------------------------
CREATE TABLE BRM_RULES (
    RULE_ID                INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_ID               INT NULL,
    PARENT_RULE_ID         INT NULL,
    RULE_TYPE_ID           INT NOT NULL,
    RULE_NAME              NVARCHAR(200) NOT NULL,
    RULE_SQL               NVARCHAR(MAX) NULL,
    EFFECTIVE_START_DATE   DATETIME NULL,
    EFFECTIVE_END_DATE     DATETIME NULL,
    STATUS                 NVARCHAR(50) NOT NULL DEFAULT('INACTIVE'),
    VERSION                INT NOT NULL DEFAULT(1),
    CREATED_BY             NVARCHAR(100) NOT NULL,
    [DESCRIPTION]          NVARCHAR(MAX) NULL,
    OPERATION_TYPE         NVARCHAR(50) NULL,
    BUSINESS_JUSTIFICATION NVARCHAR(MAX) NULL,
    CREATED_TIMESTAMP      DATETIME NOT NULL,
    UPDATED_BY             NVARCHAR(100) NULL,
    OWNER_GROUP            NVARCHAR(50) NOT NULL,
    CLUSTER_NAME           NVARCHAR(100) NULL,
    APPROVAL_STATUS        NVARCHAR(50) NOT NULL DEFAULT('APPROVAL_IN_PROGRESS'),
    IS_GLOBAL              BIT NOT NULL DEFAULT(0),
    CRITICAL_RULE          BIT NOT NULL DEFAULT(0),
    CRITICAL_SCOPE         NVARCHAR(50) NOT NULL DEFAULT('NONE'),
    CDC_TYPE               NVARCHAR(50) NOT NULL DEFAULT('NONE'),
    LIFECYCLE_STATE        NVARCHAR(50) NOT NULL DEFAULT('DRAFT')
);
CREATE INDEX IX_BRM_RULES_OWNER_GROUP   ON BRM_RULES (OWNER_GROUP);
CREATE INDEX IX_BRM_RULES_PARENT_RULE   ON BRM_RULES (PARENT_RULE_ID);
CREATE INDEX IX_BRM_RULES_APPROVALSTAT ON BRM_RULES (APPROVAL_STATUS);

--------------------------------------------------------------------------------
-- BRM_RULE_TABLE_DEPENDENCIES (Rule-level table references)
--------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID         INT NOT NULL,
    DATABASE_NAME   NVARCHAR(100) NULL,
    TABLE_NAME      NVARCHAR(200) NULL,
    COLUMN_NAME     NVARCHAR(200) NULL,
    COLUMN_OP       NVARCHAR(10)  NULL,
    TRANSFORMATION_NOTES NVARCHAR(MAX) NULL  -- Optionally track transformation details
);
CREATE INDEX IX_RULE_TABLE_DEP_RULE_ID ON BRM_RULE_TABLE_DEPENDENCIES (RULE_ID);

--------------------------------------------------------------------------------
-- BRM_AUDIT_LOG
--------------------------------------------------------------------------------
CREATE TABLE BRM_AUDIT_LOG (
    AUDIT_ID        INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    ACTION          NVARCHAR(50) NOT NULL,
    TABLE_NAME      NVARCHAR(100) NOT NULL,
    RECORD_ID       NVARCHAR(100) NULL,
    ACTION_BY       NVARCHAR(100) NOT NULL,
    OLD_DATA        NVARCHAR(MAX) NULL,
    NEW_DATA        NVARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME NOT NULL
);
CREATE INDEX IX_BRM_AUDIT_LOG_TIMESTAMP ON BRM_AUDIT_LOG (ACTION_TIMESTAMP DESC);

--------------------------------------------------------------------------------
-- BRM_GLOBAL_CRITICAL_LINKS
--------------------------------------------------------------------------------
CREATE TABLE BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID         INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GCR_RULE_ID     INT NOT NULL,
    TARGET_RULE_ID  INT NOT NULL
);

--------------------------------------------------------------------------------
-- RULE_CONFLICTS
--------------------------------------------------------------------------------
CREATE TABLE RULE_CONFLICTS (
    CONFLICT_ID     INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID1        INT NOT NULL,
    RULE_ID2        INT NOT NULL,
    PRIORITY        INT NOT NULL DEFAULT(0)
);

--------------------------------------------------------------------------------
-- COMPOSITE_RULES
--------------------------------------------------------------------------------
CREATE TABLE COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CRULE_NAME        NVARCHAR(200) NOT NULL,
    LOGIC_EXPR        NVARCHAR(MAX) NULL,
    ACTION_ON_PASS    NVARCHAR(200) NULL
);

--------------------------------------------------------------------------------
-- RULE_SCHEDULES
--------------------------------------------------------------------------------
CREATE TABLE RULE_SCHEDULES (
    SCHEDULE_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID           INT NOT NULL,
    SCHEDULE_TIME     DATETIME NOT NULL,
    STATUS            NVARCHAR(50) NOT NULL DEFAULT('Scheduled'),
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE())
);
CREATE INDEX IX_RULE_SCHEDULES_RULE_ID ON RULE_SCHEDULES (RULE_ID);

--------------------------------------------------------------------------------
-- RULE_SNAPSHOTS
--------------------------------------------------------------------------------
CREATE TABLE RULE_SNAPSHOTS (
    SNAPSHOT_ID     INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    SNAPSHOT_NAME   NVARCHAR(200) NOT NULL,
    CREATED_BY      NVARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    SNAPSHOT_JSON   NVARCHAR(MAX) NULL
);
CREATE INDEX IX_RULE_SNAPSHOTS_NAME ON RULE_SNAPSHOTS (SNAPSHOT_NAME);

--------------------------------------------------------------------------------
-- RULE_TAGS
--------------------------------------------------------------------------------
CREATE TABLE RULE_TAGS (
    TAG_ID          INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID         INT NOT NULL,
    TAG_NAME        NVARCHAR(100) NOT NULL
);
CREATE INDEX IX_RULE_TAGS_RULE_ID ON RULE_TAGS (RULE_ID);

--------------------------------------------------------------------------------
-- DATA_VALIDATIONS
--------------------------------------------------------------------------------
CREATE TABLE DATA_VALIDATIONS (
    VALIDATION_ID   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    TABLE_NAME      NVARCHAR(200) NOT NULL,
    COLUMN_NAME     NVARCHAR(200) NOT NULL,
    VALIDATION_TYPE NVARCHAR(50) NOT NULL,
    PARAMS          NVARCHAR(200) NULL
);
CREATE INDEX IX_DATA_VALIDATIONS_TABLE_COL ON DATA_VALIDATIONS (TABLE_NAME, COLUMN_NAME);

--------------------------------------------------------------------------------
-- DATA_VALIDATION_LOGS
--------------------------------------------------------------------------------
CREATE TABLE DATA_VALIDATION_LOGS (
    LOG_ID          INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    VALIDATION_ID   INT NOT NULL,
    RUN_TIMESTAMP   DATETIME NOT NULL DEFAULT(GETDATE()),
    PASS_FLAG       BIT NOT NULL DEFAULT(0),
    MESSAGE         NVARCHAR(500) NULL
);
CREATE INDEX IX_DATA_VALID_LOG_VAL_ID ON DATA_VALIDATION_LOGS (VALIDATION_ID);

--------------------------------------------------------------------------------
-- RULE_EXECUTION_LOGS
--------------------------------------------------------------------------------
CREATE TABLE RULE_EXECUTION_LOGS (
    LOG_ID          INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID         INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME NOT NULL,
    PASS_FLAG       BIT NOT NULL DEFAULT(0),
    MESSAGE         NVARCHAR(MAX) NULL,
    RECORD_COUNT    INT NOT NULL DEFAULT(0)
);
CREATE INDEX IX_RULE_EXEC_LOG_RULE_ID ON RULE_EXECUTION_LOGS (RULE_ID);

--------------------------------------------------------------------------------
-- DECISION_TABLES
--------------------------------------------------------------------------------
CREATE TABLE DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    TABLE_NAME        NVARCHAR(200) NOT NULL,
    [DESCRIPTION]     NVARCHAR(MAX) NULL
);

--------------------------------------------------------------------------------
-- BRM_CUSTOM_RULE_GROUPS
--------------------------------------------------------------------------------
CREATE TABLE BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_ID       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CUSTOM_GROUP_NAME     NVARCHAR(200) NOT NULL,
    OWNER_BUSINESS_GROUP  NVARCHAR(50) NOT NULL,
    CREATED_BY            NVARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP     DATETIME NOT NULL DEFAULT(GETDATE())
);
CREATE INDEX IX_BRM_CUSTOM_RULE_GROUPS_OWNER ON BRM_CUSTOM_RULE_GROUPS (OWNER_BUSINESS_GROUP);

--------------------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_MEMBERS
--------------------------------------------------------------------------------
CREATE TABLE BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID        INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CUSTOM_GROUP_ID  INT NOT NULL,
    RULE_ID          INT NOT NULL
);
CREATE INDEX IX_CUSTOM_GROUP_MEMBERS_GROUP_ID ON BRM_CUSTOM_GROUP_MEMBERS (CUSTOM_GROUP_ID);

--------------------------------------------------------------------------------
-- BUSINESS_GROUP_APPROVERS
--------------------------------------------------------------------------------
CREATE TABLE BUSINESS_GROUP_APPROVERS (
    APPROVER_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    GROUP_NAME       NVARCHAR(50) NOT NULL,
    USERNAME         NVARCHAR(100) NOT NULL
);
CREATE INDEX IX_BUSINESS_GROUP_APPROVERS_GROUP_NAME ON BUSINESS_GROUP_APPROVERS (GROUP_NAME);

--------------------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_BACKUPS
--------------------------------------------------------------------------------
CREATE TABLE BRM_CUSTOM_GROUP_BACKUPS (
    BACKUP_ID        INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CUSTOM_GROUP_ID  INT NOT NULL,
    BACKUP_TIMESTAMP DATETIME NOT NULL DEFAULT(GETDATE()),
    BACKUP_VERSION   INT NOT NULL,
    BACKUP_JSON      NVARCHAR(MAX) NULL
);
CREATE INDEX IX_GROUP_BACKUPS_GROUP_ID ON BRM_CUSTOM_GROUP_BACKUPS (CUSTOM_GROUP_ID);

--------------------------------------------------------------------------------
-- BRM_RULE_APPROVALS
--------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_APPROVALS (
    APPROVAL_ID      INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    RULE_ID          INT NOT NULL,
    GROUP_NAME       NVARCHAR(50) NOT NULL,
    USERNAME         NVARCHAR(100) NOT NULL,
    APPROVED_FLAG    INT NOT NULL DEFAULT(0),
    APPROVED_TIMESTAMP DATETIME NULL,
    APPROVAL_STAGE   INT NOT NULL
);
CREATE INDEX IX_RULE_APPROVALS_RULE_ID ON BRM_RULE_APPROVALS (RULE_ID);

--------------------------------------------------------------------------------
-- BRM_RULE_LOCKS
--------------------------------------------------------------------------------
CREATE TABLE BRM_RULE_LOCKS (
    RULE_ID          INT NOT NULL,
    LOCKED_BY        NVARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP   DATETIME NOT NULL DEFAULT(GETDATE()),
    CONSTRAINT PK_BRM_RULE_LOCKS PRIMARY KEY (RULE_ID)
);
CREATE INDEX IX_RULE_LOCKS_LOCKED_BY ON BRM_RULE_LOCKS (LOCKED_BY);

--------------------------------------------------------------------------------
-- BRM_COLUMN_MAPPING (Enhanced Column-Level Lineage)
--------------------------------------------------------------------------------
CREATE TABLE BRM_COLUMN_MAPPING (
    MAPPING_ID         INT IDENTITY(1,1) NOT NULL PRIMARY KEY,

    -- Basic references
    SOURCE_RULE_ID     INT NOT NULL,  
    TARGET_RULE_ID     INT NOT NULL,  

    -- Optional actual DB sources or sub-structures
    SOURCE_SCHEMA      NVARCHAR(100) NULL,
    SOURCE_TABLE       NVARCHAR(200) NULL,
    SOURCE_COLUMN      NVARCHAR(200) NOT NULL,

    TARGET_SCHEMA      NVARCHAR(100) NULL,
    TARGET_TABLE       NVARCHAR(200) NULL,
    TARGET_COLUMN      NVARCHAR(200) NOT NULL,

    -- Optional transformation expression or notes
    TRANSFORMATION_LOGIC NVARCHAR(MAX) NULL
);
CREATE INDEX IX_COLUMN_MAPPING_SOURCE_RULE ON BRM_COLUMN_MAPPING (SOURCE_RULE_ID);
CREATE INDEX IX_COLUMN_MAPPING_TARGET_RULE ON BRM_COLUMN_MAPPING (TARGET_RULE_ID);

DROP TABLE IF EXISTS BRM_RULE_APPROVALS;
DROP TABLE IF EXISTS BRM_RULE_LOCKS;
DROP TABLE IF EXISTS BRM_COLUMN_MAPPING;
DROP TABLE IF EXISTS BRM_CUSTOM_GROUP_BACKUPS;
DROP TABLE IF EXISTS BUSINESS_GROUP_APPROVERS;
DROP TABLE IF EXISTS BRM_CUSTOM_GROUP_MEMBERS;
DROP TABLE IF EXISTS BRM_CUSTOM_RULE_GROUPS;
DROP TABLE IF EXISTS DECISION_TABLES;
DROP TABLE IF EXISTS RULE_EXECUTION_LOGS;
DROP TABLE IF EXISTS DATA_VALIDATION_LOGS;
DROP TABLE IF EXISTS DATA_VALIDATIONS;
DROP TABLE IF EXISTS RULE_TAGS;
DROP TABLE IF EXISTS RULE_SNAPSHOTS;
DROP TABLE IF EXISTS RULE_SCHEDULES;
DROP TABLE IF EXISTS COMPOSITE_RULES;
DROP TABLE IF EXISTS RULE_CONFLICTS;
DROP TABLE IF EXISTS BRM_GLOBAL_CRITICAL_LINKS;
DROP TABLE IF EXISTS BRM_AUDIT_LOG;
DROP TABLE IF EXISTS BRM_RULE_TABLE_DEPENDENCIES;
DROP TABLE IF EXISTS BRM_RULES;
DROP TABLE IF EXISTS BRM_RULE_GROUPS;
DROP TABLE IF EXISTS BRM_RULE_TYPES;
DROP TABLE IF EXISTS GROUP_PERMISSIONS;
DROP TABLE IF EXISTS BUSINESS_GROUPS;
DROP TABLE IF EXISTS USERS;