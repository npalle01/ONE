-------------------------------------------------------------------------------
-- 1) BUSINESS_GROUPS: 3 sample groups (Admin, Finance, Operations)
-------------------------------------------------------------------------------
INSERT INTO BUSINESS_GROUPS (GROUP_NAME, DESCRIPTION, EMAIL)
VALUES
('Admin', 'Administrators', 'admin@example.com'),
('Finance', 'Finance group', 'finance@example.com'),
('Operations', 'Ops group', 'ops@example.com');
GO

-------------------------------------------------------------------------------
-- 2) USERS: Admin user + a normal user (bob)
-------------------------------------------------------------------------------
INSERT INTO USERS (USERNAME, PASSWORD, USER_GROUP)
VALUES
('admin', 'admin', 'Admin'),
('bob', 'bob', 'Finance');
GO

-------------------------------------------------------------------------------
-- 3) BRM_RULE_GROUPS: Just to demonstrate group usage
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_GROUPS (GROUP_NAME)
VALUES
('RiskManagement'),
('Accounting');
GO

-------------------------------------------------------------------------------
-- 4) GROUP_PERMISSIONS (Optional ACL demonstration)
-------------------------------------------------------------------------------
INSERT INTO GROUP_PERMISSIONS (GROUP_NAME, TARGET_TABLE)
VALUES
('Admin', 'BRM_RULES'),     -- Admin can access BRM_RULES
('Finance', 'MyTable');     -- Finance group can access "MyTable"
GO

-------------------------------------------------------------------------------
-- 5) DECISION_TABLES: One sample decision table
-------------------------------------------------------------------------------
INSERT INTO DECISION_TABLES (TABLE_NAME, DESCRIPTION, DECISION_QUERY)
VALUES
('DT_FraudCheck','Checks for FraudReturn=1','SELECT 1 AS Col');
GO

-------------------------------------------------------------------------------
-- 6) BRM_RULES:
--   4 sample rules to demonstrate BFS, conflict, decision table, locked_by, etc.
-------------------------------------------------------------------------------
INSERT INTO BRM_RULES (
    RULE_NAME, RULE_SQL, DESCRIPTION, BUSINESS_JUSTIFICATION, STATUS,
    OWNER_GROUP, APPROVAL_MODE, IS_GLOBAL, OPERATION_TYPE, CREATED_TIMESTAMP,
    UPDATED_BY, VERSION, APPROVAL_STATUS, PARENT_RULE_ID, CRITICAL_RULE,
    DECISION_TABLE_ID, LIFECYCLE_STATE, LOCKED_BY
)
VALUES
-- Rule #1: Parent BFS rule, global + critical
(
    'ParentRule',
    'SELECT 1',
    'Root BFS rule that returns 1 => pass',
    'We must pass parent BFS first.',
    'INACTIVE',
    'Finance',
    'Serial',
    1,           -- IS_GLOBAL
    'SELECT',
    GETDATE(),
    'system',
    1,
    'APPROVAL_IN_PROGRESS',
    NULL,        -- no parent
    1,           -- CRITICAL_RULE
    NULL,        -- no DECISION_TABLE_ID
    'INACTIVE',
    NULL         -- locked_by
),
-- Rule #2: Child BFS rule, references parent_rule_id=1
(
    'ChildRule',
    'SELECT 1',
    'Child BFS rule returning 1 => pass',
    'Derived from parent BFS rule.',
    'INACTIVE',
    'Finance',
    'Serial',
    0,
    'SELECT',
    GETDATE(),
    'system',
    1,
    'APPROVAL_IN_PROGRESS',
    1,           -- PARENT_RULE_ID => link to rule_id=1
    0,
    NULL,
    'INACTIVE',
    NULL
),
-- Rule #3: Decision table rule, references DECISION_TABLES
(
    'FraudCheckDT',
    NULL,
    'Decision table rule for fraud checks',
    'Checks for potential fraud usage.',
    'ACTIVE',
    'Finance',
    'Serial',
    0,
    'DECISION_TABLE',
    GETDATE(),
    'system',
    1,
    'APPROVAL_IN_PROGRESS',
    NULL,
    0,
    1,        -- DECISION_TABLE_ID => references the row we inserted
    'ACTIVE',
    'bob'     -- locked_by (demonstrate rule locked by bob)
),
-- Rule #4: AlwaysFail, used for conflict tests + BFS skip
(
    'AlwaysFail',
    'SELECT 0',
    'Fails on BFS or direct run',
    'Used for testing conflict or BFS skip logic.',
    'ACTIVE',
    'Finance',
    'Parallel',
    0,
    'SELECT',
    GETDATE(),
    'system',
    1,
    'APPROVAL_IN_PROGRESS',
    NULL,
    0,
    NULL,
    'ACTIVE',
    NULL
);
GO

-------------------------------------------------------------------------------
-- 7) RULE_CONFLICTS: Conflict between Rule #1 (ParentRule) and Rule #4 (AlwaysFail)
-------------------------------------------------------------------------------
INSERT INTO RULE_CONFLICTS (RULE_ID1, RULE_ID2, PRIORITY)
VALUES
(1, 4, 5);
GO

-------------------------------------------------------------------------------
-- 8) BRM_RULE_APPROVALS: Multi-step approvals for rules #1, #2
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_APPROVALS (
    RULE_ID, GROUP_NAME, APPROVAL_STAGE, USERNAME, APPROVED_FLAG, REQUEST_TIMESTAMP
)
VALUES
-- For Rule #1, Stage 1 => bob, Stage 2 => admin
(1, 'Finance', 1, 'bob',   0, GETDATE()),
(1, 'Admin',   2, 'admin', 0, GETDATE()),

-- For Rule #2, single stage => admin
(2, 'Admin',   1, 'admin', 0, GETDATE());
GO

-------------------------------------------------------------------------------
-- 9) BRM_RULE_LOCKS: Example stale lock on Rule #1 (admin)
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_LOCKS (
    RULE_ID, LOCKED_BY, LOCK_TIMESTAMP, EXPIRY_TIMESTAMP, FORCE_LOCK, ACTIVE_LOCK
)
VALUES
(
    1,
    'admin',
    DATEADD(MINUTE, -60, GETDATE()),  -- locked an hour ago
    DATEADD(MINUTE, -30, GETDATE()),  -- expired 30 min ago => stale
    0,
    1
);
GO

-------------------------------------------------------------------------------
-- 10) RULE_SCHEDULES: Schedule Rule #3 for tomorrow, run validations
-------------------------------------------------------------------------------
INSERT INTO RULE_SCHEDULES (
    RULE_ID, SCHEDULE_TIME, STATUS, RUN_DATA_VALIDATIONS
)
VALUES
(
    3,
    DATEADD(DAY,1,GETDATE()),   -- tomorrow
    'Scheduled',
    1
);
GO

-------------------------------------------------------------------------------
-- 11) DATA_VALIDATIONS: 2 validations (NOT NULL, UNIQUE)
-------------------------------------------------------------------------------
INSERT INTO DATA_VALIDATIONS (TABLE_NAME, COLUMN_NAME, VALIDATION_TYPE, PARAMS, CREATED_TIMESTAMP)
VALUES
('MyTable', 'MyCol', 'NOT NULL', NULL, GETDATE()),
('MyTable', 'MyOtherCol', 'UNIQUE', NULL, GETDATE());
GO

-------------------------------------------------------------------------------
-- 12) DATA_VALIDATION_LOGS: 1 PASS, 1 FAIL
-------------------------------------------------------------------------------
INSERT INTO DATA_VALIDATION_LOGS (VALIDATION_ID, RESULT_FLAG, DETAILS, VALIDATION_TIMESTAMP)
VALUES
(1, 'PASS', 'No nulls found.', GETDATE()),
(2, 'FAIL', 'Found 1 duplicate.', GETDATE());
GO

-------------------------------------------------------------------------------
-- 13) RULE_EXECUTION_LOGS: Show rule #1 passed, rule #4 failed
-------------------------------------------------------------------------------
INSERT INTO RULE_EXECUTION_LOGS (RULE_ID, PASS_FLAG, MESSAGE, RECORD_COUNT, EXECUTION_TIMESTAMP)
VALUES
(1, 1, 'Returned => 1', 0, GETDATE()),
(4, 0, 'Returned => 0', 0, GETDATE());
GO

-------------------------------------------------------------------------------
-- 14) DECISION_TABLE_EXEC_LOGS: Decision table #1 => pass
-------------------------------------------------------------------------------
INSERT INTO DECISION_TABLE_EXEC_LOGS (
    DECISION_TABLE_ID, PASS_FLAG, MESSAGE, RECORD_COUNT, EXEC_TIMESTAMP
)
VALUES
(1,1,'Decision => 1',1,GETDATE());
GO

-------------------------------------------------------------------------------
-- 15) RULE_TAGS: Tag rule #1 as "Critical", rule #4 as "Test"
-------------------------------------------------------------------------------
INSERT INTO RULE_TAGS (RULE_ID, TAG_NAME)
VALUES
(1,'Critical'),
(4,'Test');
GO

-------------------------------------------------------------------------------
-- 16) RULE_SNAPSHOTS: One sample snapshot with empty JSON
-------------------------------------------------------------------------------
INSERT INTO RULE_SNAPSHOTS (SNAPSHOT_NAME, CREATED_BY, SNAPSHOT_JSON, CREATED_TIMESTAMP)
VALUES
('Initial Snapshot','admin','[]',GETDATE());
GO

-------------------------------------------------------------------------------
-- 17) COLLABORATION_LOGS: 2 sample messages
-------------------------------------------------------------------------------
INSERT INTO COLLABORATION_LOGS (MESSAGE, SENDER, [TIMESTAMP])
VALUES
('Hello, this is admin.','admin', GETDATE()),
('Bob here, requesting approval.','bob', GETDATE());
GO

-------------------------------------------------------------------------------
-- 18) BRM_CUSTOM_RULE_GROUPS: One custom group "LoanRules"
-------------------------------------------------------------------------------
INSERT INTO BRM_CUSTOM_RULE_GROUPS (CUSTOM_GROUP_NAME)
VALUES
('LoanRules');
GO

-------------------------------------------------------------------------------
-- 19) BRM_CUSTOM_GROUP_MEMBERS: Put Rule #2 and Rule #3 in "LoanRules"
-------------------------------------------------------------------------------
INSERT INTO BRM_CUSTOM_GROUP_MEMBERS (CUSTOM_GROUP_ID, RULE_ID)
VALUES
(1,2),
(1,3);
GO

-------------------------------------------------------------------------------
-- 20) RULE_PERF_STATS: Some usage stats for rules #1 and #4
-------------------------------------------------------------------------------
INSERT INTO RULE_PERF_STATS (RULE_ID, DATE_KEY, EXECUTION_TIME_MS, USAGE_COUNT)
VALUES
(1, '20230301', 15, 3),
(4, '20230301', 120, 1),
(4, '20230302', 110, 2);
GO

-------------------------------------------------------------------------------
-- 21) COMPOSITE_RULES: references "Rule1==PASS AND Rule2==PASS"
-------------------------------------------------------------------------------
INSERT INTO COMPOSITE_RULES (CRULE_NAME, LOGIC_EXPR, ACTION_ON_PASS)
VALUES
('Composite1','Rule1==PASS AND Rule2==PASS','SendEmail');
GO

-------------------------------------------------------------------------------
-- 22) BRM_RULE_TABLE_DEPENDENCIES: Minimal example for rule #1
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_TABLE_DEPENDENCIES (
    RULE_ID, DATABASE_NAME, TABLE_NAME, COLUMN_NAME, COLUMN_OP
)
VALUES
(1, 'dbo', 'MyTable', 'MyCol', 'READ');
GO

-------------------------------------------------------------------------------
-- 23) BRM_RULE_CTE_DEPENDENCIES: Minimal example
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_CTE_DEPENDENCIES (RULE_ID, CTE_NAME)
VALUES
(1, 'MyCTE');
GO

-------------------------------------------------------------------------------
-- 24) BRM_RULE_SUBQUERY_DEPENDENCIES
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_SUBQUERY_DEPENDENCIES (RULE_ID, SUBQUERY_TEXT)
VALUES
(1, '(SELECT 1 AS col)');
GO

-------------------------------------------------------------------------------
-- 25) BRM_RULE_ALIAS_DEPENDENCIES
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_ALIAS_DEPENDENCIES (RULE_ID, ALIAS, REAL_TABLE)
VALUES
(1, 'A', 'MyTable');
GO

-------------------------------------------------------------------------------
-- 26) BRM_RULE_COLUMN_DEPENDENCIES
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_COLUMN_DEPENDENCIES (RULE_ID, COLUMN_NAME)
VALUES
(1, 'MyCol');
GO

-------------------------------------------------------------------------------
-- 27) BRM_RULE_JOIN_DEPENDENCIES
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_JOIN_DEPENDENCIES (RULE_ID, JOIN_TYPE)
VALUES
(1, 'INNER JOIN');
GO

-------------------------------------------------------------------------------
-- 28) BRM_RULE_LINEAGE: sample lineage info
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_LINEAGE (RULE_ID, LINEAGE_INFO)
VALUES
(1, 'Lineage info for ParentRule');
GO

-------------------------------------------------------------------------------
-- 29) BRM_COLUMN_MAPPING: minimal example
-------------------------------------------------------------------------------
INSERT INTO BRM_COLUMN_MAPPING (SOURCE_COLUMN, TARGET_COLUMN, MAPPING_RULE)
VALUES
('srcCol','tgtCol','Copy as-is');
GO

-------------------------------------------------------------------------------
-- 30) BRM_RULE_COMMENTS: example comments on rule #1 and rule #4
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_COMMENTS (RULE_ID, COMMENT_TEXT, CREATED_BY, CREATED_TIMESTAMP)
VALUES
(1, 'Great rule', 'admin', GETDATE()),
(4, 'Needs improvement', 'bob', GETDATE());
GO

-------------------------------------------------------------------------------
-- 31) BRM_GLOBAL_CRITICAL_LINKS: Optional linking of GCR rule to a child
-------------------------------------------------------------------------------
INSERT INTO BRM_GLOBAL_CRITICAL_LINKS (GCR_RULE_ID, TARGET_RULE_ID)
VALUES
(1, 2);
GO

-------------------------------------------------------------------------------
-- 32) BRM_AUDIT_LOG: Optionally add a placeholder record to show in UI
-------------------------------------------------------------------------------
INSERT INTO BRM_AUDIT_LOG (
    ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA
)
VALUES
('INSERT','BRM_RULES','1','admin',NULL,'{\"RULE_NAME\":\"ParentRule\"}');
GO