-- 1) Insert into BUSINESS_GROUPS table (optional if your system uses it):
INSERT INTO BUSINESS_GROUPS (GROUP_NAME, DESCRIPTION, EMAIL)
VALUES ('Admin', 'System Administrator Group', 'admin@example.com');

-- 2) Insert an Admin user into the USERS table:
--    For demonstration, username='adminuser', password='adminpass'
INSERT INTO USERS (USERNAME, PASSWORD, USER_GROUP, ONBOARDING_COMPLETED)
VALUES ('adminuser', 'adminpass', 'Admin', 0);

-- 3) If RBAC is enabled, let the Admin group have all permissions on everything:
--    This example grants them unlimited power by using '*ANY*' for both target and action.
INSERT INTO GROUP_PERMISSIONS (GROUP_NAME, TARGET_TABLE, ACTION)
VALUES ('Admin', '*ANY*', '*ANY*');

-- 4) (Optional) If you prefer more explicit permissions, you can add multiple rows:
--    For instance, give Admin group the right to EDIT_RULE, APPROVE, VIEW on any table:
-- INSERT INTO GROUP_PERMISSIONS (GROUP_NAME, TARGET_TABLE, ACTION)
-- VALUES 
--   ('Admin', '*ANY*', 'EDIT_RULE'),
--   ('Admin', '*ANY*', 'APPROVE'),
--   ('Admin', '*ANY*', 'VIEW'),
--   ('Admin', '*ANY*', 'EXECUTE');

-- Now, user 'adminuser' with password 'adminpass' can log in and do everything.
-- The group 'Admin' is recognized as highest privileges for both code and ACL checks.