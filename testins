-------------------------------------------------------------------------------
-- USERS: two users (Admin and Normal)
-------------------------------------------------------------------------------
INSERT INTO USERS (USERNAME, PASSWORD, USER_GROUP)
VALUES
    ('admin', 'adminpass', 'Admin'),   -- user_id = 1 (example)
    ('testUser', 'testpass', 'BG1');   -- user_id = 2

-------------------------------------------------------------------------------
-- BUSINESS_GROUPS
-------------------------------------------------------------------------------
INSERT INTO BUSINESS_GROUPS (GROUP_NAME, DESCRIPTION, EMAIL)
VALUES
    ('BG1', 'Sample Business Group 1', 'bg1@example.com'),
    ('AdminGroup', 'Admin Business Group', 'admin@example.com');

-------------------------------------------------------------------------------
-- GROUP_PERMISSIONS
-------------------------------------------------------------------------------
INSERT INTO GROUP_PERMISSIONS (GROUP_NAME, TARGET_TABLE)
VALUES
    ('BG1', 'BRM_RULES'),
    ('AdminGroup', 'USERS');

-------------------------------------------------------------------------------
-- BRM_RULE_TYPES
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_TYPES (RULE_TYPE_NAME)
VALUES
    ('Data Movement'),
    ('Validation'),
    ('Decision Table'),
    ('Other');

-------------------------------------------------------------------------------
-- BRM_RULE_GROUPS
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_GROUPS (GROUP_NAME)
VALUES
    ('CoreGroup1'),
    ('CoreGroup2');

-------------------------------------------------------------------------------
-- SAMPLE RULES (with different operation types and statuses)
-------------------------------------------------------------------------------
-- We'll create 4 rules to demonstrate various scenarios.

INSERT INTO BRM_RULES (
    RULE_NAME, RULE_SQL, RULE_TYPE_ID, GROUP_ID,
    PARENT_RULE_ID, EFFECTIVE_START_DATE, EFFECTIVE_END_DATE,
    STATUS, VERSION, CREATED_BY, OPERATION_TYPE, OWNER_GROUP,
    APPROVAL_STATUS, IS_GLOBAL, CRITICAL_RULE, DECISION_TABLE_ID, LOCKED_BY
)
VALUES
-- 1) Simple SELECT Rule
('Sample SELECT Rule',
 'SELECT 1 AS IsPass',  -- returns 1 => PASS
 3,                     -- RULE_TYPE_ID (e.g. 'Other')
 NULL,
 NULL,
 GETDATE(),
 DATEADD(DAY, 30, GETDATE()),
 'ACTIVE',
 1,
 'admin',
 'SELECT',
 'BG1',
 'APPROVED',
 0,
 0,
 NULL,
 NULL
),
-- 2) Data Movement Insert Rule
('Data Movement Insert Rule',
 'INSERT INTO SomeTable(colA, colB) VALUES(1,2); SELECT 1;',  -- after insert, returns 1 => PASS
 1,  -- RULE_TYPE_ID => 'Data Movement'
 NULL,
 NULL,
 GETDATE(),
 DATEADD(DAY, 30, GETDATE()),
 'INACTIVE',
 1,
 'admin',
 'INSERT',
 'BG1',
 'APPROVAL_IN_PROGRESS',
 0,
 0,
 NULL,
 NULL
),
-- 3) Update Critical Rule
('Update Critical Rule',
 'UPDATE SomeTable SET colX = colX + 1; SELECT 1;',  -- returns 1 => PASS
 2,  -- 'Validation' or any ID
 NULL,
 NULL,
 GETDATE(),
 DATEADD(DAY, 90, GETDATE()),
 'INACTIVE',
 1,
 'admin',
 'UPDATE',
 'BG1',
 'APPROVAL_IN_PROGRESS',
 0,
 1,  -- CRITICAL_RULE=1
 NULL,
 NULL
),
-- 4) Decision Table Demo
('Decision Table Demo',
 NULL,  -- we'll tie it to a decision table (RULE_SQL can be NULL)
 3,
 NULL,
 NULL,
 GETDATE(),
 DATEADD(DAY, 60, GETDATE()),
 'INACTIVE',
 1,
 'admin',
 'DECISION_TABLE',
 'BG1',
 'APPROVAL_IN_PROGRESS',
 0,
 0,
 1,  -- DECISION_TABLE_ID => references DECISION_TABLES below
 NULL
);

-------------------------------------------------------------------------------
-- BRM_RULE_TABLE_DEPENDENCIES (example references for rules 1 & 2)
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_TABLE_DEPENDENCIES (
    RULE_ID, DATABASE_NAME, TABLE_NAME, COLUMN_NAME, COLUMN_OP
)
VALUES
-- For rule_id=1 (SELECT from SomeTable - read operation)
(1, 'SampleDB', 'SomeTable', 'colA', 'READ'),
(1, 'SampleDB', 'SomeTable', 'colB', 'READ'),

-- For rule_id=2 (INSERT to SomeTable)
(2, 'SampleDB', 'SomeTable', 'colA,colB', 'WRITE');  

-------------------------------------------------------------------------------
-- RULE_SCHEDULES
-------------------------------------------------------------------------------
INSERT INTO RULE_SCHEDULES (
    RULE_ID, SCHEDULE_TIME, STATUS, RUN_DATA_VALIDATIONS
)
VALUES
(1, DATEADD(HOUR, 10, GETDATE()), 'Scheduled', 0),
(3, DATEADD(HOUR, 24, GETDATE()), 'Scheduled', 1);

-------------------------------------------------------------------------------
-- DECISION_TABLES
-------------------------------------------------------------------------------
INSERT INTO DECISION_TABLES (TABLE_NAME, DESCRIPTION, DECISION_QUERY)
VALUES
('SampleDT', 'A decision table returns 1 to pass, 0 to fail.', 
 'SELECT CASE WHEN COUNT(*)>0 THEN 1 ELSE 0 END FROM SomeOtherTable');

-------------------------------------------------------------------------------
-- RULE_CONFLICTS
-------------------------------------------------------------------------------
INSERT INTO RULE_CONFLICTS (RULE_ID1, RULE_ID2, PRIORITY)
VALUES
(1, 2, 5),  -- conflict between rule #1 and #2
(2, 3, 2);  -- conflict between rule #2 and #3

-------------------------------------------------------------------------------
-- COMPOSITE_RULES
-------------------------------------------------------------------------------
INSERT INTO COMPOSITE_RULES (
    CRULE_NAME, LOGIC_EXPR, ACTION_ON_PASS
)
VALUES
('Composite Demo',
 'Rule1==PASS AND Rule2==PASS',
 'SendEmail');

-------------------------------------------------------------------------------
-- RULE_SNAPSHOTS
-------------------------------------------------------------------------------
INSERT INTO RULE_SNAPSHOTS (
    SNAPSHOT_NAME, CREATED_BY, SNAPSHOT_JSON
)
VALUES
('Initial Snapshot', 'admin',
 '[{"RULE_ID":1,"RULE_NAME":"Sample SELECT Rule","RULE_SQL":"SELECT 1 AS IsPass"}]');

-------------------------------------------------------------------------------
-- RULE_TAGS
-------------------------------------------------------------------------------
INSERT INTO RULE_TAGS (RULE_ID, TAG_NAME)
VALUES
(1, 'Finance'),
(2, 'ETL');

-------------------------------------------------------------------------------
-- DATA_VALIDATIONS
-------------------------------------------------------------------------------
INSERT INTO DATA_VALIDATIONS (
    TABLE_NAME, COLUMN_NAME, VALIDATION_TYPE, PARAMS
)
VALUES
('SomeTable', 'colA', 'NOT NULL', NULL),
('SomeTable', 'colB', 'RANGE', 'min=0;max=999');

-------------------------------------------------------------------------------
-- RULE_EXECUTION_LOGS
-------------------------------------------------------------------------------
INSERT INTO RULE_EXECUTION_LOGS (
    RULE_ID, PASS_FLAG, MESSAGE, RECORD_COUNT, EXECUTION_TIME_MS, CPU_USAGE, MEM_USAGE
)
VALUES
(1, 1, 'Rule #1 executed successfully.', 10, 50, 5, 1000),
(2, 0, 'Rule #2 failed on constraint.', 0, 80, 7, 2000);

-------------------------------------------------------------------------------
-- RULE_PERF_STATS
-------------------------------------------------------------------------------
INSERT INTO RULE_PERF_STATS (
    RULE_ID, ACTION_TIMESTAMP, EXEC_TIME_MS, MEM_USAGE, USAGE_COUNT
)
VALUES
(1, DATEADD(DAY, -1, GETDATE()), 1200, 30000, 5),
(2, GETDATE(), 2500, 62000, 1);

-------------------------------------------------------------------------------
-- BRM_DEFECT_LOGS
-------------------------------------------------------------------------------
INSERT INTO BRM_DEFECT_LOGS (
    RULE_ID, DESCRIPTION, SEVERITY, REPORTER, STATUS
)
VALUES
(2, 'Inserting negative values not handled.', 'High', 'testUser', 'Open'),
(3, 'Update statement might skip rows under condition.', 'Medium', 'admin', 'Open');

-------------------------------------------------------------------------------
-- COLLABORATION_LOGS
-------------------------------------------------------------------------------
INSERT INTO COLLABORATION_LOGS (
    MESSAGE, SENDER
)
VALUES
('Hello, any update on rule #2 fixes?', 'testUser'),
('We will address it tomorrow.', 'admin');

-------------------------------------------------------------------------------
-- BRM_CUSTOM_RULE_GROUPS
-------------------------------------------------------------------------------
INSERT INTO BRM_CUSTOM_RULE_GROUPS (
    CUSTOM_GROUP_NAME, OWNER_BUSINESS_GROUP, CREATED_BY
)
VALUES
('MyCustomGroup', 'BG1', 'admin');

-------------------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_MEMBERS
-------------------------------------------------------------------------------
INSERT INTO BRM_CUSTOM_GROUP_MEMBERS (
    CUSTOM_GROUP_ID, RULE_ID
)
VALUES
(1, 1),
(1, 2);

-------------------------------------------------------------------------------
-- BRM_GLOBAL_CRITICAL_LINKS
-------------------------------------------------------------------------------
INSERT INTO BRM_GLOBAL_CRITICAL_LINKS (
    GCR_RULE_ID, TARGET_RULE_ID
)
VALUES
(3, 2);

-------------------------------------------------------------------------------
-- DATA_VALIDATION_LOGS
-------------------------------------------------------------------------------
INSERT INTO DATA_VALIDATION_LOGS (
    VALIDATION_ID, RESULT_FLAG, DETAILS
)
VALUES
(1, 'PASS', 'No NULLs found in colA.'),
(2, 'FAIL', '10 rows outside 0-999 range in colB.');

-------------------------------------------------------------------------------
-- BRM_RULE_APPROVALS
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_APPROVALS (
    RULE_ID, GROUP_NAME, USERNAME, APPROVED_FLAG, APPROVAL_STAGE
)
VALUES
(2, 'BG1', 'testUser', 0, 1),
(3, 'AdminGroup', 'admin', 0, 1);

-------------------------------------------------------------------------------
-- BRM_RULE_LOCKS
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_LOCKS (
    RULE_ID, LOCKED_BY, LOCK_TIMESTAMP, EXPIRY_TIMESTAMP, FORCE_LOCK, ACTIVE_LOCK
)
VALUES
(2, 'testUser', GETDATE(), DATEADD(HOUR, 1, GETDATE()), 0, 1);

-------------------------------------------------------------------------------
-- HELP_CONTENT
-------------------------------------------------------------------------------
INSERT INTO HELP_CONTENT (
    CATEGORY, TITLE, CONTENT
)
VALUES
('FAQ', 'Login Issues', 'If you see an invalid column error, check your schema.'),
('Guide', 'Creating a Data Movement Rule', 'Step-by-step guide to add your rule with an INSERT operation.');

-------------------------------------------------------------------------------
-- BRM_CUSTOM_GROUP_BACKUPS
-------------------------------------------------------------------------------
INSERT INTO BRM_CUSTOM_GROUP_BACKUPS (
    CUSTOM_GROUP_ID, BACKUP_TIMESTAMP, BACKUP_VERSION, BACKUP_JSON
)
VALUES
(1, GETDATE(), 1, '{"group_name":"MyCustomGroup","members":[1,2]}');

-------------------------------------------------------------------------------
-- BRM_RULE_LINEAGE
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_LINEAGE (RULE_ID, PARENT_ID)
VALUES
(2, 1),
(3, 2);

-------------------------------------------------------------------------------
-- BRM_COLUMN_MAPPING
-------------------------------------------------------------------------------
INSERT INTO BRM_COLUMN_MAPPING (
    RULE_ID, COLUMN_NAME, MAPPED_TO
)
VALUES
(2, 'colA', 'dim_ColA'),
(2, 'colB', 'fact_ColB');

-------------------------------------------------------------------------------
-- BRM_RULE_COMMENTS
-------------------------------------------------------------------------------
INSERT INTO BRM_RULE_COMMENTS (
    RULE_ID, COMMENT_TEXT, COMMENT_BY
)
VALUES
(2, 'Need to double-check boundary conditions.', 'testUser'),
(1, 'This rule is stable for now.', 'admin');

-------------------------------------------------------------------------------
-- SAMPLE AUDIT LOG
-------------------------------------------------------------------------------
INSERT INTO BRM_AUDIT_LOG (
    ACTION, TABLE_NAME, RECORD_ID, ACTION_BY, OLD_DATA, NEW_DATA
)
VALUES
('INSERT', 'BRM_RULES', '2', 'admin', NULL, '{"RULE_NAME":"Data Movement Insert Rule"}'),
('UPDATE', 'BRM_RULES', '3', 'testUser', '{"STATUS":"INACTIVE"}', '{"STATUS":"ACTIVE"}');