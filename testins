USE YourDatabaseName;
GO

/*****************************************************************************
  1) DROP TABLES IF THEY ALREADY EXIST
*****************************************************************************/
IF OBJECT_ID('dbo.Customers','U') IS NOT NULL 
    DROP TABLE dbo.Customers;

IF OBJECT_ID('dbo.Orders','U') IS NOT NULL 
    DROP TABLE dbo.Orders;
GO

/*****************************************************************************
  2) CREATE TABLES (NO REFERENCES)
*****************************************************************************/

/* CUSTOMERS table (no foreign keys) */
CREATE TABLE dbo.Customers
(
    CustomerID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [Name]     VARCHAR(100) NOT NULL,
    [Email]    VARCHAR(200) NULL,
    [City]     VARCHAR(100) NULL
);

/* ORDERS table (no FKs, minimal PK on OrderID only) */
CREATE TABLE dbo.Orders
(
    OrderID    INT            NOT NULL PRIMARY KEY,   -- We'll insert duplicates intentionally
    CustomerID INT            NOT NULL,               -- No FK reference
    Amount     DECIMAL(10,2)  NOT NULL,
    [Status]   VARCHAR(50)    NOT NULL,
    OrderDate  DATETIME       NOT NULL
);
GO

/*****************************************************************************
  3) INSERT SAMPLE DATA INTO CUSTOMERS
     - Some invalid/duplicate emails
     - Some NULL cities
*****************************************************************************/
INSERT INTO dbo.Customers ([Name],[Email],[City]) 
VALUES
-- Good data
('John Doe',    'john@example.com',          'New York'),
('Alice White', 'alice.white@whiteco.com',  'Los Angeles'),
('Mariana Li',  'mariana.li@sample.org',    'San Francisco'),
('Carlos Ruiz', 'carlos.ruiz@something.co', 'Houston'),
('Tina Fay',    'tina.fay@domain.com',      'Miami'),
('Kelly Blue',  'kelly.blue@mail.com',      'Atlanta'),
('Ross Green',  'ross.green@mail.net',      'Seattle'),

-- Potentially invalid or missing data
('Jane Smith',  'jane@badEmail',            'Chicago'),    -- invalid email
('Bob Brown',   'bob@brown.com',            NULL),         -- City = NULL
('NoCity Person','nocity@person.org',       NULL),         -- Another null city
('Test Email',   'test@@invalid..com',      'Boston'),     -- also invalid email
('Helen Gray',   'helen.gray@mail.co',      'Phoenix');

GO

/*****************************************************************************
  4) INSERT SAMPLE DATA INTO ORDERS
     - Negative amounts
     - Duplicate OrderID
     - Large amounts
     - Mixed statuses
*****************************************************************************/
INSERT INTO dbo.Orders (OrderID, CustomerID, Amount, [Status], OrderDate)
VALUES
(1001, 1,   120.00,     'Open',    '2023-01-10'),
(1002, 2,  -50.00,      'Open',    '2023-02-05'),  -- negative => BFS or validation fail
(1002, 3,   200.00,     'Open',    '2023-02-06'),  -- Duplicate OrderID => fails "UNIQUE" validation
(1003, 2,   99999.00,   'Open',    '2023-03-01'),
(1004, 5,  150000.00,   'Open',    '2023-03-02'),
(1005, 5,  600000.00,   'Open',    '2023-03-03'),  -- very large => triggers "global" checks
(1006, 5,    500.00,    'Closed',  '2023-03-04'),
(1007, 6,  105000.00,   'Open',    '2023-03-05'),
(1008, 7,  -10.00,      'Closed',  '2023-03-10'),  -- negative, but closed
(1009, 8,  3000.00,     'Open',    '2023-03-15'),
(1010, 9,  1.00,        'Open',    '2023-03-16'),
(1011, 10, 50000.00,    'Open',    '2023-03-17'),
(1012, 11, 499999.99,   'Open',    '2023-03-18'),
(1013, 12, 0.00,        'Open',    '2023-03-19'),  -- zero
(1014, 3,  600001.00,   'Open',    '2023-03-20');  -- bigger => triggers "overBudget"
GO

/*****************************************************************************
  DONE!
  You now have two simple tables (Customers & Orders) with:
    - no references,
    - null cities,
    - invalid emails,
    - negative / large amounts,
    - duplicate order IDs, etc.
*****************************************************************************/