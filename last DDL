-- ============================================================
-- 1. Basic Reference Tables
-- ============================================================

-- USERS table
CREATE TABLE USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME VARCHAR(100) NOT NULL,
    PASSWORD VARCHAR(100) NOT NULL,
    USER_GROUP VARCHAR(100) NOT NULL
);

-- BUSINESS_GROUPS table
CREATE TABLE BUSINESS_GROUPS (
    GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    EMAIL VARCHAR(100) NULL
);

-- BRM_RULE_TYPES table
CREATE TABLE BRM_RULE_TYPES (
    TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TYPE_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL
);

-- BRM_RULE_GROUPS table
CREATE TABLE BRM_RULE_GROUPS (
    RULE_GROUP_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL
);

-- GROUP_PERMISSIONS table
CREATE TABLE GROUP_PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    TARGET_TABLE VARCHAR(100) NOT NULL
);

-- HELP_CONTENT table (for Help & Feedback)
CREATE TABLE HELP_CONTENT (
    CONTENT_ID INT IDENTITY(1,1) PRIMARY KEY,
    CATEGORY VARCHAR(100) NOT NULL,
    TITLE VARCHAR(200) NOT NULL,
    CONTENT NVARCHAR(MAX) NOT NULL,
    LAST_UPDATED DATETIME DEFAULT GETDATE()
);

-- ============================================================
-- 2. Master Business Rules and Related Tables
-- ============================================================

-- BRM_RULES table (main business rules)
CREATE TABLE BRM_RULES (
    RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    PARENT_RULE_ID INT NULL,
    RULE_NAME VARCHAR(200) NOT NULL,
    RULE_SQL NVARCHAR(MAX) NULL,
    OPERATION_TYPE VARCHAR(50) DEFAULT 'OTHER',
    DECISION_TABLE_ID INT NULL,
    CRITICAL_RULE BIT DEFAULT 0,
    IS_GLOBAL BIT DEFAULT 0,
    OWNER_GROUP VARCHAR(100) NOT NULL,
    STATUS VARCHAR(50) DEFAULT 'INACTIVE',
    APPROVAL_STATUS VARCHAR(50) DEFAULT 'PENDING',
    LIFECYCLE_STATE VARCHAR(50) DEFAULT 'INACTIVE',
    UPDATED_BY VARCHAR(100) NULL,
    VERSION INT DEFAULT 1,
    RULE_DESCRIPTION NVARCHAR(MAX) NULL
);

-- BRM_RULE_TABLE_DEPENDENCIES table
CREATE TABLE BRM_RULE_TABLE_DEPENDENCIES (
    DEPENDENCY_ID INT IDENTITY(1,1) PRIMARY KEY,
    DATABASE_NAME VARCHAR(100) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL
);

-- BRM_COLUMN_MAPPING table
CREATE TABLE BRM_COLUMN_MAPPING (
    MAPPING_ID INT IDENTITY(1,1) PRIMARY KEY,
    SOURCE_COLUMN VARCHAR(100) NOT NULL,
    TARGET_COLUMN VARCHAR(100) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL
);

-- BRM_RULE_LINEAGE table
CREATE TABLE BRM_RULE_LINEAGE (
    LINEAGE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    PARENT_ID INT NULL,
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- COMPOSITE_RULES table
CREATE TABLE COMPOSITE_RULES (
    COMPOSITE_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    CRULE_NAME VARCHAR(200) NOT NULL,
    LOGIC_EXPR NVARCHAR(MAX) NOT NULL,
    ACTION_ON_PASS VARCHAR(100) NULL
);

-- DECISION_TABLES table
CREATE TABLE DECISION_TABLES (
    DECISION_TABLE_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX) NULL,
    DECISION_QUERY NVARCHAR(MAX) NOT NULL,
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- BRM_CUSTOM_GROUP_MEMBERS table
CREATE TABLE BRM_CUSTOM_GROUP_MEMBERS (
    MEMBER_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOM_GROUP_ID INT NOT NULL,
    RULE_ID INT NOT NULL
);

-- BRM_RULE_COMMENTS table
CREATE TABLE BRM_RULE_COMMENTS (
    COMMENT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    COMMENT_TEXT NVARCHAR(MAX) NOT NULL,
    COMMENTED_BY VARCHAR(100) NOT NULL,
    COMMENT_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- RULE_SNAPSHOTS table
CREATE TABLE RULE_SNAPSHOTS (
    SNAPSHOT_ID INT IDENTITY(1,1) PRIMARY KEY,
    SNAPSHOT_NAME VARCHAR(200) NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE(),
    SNAPSHOT_JSON NVARCHAR(MAX) NOT NULL
);

-- RULE_TAGS table
CREATE TABLE RULE_TAGS (
    TAG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    TAG_NAME VARCHAR(50) NOT NULL
);

-- RULE_PERF_STATS table
CREATE TABLE RULE_PERF_STATS (
    STAT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    EXEC_TIME_MS INT NOT NULL,
    CPU_USAGE INT NOT NULL,
    MEM_USAGE INT NOT NULL,
    DATE_KEY CHAR(8) NOT NULL,
    ACTION_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- ============================================================
-- 3. Logging and Audit Tables
-- ============================================================

-- BRM_AUDIT_LOG table
CREATE TABLE BRM_AUDIT_LOG (
    AUDIT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ACTION VARCHAR(50) NOT NULL,
    TABLE_NAME VARCHAR(100) NOT NULL,
    RECORD_ID VARCHAR(50) NULL,
    ACTION_BY VARCHAR(100) NOT NULL,
    OLD_DATA NVARCHAR(MAX) NULL,
    NEW_DATA NVARCHAR(MAX) NULL,
    ACTION_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- DATA_VALIDATION_LOGS table
CREATE TABLE DATA_VALIDATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    VALIDATION_ID INT NOT NULL,
    RESULT_FLAG VARCHAR(10) NOT NULL,
    DETAILS NVARCHAR(MAX) NOT NULL,
    VALIDATION_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- RULE_EXECUTION_LOGS table
CREATE TABLE RULE_EXECUTION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    EXECUTION_TIMESTAMP DATETIME DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    RECORD_COUNT INT NOT NULL,
    EXECUTION_TIME_MS INT DEFAULT 0,
    CPU_USAGE INT DEFAULT 0,
    MEM_USAGE INT DEFAULT 0
);

-- DECISION_TABLE_EXEC_LOGS table
CREATE TABLE DECISION_TABLE_EXEC_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    DECISION_TABLE_ID INT NOT NULL,
    EXEC_TIMESTAMP DATETIME DEFAULT GETDATE(),
    PASS_FLAG BIT NOT NULL,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    RECORD_COUNT INT NOT NULL
);

-- DATA_VALIDATIONS table
CREATE TABLE DATA_VALIDATIONS (
    VALIDATION_ID INT IDENTITY(1,1) PRIMARY KEY,
    TABLE_NAME VARCHAR(100) NOT NULL,
    COLUMN_NAME VARCHAR(100) NOT NULL,
    VALIDATION_TYPE VARCHAR(50) NOT NULL,
    PARAMS VARCHAR(200) NULL,
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- ============================================================
-- 4. Approvals, Conflicts, Locks, and Global/Critical Links
-- ============================================================

-- BRM_RULE_APPROVALS table
CREATE TABLE BRM_RULE_APPROVALS (
    APPROVAL_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    GROUP_NAME VARCHAR(100) NOT NULL,
    APPROVAL_STAGE INT NOT NULL,
    APPROVED_FLAG INT DEFAULT 0,  -- 0=pending, 1=approved, 2=rejected
    COMMENT NVARCHAR(MAX) NULL,
    APPROVED_TIMESTAMP DATETIME NULL,
    USERNAME VARCHAR(100) NULL
);

-- RULE_CONFLICTS table
CREATE TABLE RULE_CONFLICTS (
    CONFLICT_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID1 INT NOT NULL,
    RULE_ID2 INT NOT NULL,
    PRIORITY INT NOT NULL
);

-- BRM_GLOBAL_CRITICAL_LINKS table
CREATE TABLE BRM_GLOBAL_CRITICAL_LINKS (
    LINK_ID INT IDENTITY(1,1) PRIMARY KEY,
    GCR_RULE_ID INT NOT NULL,
    TARGET_RULE_ID INT NOT NULL
);

-- BRM_RULE_LOCKS table
CREATE TABLE BRM_RULE_LOCKS (
    LOCK_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    LOCKED_BY VARCHAR(100) NOT NULL,
    LOCK_TIMESTAMP DATETIME NOT NULL,
    EXPIRY_TIMESTAMP DATETIME NOT NULL,
    FORCE_LOCK BIT DEFAULT 0,
    ACTIVE_LOCK BIT DEFAULT 1
);

-- ============================================================
-- 5. Scheduling and Snapshots (Additional)
-- ============================================================

-- RULE_SCHEDULES table
CREATE TABLE RULE_SCHEDULES (
    SCHEDULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    RULE_ID INT NOT NULL,
    SCHEDULE_TIME DATETIME NOT NULL,
    STATUS VARCHAR(50) DEFAULT 'Scheduled',
    CREATED_TIMESTAMP DATETIME DEFAULT GETDATE(),
    RUN_DATA_VALIDATIONS BIT DEFAULT 0
);

-- ============================================================
-- 6. Collaboration and Chat Tables
-- ============================================================

-- COLLABORATION_LOGS table
CREATE TABLE COLLABORATION_LOGS (
    LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    SENDER VARCHAR(100) NOT NULL,
    TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- COLLABORATION_THREADS table
CREATE TABLE COLLABORATION_THREADS (
    THREAD_ID INT IDENTITY(1,1) PRIMARY KEY,
    CONVERSATION_ID INT NOT NULL,
    MESSAGE NVARCHAR(MAX) NOT NULL,
    SENDER VARCHAR(100) NOT NULL,
    TIMESTAMP DATETIME DEFAULT GETDATE()
);

-- ============================================================
-- 7. Extended Functionality / Auxiliary Tables
-- ============================================================
-- (Any additional tables such as those for RBAC, conflict resolution details,
--  custom snapshots or additional logging can be added below.)

-- End of DDL Script

-- Drop Collaboration and Chat Tables
DROP TABLE IF EXISTS COLLABORATION_THREADS;
DROP TABLE IF EXISTS COLLABORATION_LOGS;

-- Drop Scheduling Table
DROP TABLE IF EXISTS RULE_SCHEDULES;

-- Drop Locks and Global/Critical Links
DROP TABLE IF EXISTS BRM_RULE_LOCKS;
DROP TABLE IF EXISTS BRM_GLOBAL_CRITICAL_LINKS;

-- Drop Conflicts and Approvals
DROP TABLE IF EXISTS RULE_CONFLICTS;
DROP TABLE IF EXISTS BRM_RULE_APPROVALS;

-- Drop Data Validations and their Logs
DROP TABLE IF EXISTS DATA_VALIDATIONS;
DROP TABLE IF EXISTS DECISION_TABLE_EXEC_LOGS;
DROP TABLE IF EXISTS RULE_EXECUTION_LOGS;
DROP TABLE IF EXISTS DATA_VALIDATION_LOGS;

-- Drop Audit and Performance Tables
DROP TABLE IF EXISTS BRM_AUDIT_LOG;
DROP TABLE IF EXISTS RULE_PERF_STATS;

-- Drop Tags and Snapshots
DROP TABLE IF EXISTS RULE_TAGS;
DROP TABLE IF EXISTS RULE_SNAPSHOTS;

-- Drop Rule Comments and Custom Group Members
DROP TABLE IF EXISTS BRM_RULE_COMMENTS;
DROP TABLE IF EXISTS BRM_CUSTOM_GROUP_MEMBERS;

-- Drop Decision Tables and Composite Rules
DROP TABLE IF EXISTS DECISION_TABLES;
DROP TABLE IF EXISTS COMPOSITE_RULES;

-- Drop Rule Lineage and Column Mapping
DROP TABLE IF EXISTS BRM_RULE_LINEAGE;
DROP TABLE IF EXISTS BRM_COLUMN_MAPPING;

-- Drop Rule Table Dependencies and Main Rules Table
DROP TABLE IF EXISTS BRM_RULE_TABLE_DEPENDENCIES;
DROP TABLE IF EXISTS BRM_RULES;

-- Drop Help Content and Group Permissions
DROP TABLE IF EXISTS HELP_CONTENT;
DROP TABLE IF EXISTS GROUP_PERMISSIONS;

-- Drop Rule Groups and Rule Types
DROP TABLE IF EXISTS BRM_RULE_GROUPS;
DROP TABLE IF EXISTS BRM_RULE_TYPES;

-- Drop Business Groups and Users
DROP TABLE IF EXISTS BUSINESS_GROUPS;
DROP TABLE IF EXISTS USERS;


