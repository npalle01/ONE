import xml.etree.ElementTree as ET
import pandas as pd

def parse_xml_like_excel(xml_file):
    tree = ET.parse(xml_file)
    root = tree.getroot()

    # Automatically detect the repeating parent element
    def find_repeating_element(root):
        tag_count = {}
        for child in root.iter():
            tag = child.tag
            tag_count[tag] = tag_count.get(tag, 0) + 1
        # Find the most repeated element (likely to be rows)
        most_repeated = max(tag_count.items(), key=lambda x: x[1])
        return most_repeated[0]

    row_tag = find_repeating_element(root)

    # Extract rows
    data_rows = []
    for elem in root.findall(f".//{row_tag}"):
        row_data = {}
        # Include attributes
        for key, value in elem.attrib.items():
            row_data[key] = value
        # Include child elements
        for child in elem:
            row_data[child.tag] = child.text
            # Also include attributes inside child elements
            for attr_k, attr_v in child.attrib.items():
                row_data[f"{child.tag}_{attr_k}"] = attr_v
        if row_data:
            data_rows.append(row_data)

    df = pd.DataFrame(data_rows)
    return df

# Example usage:
if __name__ == "__main__":
    xml_path = "sample.xml"  # Replace with your XML file path
    df = parse_xml_like_excel(xml_path)
    print(df)
    df.to_excel("parsed_output.xlsx", index=False)